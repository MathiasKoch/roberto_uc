   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f10x_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	RCC_DeInit
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	RCC_DeInit:
  23              	.LFB29:
  24              		.file 1 "lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c"
   1:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
   2:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   3:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @file    stm32f10x_rcc.c
   4:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @author  MCD Application Team
   5:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @version V3.5.0
   6:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @date    11-March-2011
   7:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief   This file provides all the RCC firmware functions.
   8:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
   9:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @attention
  10:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  11:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *
  18:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ******************************************************************************
  20:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  21:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  22:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  23:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #include "stm32f10x_rcc.h"
  24:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  25:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  27:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  28:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  29:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC 
  30:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief RCC driver modules
  31:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  32:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
  33:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  34:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_TypesDefinitions
  35:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  36:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  37:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  38:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
  39:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
  40:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  41:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  42:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Defines
  43:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
  44:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
  45:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  46:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  47:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  48:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  49:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CR Register ---*/
  50:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  51:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of HSION bit */
  52:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  53:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define HSION_BitNumber           0x00
  54:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  55:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  56:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of PLLON bit */
  57:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define PLLON_BitNumber           0x18
  58:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  59:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  60:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
  61:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL2ON bit */
  62:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL2ON_BitNumber          0x1A
  63:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL2ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL2ON_BitNumber * 4))
  64:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  65:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of PLL3ON bit */
  66:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define PLL3ON_BitNumber          0x1C
  67:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CR_PLL3ON_BB              (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLL3ON_BitNumber * 4))
  68:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  69:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  70:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of CSSON bit */
  71:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSSON_BitNumber           0x13
  72:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  73:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  74:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR Register ---*/
  75:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  76:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of USBPRE bit */
  77:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  78:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  79:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
  80:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define USBPRE_BitNumber          0x16
  81:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  82:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
  83:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define OTGFSPRE_BitNumber        0x16
  84:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_OTGFSPRE_BB          (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (OTGFSPRE_BitNumber * 4))
  85:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
  86:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  87:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- BDCR Register ---*/
  88:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  89:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of RTCEN bit */
  90:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
  91:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define RTCEN_BitNumber           0x0F
  92:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
  93:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  94:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of BDRST bit */
  95:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDRST_BitNumber           0x10
  96:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
  97:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
  98:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CSR Register ---*/
  99:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* Alias word address of LSION bit */
 101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define LSION_BitNumber           0x00
 103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* --- CFGR2 Register ---*/
 107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S2SRC bit */
 109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_OFFSET              (RCC_OFFSET + 0x2C)
 110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S2SRC_BitNumber         0x11
 111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S2SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S2SRC_BitNumber * 4))
 112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  /* Alias word address of I2S3SRC bit */
 114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define I2S3SRC_BitNumber         0x12
 115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_I2S3SRC_BB          (PERIPH_BB_BASE + (CFGR2_OFFSET * 32) + (I2S3SRC_BitNumber * 4))
 116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CR register bit mask */
 121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Reset           ((uint32_t)0xFFFBFFFF)
 122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEBYP_Set             ((uint32_t)0x00040000)
 123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Reset            ((uint32_t)0xFFFEFFFF)
 124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSEON_Set              ((uint32_t)0x00010000)
 125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CR_HSITRIM_Mask           ((uint32_t)0xFFFFFF07)
 126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register bit mask */
 128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC2FFFF)
 130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR_PLL_Mask            ((uint32_t)0xFFC0FFFF)
 132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLMull_Mask         ((uint32_t)0x003C0000)
 135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLSRC_Mask          ((uint32_t)0x00010000)
 136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PLLXTPRE_Mask        ((uint32_t)0x00020000)
 137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SWS_Mask             ((uint32_t)0x0000000C)
 138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_SW_Mask              ((uint32_t)0xFFFFFFFC)
 139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Reset_Mask      ((uint32_t)0xFFFFFF0F)
 140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_HPRE_Set_Mask        ((uint32_t)0x000000F0)
 141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Reset_Mask     ((uint32_t)0xFFFFF8FF)
 142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE1_Set_Mask       ((uint32_t)0x00000700)
 143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Reset_Mask     ((uint32_t)0xFFFFC7FF)
 144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_PPRE2_Set_Mask       ((uint32_t)0x00003800)
 145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Reset_Mask    ((uint32_t)0xFFFF3FFF)
 146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_ADCPRE_Set_Mask      ((uint32_t)0x0000C000)
 147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CSR register bit mask */
 149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CSR_RMVF_Set              ((uint32_t)0x01000000)
 150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR2 register bit mask */
 153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1SRC         ((uint32_t)0x00010000)
 154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV1            ((uint32_t)0x0000000F)
 155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PREDIV2            ((uint32_t)0x000000F0)
 158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL2MUL            ((uint32_t)0x00000F00)
 159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #define CFGR2_PLL3MUL            ((uint32_t)0x0000F000)
 160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* RCC Flag Mask */
 163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define FLAG_Mask                 ((uint8_t)0x1F)
 164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* CFGR register byte 4 (Bits[31:24]) base address */
 172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define CFGR_BYTE4_ADDRESS        ((uint32_t)0x40021007)
 173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /* BDCR register base address */
 175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #define BDCR_ADDRESS              (PERIPH_BASE + BDCR_OFFSET)
 176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Macros
 182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Variables
 190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */ 
 192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** static __I uint8_t ADCPrescTable[4] = {2, 4, 6, 8};
 195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_FunctionPrototypes
 201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @}
 206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /** @defgroup RCC_Private_Functions
 209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @{
 210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_DeInit(void)
 218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  25              		.loc 1 218 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
 219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HSION bit */
 220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  30              		.loc 1 220 0
  31 0000 0D4B     		ldr	r3, .L2
  32 0002 1A68     		ldr	r2, [r3]
  33 0004 42F00102 		orr	r2, r2, #1
  34 0008 1A60     		str	r2, [r3]
 221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
 223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FF0000;
  35              		.loc 1 224 0
  36 000a 5968     		ldr	r1, [r3, #4]
  37 000c 0B4A     		ldr	r2, .L2+4
  38 000e 0A40     		ands	r2, r2, r1
  39 0010 5A60     		str	r2, [r3, #4]
 225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF0FF0000;
 227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */   
 228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  40              		.loc 1 230 0
  41 0012 1A68     		ldr	r2, [r3]
  42 0014 22F08472 		bic	r2, r2, #17301504
  43 0018 22F48032 		bic	r2, r2, #65536
  44 001c 1A60     		str	r2, [r3]
 231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  45              		.loc 1 233 0
  46 001e 1A68     		ldr	r2, [r3]
  47 0020 22F48022 		bic	r2, r2, #262144
  48 0024 1A60     		str	r2, [r3]
 234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
 236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
  49              		.loc 1 236 0
  50 0026 5A68     		ldr	r2, [r3, #4]
  51 0028 22F4FE02 		bic	r2, r2, #8323072
  52 002c 5A60     		str	r2, [r3, #4]
 237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset PLL2ON and PLL3ON bits */
 240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= (uint32_t)0xEBFFFFFF;
 241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x00FF0000;
 244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;
 247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
 250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset CFGR2 register */
 252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = 0x00000000;      
 253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Disable all interrupts and clear pending bits  */
 255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CIR = 0x009F0000;
  53              		.loc 1 255 0
  54 002e 4FF41F02 		mov	r2, #10420224
  55 0032 9A60     		str	r2, [r3, #8]
  56 0034 7047     		bx	lr
  57              	.L3:
  58 0036 00BF     		.align	2
  59              	.L2:
  60 0038 00100240 		.word	1073876992
  61 003c 0000FFF8 		.word	-117506048
  62              		.cfi_endproc
  63              	.LFE29:
  65              		.align	1
  66              		.global	RCC_HSEConfig
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  72              	RCC_HSEConfig:
  73              	.LFB30:
 256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
 263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_OFF: HSE oscillator OFF
 266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_ON: HSE oscillator ON
 267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSEConfig(uint32_t RCC_HSE)
 271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
  74              		.loc 1 271 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.LVL0:
 272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HSE(RCC_HSE));
 274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEON bit */
 276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEON_Reset;
  80              		.loc 1 276 0
  81 0040 0C4B     		ldr	r3, .L9
 277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
 278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR &= CR_HSEBYP_Reset;
 279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
 280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_HSE)
  82              		.loc 1 280 0
  83 0042 B0F5803F 		cmp	r0, #65536
 276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset HSEBYP bit */
  84              		.loc 1 276 0
  85 0046 1A68     		ldr	r2, [r3]
  86 0048 22F48032 		bic	r2, r2, #65536
  87 004c 1A60     		str	r2, [r3]
 278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure HSE (RCC_HSE_OFF is already covered by the code section above) */
  88              		.loc 1 278 0
  89 004e 1A68     		ldr	r2, [r3]
  90 0050 22F48022 		bic	r2, r2, #262144
  91 0054 1A60     		str	r2, [r3]
  92              		.loc 1 280 0
  93 0056 03D0     		beq	.L6
  94 0058 B0F5802F 		cmp	r0, #262144
  95 005c 05D0     		beq	.L7
  96 005e 7047     		bx	lr
  97              	.L6:
 281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_ON:
 283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEON bit */
 284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEON_Set;
  98              		.loc 1 284 0
  99 0060 1A68     		ldr	r2, [r3]
 100 0062 42F48032 		orr	r2, r2, #65536
 101              	.L8:
 285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_HSE_Bypass:
 288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set HSEBYP and HSEON bits */
 289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC->CR |= CR_HSEBYP_Set | CR_HSEON_Set;
 102              		.loc 1 289 0
 103 0066 1A60     		str	r2, [r3]
 104 0068 7047     		bx	lr
 105              	.L7:
 106 006a 1A68     		ldr	r2, [r3]
 107 006c 42F4A022 		orr	r2, r2, #327680
 108 0070 F9E7     		b	.L8
 109              	.L10:
 110 0072 00BF     		.align	2
 111              	.L9:
 112 0074 00100240 		.word	1073876992
 113              		.cfi_endproc
 114              	.LFE30:
 116              		.align	1
 117              		.global	RCC_AdjustHSICalibrationValue
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu softvfp
 123              	RCC_AdjustHSICalibrationValue:
 124              	.LFB32:
 290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Waits for HSE start-up.
 299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval An ErrorStatus enumuration value:
 301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - SUCCESS: HSE oscillator is stable and ready to use
 302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * - ERROR: HSE oscillator not yet ready
 303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus HSEStatus = RESET;
 309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   do
 312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = SUCCESS;
 320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     status = ERROR;
 324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }  
 325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return (status);
 326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  HSICalibrationValue: specifies the calibration trimming value.
 331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter must be a number between 0 and 0x1F.
 332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 125              		.loc 1 335 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.LVL1:
 336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CALIBRATION_VALUE(HSICalibrationValue));
 339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CR;
 131              		.loc 1 339 0
 132 0078 034A     		ldr	r2, .L12
 133 007a 1368     		ldr	r3, [r2]
 134              	.LVL2:
 340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CR_HSITRIM_Mask;
 135              		.loc 1 341 0
 136 007c 23F0F803 		bic	r3, r3, #248
 137              	.LVL3:
 342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 138              		.loc 1 343 0
 139 0080 43EAC000 		orr	r0, r3, r0, lsl #3
 140              	.LVL4:
 344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CR = tmpreg;
 141              		.loc 1 345 0
 142 0084 1060     		str	r0, [r2]
 143 0086 7047     		bx	lr
 144              	.L13:
 145              		.align	2
 146              	.L12:
 147 0088 00100240 		.word	1073876992
 148              		.cfi_endproc
 149              	.LFE32:
 151              		.align	1
 152              		.global	RCC_HSICmd
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu softvfp
 158              	RCC_HSICmd:
 159              	.LFB33:
 346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
 351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the HSI. This parameter can be: ENABLE or DISABLE.
 352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 160              		.loc 1 355 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL5:
 356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 166              		.loc 1 358 0
 167 008c 014B     		ldr	r3, .L15
 168 008e 1860     		str	r0, [r3]
 169 0090 7047     		bx	lr
 170              	.L16:
 171 0092 00BF     		.align	2
 172              	.L15:
 173 0094 00004242 		.word	1111621632
 174              		.cfi_endproc
 175              	.LFE33:
 177              		.align	1
 178              		.global	RCC_PLLConfig
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	RCC_PLLConfig:
 185              	.LFB34:
 359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices or @b STM32_Value_line_devices, 
 366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   this parameter can be one of the following values:
 367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock entry
 369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:
 370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as PLL clock entry
 371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div1: HSE oscillator clock selected as PLL clock entry
 372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PLLSource_HSE_Div2: HSE oscillator clock divided by 2 selected as PLL clock entry 
 373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor.
 374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be RCC_PLLMul_x where x:{[4,9], 6_
 375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be RCC_PLLMul_x where x:[2,16]  
 376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 186              		.loc 1 379 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL6:
 380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 192              		.loc 1 386 0
 193 0098 034A     		ldr	r2, .L18
 194 009a 5368     		ldr	r3, [r2, #4]
 195              	.LVL7:
 387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
 388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PLL_Mask;
 196              		.loc 1 388 0
 197 009c 23F47C13 		bic	r3, r3, #4128768
 198              	.LVL8:
 199 00a0 1943     		orrs	r1, r1, r3
 200              	.LVL9:
 389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL configuration bits */
 390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLLSource | RCC_PLLMul;
 201              		.loc 1 390 0
 202 00a2 0143     		orrs	r1, r1, r0
 203              	.LVL10:
 391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 204              		.loc 1 392 0
 205 00a4 5160     		str	r1, [r2, #4]
 206 00a6 7047     		bx	lr
 207              	.L19:
 208              		.align	2
 209              	.L18:
 210 00a8 00100240 		.word	1073876992
 211              		.cfi_endproc
 212              	.LFE34:
 214              		.align	1
 215              		.global	RCC_PLLCmd
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 219              		.fpu softvfp
 221              	RCC_PLLCmd:
 222              	.LFB35:
 393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL.
 397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock.
 398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL. This parameter can be: ENABLE or DISABLE.
 399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 223              		.loc 1 402 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 228              	.LVL11:
 403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 229              		.loc 1 406 0
 230 00ac 014B     		ldr	r3, .L21
 231 00ae 1860     		str	r0, [r3]
 232 00b0 7047     		bx	lr
 233              	.L22:
 234 00b2 00BF     		.align	2
 235              	.L21:
 236 00b4 60004242 		.word	1111621728
 237              		.cfi_endproc
 238              	.LFE35:
 240              		.align	1
 241              		.global	RCC_SYSCLKConfig
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu softvfp
 247              	RCC_SYSCLKConfig:
 248              	.LFB36:
 407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL) || defined 
 410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL is disabled.
 414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line and Value line 
 415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     devices.
 416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Source: specifies the PREDIV1 clock source.
 417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_HSE: HSE selected as PREDIV1 clock
 419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PREDIV1_Source_PLL2: PLL2 selected as PREDIV1 clock
 420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Value_line_devices this parameter is always RCC_PREDIV1_Source_HSE  
 422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Source, uint32_t RCC_PREDIV1_Div)
 427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1_SOURCE(RCC_PREDIV1_Source));
 432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV1[3:0] and PREDIV1SRC bits */
 436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~(CFGR2_PREDIV1 | CFGR2_PREDIV1SRC);
 437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV1 clock source and division factor */
 438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV1_Source | RCC_PREDIV1_Div ;
 439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PREDIV2 division factor.
 447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when both PLL2 and PLL3 are disabled.
 449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PREDIV2_Div: specifies the PREDIV2 clock division factor.
 451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PREDIV2_Divx where x:[1,16]
 452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PREDIV2Config(uint32_t RCC_PREDIV2_Div)
 455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 456:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 457:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 458:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 459:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PREDIV2(RCC_PREDIV2_Div));
 460:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 461:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 462:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PREDIV2[3:0] bits */
 463:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PREDIV2;
 464:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PREDIV2 division factor */
 465:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PREDIV2_Div;
 466:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 467:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 468:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 469:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 470:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 471:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL2 multiplication factor.
 472:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 473:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL2 is disabled.
 474:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 475:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL2Mul: specifies the PLL2 multiplication factor.
 476:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL2Mul_x where x:{[8,14], 16, 20}
 477:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 478:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 479:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Config(uint32_t RCC_PLL2Mul)
 480:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 481:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 482:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 483:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 484:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL2_MUL(RCC_PLL2Mul));
 485:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 486:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 487:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL2Mul[3:0] bits */
 488:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL2MUL;
 489:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL2 configuration bits */
 490:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL2Mul;
 491:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 492:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 493:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 494:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 495:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 496:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 497:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL2.
 498:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 499:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - The PLL2 can not be disabled if it is used indirectly as system clock
 500:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     (i.e. it is used as PLL clock entry that is used as System clock).
 501:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 502:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL2. This parameter can be: ENABLE or DISABLE.
 503:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 504:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 505:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL2Cmd(FunctionalState NewState)
 506:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 507:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 508:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 509:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 510:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL2ON_BB = (uint32_t)NewState;
 511:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 512:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 513:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 514:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 515:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the PLL3 multiplication factor.
 516:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note 
 517:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be used only when the PLL3 is disabled.
 518:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 519:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PLL3Mul: specifies the PLL3 multiplication factor.
 520:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be RCC_PLL3Mul_x where x:{[8,14], 16, 20}
 521:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 522:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 523:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Config(uint32_t RCC_PLL3Mul)
 524:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 525:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 526:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 527:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 528:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PLL3_MUL(RCC_PLL3Mul));
 529:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 530:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR2;
 531:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PLL3Mul[3:0] bits */
 532:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= ~CFGR2_PLL3MUL;
 533:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set the PLL3 configuration bits */
 534:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PLL3Mul;
 535:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 536:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR2 = tmpreg;
 537:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 538:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 539:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 540:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 541:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the PLL3.
 542:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
 543:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the PLL3. This parameter can be: ENABLE or DISABLE.
 544:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 545:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 546:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PLL3Cmd(FunctionalState NewState)
 547:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 548:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 549:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 550:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 551:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_PLL3ON_BB = (uint32_t)NewState;
 552:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 553:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 554:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 555:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 556:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 557:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock.
 558:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 559:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI: HSI selected as system clock
 560:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE: HSE selected as system clock
 561:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock
 562:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 563:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 564:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 565:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 249              		.loc 1 565 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL12:
 566:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 567:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 568:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 569:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 255              		.loc 1 569 0
 256 00b8 034A     		ldr	r2, .L24
 257 00ba 5368     		ldr	r3, [r2, #4]
 258              	.LVL13:
 570:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear SW[1:0] bits */
 571:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_SW_Mask;
 259              		.loc 1 571 0
 260 00bc 23F00303 		bic	r3, r3, #3
 261              	.LVL14:
 572:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 573:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 262              		.loc 1 573 0
 263 00c0 1843     		orrs	r0, r0, r3
 264              	.LVL15:
 574:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 575:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 265              		.loc 1 575 0
 266 00c2 5060     		str	r0, [r2, #4]
 267 00c4 7047     		bx	lr
 268              	.L25:
 269 00c6 00BF     		.align	2
 270              	.L24:
 271 00c8 00100240 		.word	1073876992
 272              		.cfi_endproc
 273              	.LFE36:
 275              		.align	1
 276              		.global	RCC_GetSYSCLKSource
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 280              		.fpu softvfp
 282              	RCC_GetSYSCLKSource:
 283              	.LFB37:
 576:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 577:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 578:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 579:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 580:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
 581:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The clock source used as system clock. The returned value can
 582:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   be one of the following:
 583:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x00: HSI used as system clock
 584:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x04: HSE used as system clock
 585:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     - 0x08: PLL used as system clock
 586:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 587:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 588:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 284              		.loc 1 588 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 589:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return ((uint8_t)(RCC->CFGR & CFGR_SWS_Mask));
 289              		.loc 1 589 0
 290 00cc 024B     		ldr	r3, .L27
 291 00ce 5868     		ldr	r0, [r3, #4]
 590:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 292              		.loc 1 590 0
 293 00d0 00F00C00 		and	r0, r0, #12
 294 00d4 7047     		bx	lr
 295              	.L28:
 296 00d6 00BF     		.align	2
 297              	.L27:
 298 00d8 00100240 		.word	1073876992
 299              		.cfi_endproc
 300              	.LFE37:
 302              		.align	1
 303              		.global	RCC_HCLKConfig
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu softvfp
 309              	RCC_HCLKConfig:
 310              	.LFB38:
 591:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 592:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 593:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 594:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 595:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the system clock (SYSCLK).
 596:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 597:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div1: AHB clock = SYSCLK
 598:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div2: AHB clock = SYSCLK/2
 599:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div4: AHB clock = SYSCLK/4
 600:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div8: AHB clock = SYSCLK/8
 601:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div16: AHB clock = SYSCLK/16
 602:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div64: AHB clock = SYSCLK/64
 603:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 604:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 605:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 606:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 607:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 608:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 609:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 311              		.loc 1 609 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 316              	.LVL16:
 610:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 611:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 612:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 613:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 317              		.loc 1 613 0
 318 00dc 034A     		ldr	r2, .L30
 319 00de 5368     		ldr	r3, [r2, #4]
 320              	.LVL17:
 614:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear HPRE[3:0] bits */
 615:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_HPRE_Reset_Mask;
 321              		.loc 1 615 0
 322 00e0 23F0F003 		bic	r3, r3, #240
 323              	.LVL18:
 616:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 617:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 324              		.loc 1 617 0
 325 00e4 1843     		orrs	r0, r0, r3
 326              	.LVL19:
 618:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 619:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 327              		.loc 1 619 0
 328 00e6 5060     		str	r0, [r2, #4]
 329 00e8 7047     		bx	lr
 330              	.L31:
 331 00ea 00BF     		.align	2
 332              	.L30:
 333 00ec 00100240 		.word	1073876992
 334              		.cfi_endproc
 335              	.LFE38:
 337              		.align	1
 338              		.global	RCC_PCLK1Config
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu softvfp
 344              	RCC_PCLK1Config:
 345              	.LFB39:
 620:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 621:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 622:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 623:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 624:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 625:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 626:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 627:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 628:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 629:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 630:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 631:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 632:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 633:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 634:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 635:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 346              		.loc 1 635 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 351              	.LVL20:
 636:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 637:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 638:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 639:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 352              		.loc 1 639 0
 353 00f0 034A     		ldr	r2, .L33
 354 00f2 5368     		ldr	r3, [r2, #4]
 355              	.LVL21:
 640:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 641:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE1_Reset_Mask;
 356              		.loc 1 641 0
 357 00f4 23F4E063 		bic	r3, r3, #1792
 358              	.LVL22:
 642:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 643:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK;
 359              		.loc 1 643 0
 360 00f8 1843     		orrs	r0, r0, r3
 361              	.LVL23:
 644:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 645:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 362              		.loc 1 645 0
 363 00fa 5060     		str	r0, [r2, #4]
 364 00fc 7047     		bx	lr
 365              	.L34:
 366 00fe 00BF     		.align	2
 367              	.L33:
 368 0100 00100240 		.word	1073876992
 369              		.cfi_endproc
 370              	.LFE39:
 372              		.align	1
 373              		.global	RCC_PCLK2Config
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu softvfp
 379              	RCC_PCLK2Config:
 380              	.LFB40:
 646:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 647:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 648:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 649:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 650:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 651:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the AHB clock (HCLK).
 652:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 653:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB2 clock = HCLK
 654:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 655:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 656:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 657:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 658:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 659:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 660:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 661:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 381              		.loc 1 661 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386              	.LVL24:
 662:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 663:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 664:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_PCLK(RCC_HCLK));
 665:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 387              		.loc 1 665 0
 388 0104 034A     		ldr	r2, .L36
 389 0106 5368     		ldr	r3, [r2, #4]
 390              	.LVL25:
 666:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 667:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_PPRE2_Reset_Mask;
 391              		.loc 1 667 0
 392 0108 23F46053 		bic	r3, r3, #14336
 393              	.LVL26:
 668:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 669:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 394              		.loc 1 669 0
 395 010c 43EAC000 		orr	r0, r3, r0, lsl #3
 396              	.LVL27:
 670:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 671:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 397              		.loc 1 671 0
 398 0110 5060     		str	r0, [r2, #4]
 399 0112 7047     		bx	lr
 400              	.L37:
 401              		.align	2
 402              	.L36:
 403 0114 00100240 		.word	1073876992
 404              		.cfi_endproc
 405              	.LFE40:
 407              		.align	1
 408              		.global	RCC_ITConfig
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu softvfp
 414              	RCC_ITConfig:
 415              	.LFB41:
 672:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 673:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 674:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 675:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
 676:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
 677:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 678:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
 679:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values        
 680:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 681:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 682:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 683:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 684:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 685:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt
 686:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt
 687:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
 688:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
 689:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values        
 690:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
 691:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
 692:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
 693:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
 694:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
 695:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *       
 696:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
 697:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 698:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 699:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 700:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
 701:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 416              		.loc 1 701 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421              	.LVL28:
 422 0118 044B     		ldr	r3, .L42
 702:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 703:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_IT(RCC_IT));
 704:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
 706:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 707:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to enable the selected interrupts */
 708:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 423              		.loc 1 708 0
 424 011a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 705:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 425              		.loc 1 705 0
 426 011c 11B1     		cbz	r1, .L39
 427              		.loc 1 708 0
 428 011e 1043     		orrs	r0, r0, r2
 429              	.LVL29:
 430              	.L41:
 709:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 710:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
 711:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 712:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     /* Perform Byte access to RCC_CIR bits to disable the selected interrupts */
 713:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 431              		.loc 1 713 0
 432 0120 1870     		strb	r0, [r3]
 433 0122 7047     		bx	lr
 434              	.LVL30:
 435              	.L39:
 436 0124 22EA0000 		bic	r0, r2, r0
 437              	.LVL31:
 438 0128 FAE7     		b	.L41
 439              	.L43:
 440 012a 00BF     		.align	2
 441              	.L42:
 442 012c 09100240 		.word	1073877001
 443              		.cfi_endproc
 444              	.LFE41:
 446              		.align	1
 447              		.global	RCC_USBCLKConfig
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu softvfp
 453              	RCC_USBCLKConfig:
 454              	.LFB42:
 714:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 715:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 716:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 717:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL
 718:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 719:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
 720:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
 721:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   derived from the PLL output.
 722:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 723:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
 724:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *                                     clock source
 725:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
 726:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 727:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 728:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
 729:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 455              		.loc 1 729 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460              	.LVL32:
 730:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 731:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
 732:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 733:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 461              		.loc 1 733 0
 462 0130 014B     		ldr	r3, .L45
 463 0132 1860     		str	r0, [r3]
 464 0134 7047     		bx	lr
 465              	.L46:
 466 0136 00BF     		.align	2
 467              	.L45:
 468 0138 D8004242 		.word	1111621848
 469              		.cfi_endproc
 470              	.LFE42:
 472              		.align	1
 473              		.global	RCC_ADCCLKConfig
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu softvfp
 479              	RCC_ADCCLKConfig:
 480              	.LFB43:
 734:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 735:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 736:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 737:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the USB OTG FS clock (OTGFSCLK).
 738:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This function applies only to STM32 Connectivity line devices.
 739:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_OTGFSCLKSource: specifies the USB OTG FS clock source.
 740:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This clock is derived from the PLL output.
 741:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 742:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div3: PLL VCO clock divided by 2 selected as USB OTG FS clo
 743:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg  RCC_OTGFSCLKSource_PLLVCO_Div2: PLL VCO clock divided by 2 selected as USB OTG FS clo
 744:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 745:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 746:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_OTGFSCLKConfig(uint32_t RCC_OTGFSCLKSource)
 747:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 748:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 749:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_OTGFSCLK_SOURCE(RCC_OTGFSCLKSource));
 750:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 751:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR_OTGFSPRE_BB = RCC_OTGFSCLKSource;
 752:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 753:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 754:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 755:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 756:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
 757:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_PCLK2: defines the ADC clock divider. This clock is derived from 
 758:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   the APB2 clock (PCLK2).
 759:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 760:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div2: ADC clock = PCLK2/2
 761:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div4: ADC clock = PCLK2/4
 762:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div6: ADC clock = PCLK2/6
 763:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_PCLK2_Div8: ADC clock = PCLK2/8
 764:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 765:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 766:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PCLK2)
 767:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 481              		.loc 1 767 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486              	.LVL33:
 768:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmpreg = 0;
 769:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 770:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_ADCCLK(RCC_PCLK2));
 771:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg = RCC->CFGR;
 487              		.loc 1 771 0
 488 013c 034A     		ldr	r2, .L48
 489 013e 5368     		ldr	r3, [r2, #4]
 490              	.LVL34:
 772:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Clear ADCPRE[1:0] bits */
 773:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg &= CFGR_ADCPRE_Reset_Mask;
 491              		.loc 1 773 0
 492 0140 23F44043 		bic	r3, r3, #49152
 493              	.LVL35:
 774:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set ADCPRE[1:0] bits according to RCC_PCLK2 value */
 775:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmpreg |= RCC_PCLK2;
 494              		.loc 1 775 0
 495 0144 1843     		orrs	r0, r0, r3
 496              	.LVL36:
 776:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Store the new value */
 777:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CFGR = tmpreg;
 497              		.loc 1 777 0
 498 0146 5060     		str	r0, [r2, #4]
 499 0148 7047     		bx	lr
 500              	.L49:
 501 014a 00BF     		.align	2
 502              	.L48:
 503 014c 00100240 		.word	1073876992
 504              		.cfi_endproc
 505              	.LFE43:
 507              		.align	1
 508              		.global	RCC_LSEConfig
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu softvfp
 514              	RCC_LSEConfig:
 515              	.LFB44:
 778:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 779:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 780:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
 781:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 782:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S2 clock source(I2S2CLK).
 783:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 784:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S2 APB clock.
 785:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 786:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S2CLKSource: specifies the I2S2 clock source.
 787:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 788:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_SYSCLK: system clock selected as I2S2 clock entry
 789:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S2CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S2 clock entry
 790:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 791:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 792:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S2CLKConfig(uint32_t RCC_I2S2CLKSource)
 793:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 794:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 795:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S2CLK_SOURCE(RCC_I2S2CLKSource));
 796:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 797:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S2SRC_BB = RCC_I2S2CLKSource;
 798:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 799:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 800:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 801:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the I2S3 clock source(I2S2CLK).
 802:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note
 803:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function must be called before enabling I2S3 APB clock.
 804:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   - This function applies only to STM32 Connectivity line devices.
 805:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_I2S3CLKSource: specifies the I2S3 clock source.
 806:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 807:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_SYSCLK: system clock selected as I2S3 clock entry
 808:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_I2S3CLKSource_PLL3_VCO: PLL3 VCO clock selected as I2S3 clock entry
 809:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 810:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 811:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_I2S3CLKConfig(uint32_t RCC_I2S3CLKSource)
 812:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 813:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 814:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_I2S3CLK_SOURCE(RCC_I2S3CLKSource));
 815:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 816:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CFGR2_I2S3SRC_BB = RCC_I2S3CLKSource;
 817:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 818:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 819:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 820:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 821:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 822:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 823:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 824:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_OFF: LSE oscillator OFF
 825:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_ON: LSE oscillator ON
 826:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 827:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 828:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 829:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSEConfig(uint8_t RCC_LSE)
 830:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 516              		.loc 1 830 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521              	.LVL37:
 831:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 832:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_LSE(RCC_LSE));
 833:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 834:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEON bit */
 835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 522              		.loc 1 835 0
 523 0150 0022     		movs	r2, #0
 524 0152 064B     		ldr	r3, .L54
 836:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_OFF;
 838:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 839:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch(RCC_LSE)
 525              		.loc 1 839 0
 526 0154 0128     		cmp	r0, #1
 835:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Reset LSEBYP bit */
 527              		.loc 1 835 0
 528 0156 1A70     		strb	r2, [r3]
 837:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Configure LSE (RCC_LSE_OFF is already covered by the code section above) */
 529              		.loc 1 837 0
 530 0158 1A70     		strb	r2, [r3]
 531              		.loc 1 839 0
 532 015a 02D0     		beq	.L52
 533 015c 0428     		cmp	r0, #4
 534 015e 02D0     		beq	.L53
 535 0160 7047     		bx	lr
 536              	.L52:
 840:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 841:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_ON:
 842:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEON bit */
 843:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_ON;
 537              		.loc 1 843 0
 538 0162 1870     		strb	r0, [r3]
 844:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 539              		.loc 1 844 0
 540 0164 7047     		bx	lr
 541              	.L53:
 845:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 846:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case RCC_LSE_Bypass:
 847:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Set LSEBYP and LSEON bits */
 848:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       *(__IO uint8_t *) BDCR_ADDRESS = RCC_LSE_Bypass | RCC_LSE_ON;
 542              		.loc 1 848 0
 543 0166 0522     		movs	r2, #5
 544 0168 1A70     		strb	r2, [r3]
 545 016a 7047     		bx	lr
 546              	.L55:
 547              		.align	2
 548              	.L54:
 549 016c 20100240 		.word	1073877024
 550              		.cfi_endproc
 551              	.LFE44:
 553              		.align	1
 554              		.global	RCC_LSICmd
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu softvfp
 560              	RCC_LSICmd:
 561              	.LFB45:
 849:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;            
 850:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 851:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
 852:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;      
 853:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 854:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 855:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 856:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 857:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).
 858:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.
 859:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the LSI. This parameter can be: ENABLE or DISABLE.
 860:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 861:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 862:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 863:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 562              		.loc 1 863 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567              	.LVL38:
 864:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 865:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 866:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 568              		.loc 1 866 0
 569 0170 014B     		ldr	r3, .L57
 570 0172 1860     		str	r0, [r3]
 571 0174 7047     		bx	lr
 572              	.L58:
 573 0176 00BF     		.align	2
 574              	.L57:
 575 0178 80044242 		.word	1111622784
 576              		.cfi_endproc
 577              	.LFE45:
 579              		.align	1
 580              		.global	RCC_RTCCLKConfig
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 584              		.fpu softvfp
 586              	RCC_RTCCLKConfig:
 587              	.LFB46:
 867:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 868:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 869:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 870:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
 871:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   Once the RTC clock is selected it can't be changed unless the Backup domain is reset.
 872:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
 873:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be one of the following values:
 874:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
 875:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
 876:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div128: HSE clock divided by 128 selected as RTC clock
 877:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 878:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 879:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
 880:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 588              		.loc 1 880 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593              	.LVL39:
 881:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 882:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
 883:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Select the RTC clock source */
 884:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 594              		.loc 1 884 0
 595 017c 024A     		ldr	r2, .L60
 596 017e 136A     		ldr	r3, [r2, #32]
 597 0180 1843     		orrs	r0, r0, r3
 598              	.LVL40:
 599 0182 1062     		str	r0, [r2, #32]
 600 0184 7047     		bx	lr
 601              	.L61:
 602 0186 00BF     		.align	2
 603              	.L60:
 604 0188 00100240 		.word	1073876992
 605              		.cfi_endproc
 606              	.LFE46:
 608              		.align	1
 609              		.global	RCC_RTCCLKCmd
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu softvfp
 615              	RCC_RTCCLKCmd:
 616              	.LFB47:
 885:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 886:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 887:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 888:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the RTC clock.
 889:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function must be used only after the RTC clock was selected using the RCC_RTCCLKCo
 890:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the RTC clock. This parameter can be: ENABLE or DISABLE.
 891:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 892:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 893:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
 894:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 617              		.loc 1 894 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622              	.LVL41:
 895:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
 896:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 897:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 623              		.loc 1 897 0
 624 018c 014B     		ldr	r3, .L63
 625 018e 1860     		str	r0, [r3]
 626 0190 7047     		bx	lr
 627              	.L64:
 628 0192 00BF     		.align	2
 629              	.L63:
 630 0194 3C044242 		.word	1111622716
 631              		.cfi_endproc
 632              	.LFE47:
 634              		.align	1
 635              		.global	RCC_GetClocksFreq
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 639              		.fpu softvfp
 641              	RCC_GetClocksFreq:
 642              	.LFB48:
 898:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 899:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 900:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
 901:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Returns the frequencies of different on chip clocks.
 902:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
 903:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         the clocks frequencies.
 904:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The result of this function could be not correct when using 
 905:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *         fractional value for HSE crystal.  
 906:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
 907:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
 908:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 643              		.loc 1 909 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              	.LVL42:
 910:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 911:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 912:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef  STM32F10X_CL
 913:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
 914:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */
 915:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 916:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 917:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t prediv1factor = 0;
 918:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif
 919:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     
 920:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 921:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_SWS_Mask;
 648              		.loc 1 921 0
 649 0198 1D4A     		ldr	r2, .L75
 909:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
 650              		.loc 1 909 0
 651 019a 10B5     		push	{r4, lr}
 652              	.LCFI0:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 4, -8
 655              		.cfi_offset 14, -4
 656              		.loc 1 921 0
 657 019c 5368     		ldr	r3, [r2, #4]
 658              	.LVL43:
 659 019e 03F00C03 		and	r3, r3, #12
 660              	.LVL44:
 922:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 923:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   switch (tmp)
 661              		.loc 1 923 0
 662 01a2 042B     		cmp	r3, #4
 663 01a4 21D0     		beq	.L67
 664 01a6 082B     		cmp	r3, #8
 665 01a8 21D0     		beq	.L68
 666 01aa 1A4B     		ldr	r3, .L75+4
 667              	.LVL45:
 668              	.L73:
 924:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 925:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 926:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 927:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 928:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 930:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 931:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 932:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 933:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 934:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 935:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 936:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 937:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifndef STM32F10X_CL      
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 939:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 941:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 942:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 943:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 944:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 945:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 946:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)
 947:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 948:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 949:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****        RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull; 
 950:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #else
 951:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* HSE selected as PLL clock entry */
 952:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 953:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
 955:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 956:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 957:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {
 958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
 669              		.loc 1 958 0
 670 01ac 0360     		str	r3, [r0]
 959:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 960:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****  #endif
 961:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 962:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #else
 963:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllmull = pllmull >> 18;
 964:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 965:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllmull != 0x0D)
 966:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {
 967:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****          pllmull += 2;
 968:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 969:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 970:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 971:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         pllmull = 13 / 2; 
 972:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 973:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****             
 974:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       if (pllsource == 0x00)
 975:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 976:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
 977:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 978:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       else
 979:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* PREDIV1 selected as PLL clock entry */
 980:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 981:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         /* Get PREDIV1 clock source and division factor */
 982:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1source = RCC->CFGR2 & CFGR2_PREDIV1SRC;
 983:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         prediv1factor = (RCC->CFGR2 & CFGR2_PREDIV1) + 1;
 984:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         
 985:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         if (prediv1source == 0)
 986:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         { /* HSE oscillator clock selected as PREDIV1 clock entry */
 987:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE / prediv1factor) * pllmull;          
 988:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 989:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         else
 990:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 991:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           
 992:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 993:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           prediv2factor = ((RCC->CFGR2 & CFGR2_PREDIV2) >> 4) + 1;
 994:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           pll2mull = ((RCC->CFGR2 & CFGR2_PLL2MUL) >> 8 ) + 2; 
 995:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****           RCC_Clocks->SYSCLK_Frequency = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor)
 996:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 997:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 998:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
 999:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1000:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1001:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     default:
1002:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
1003:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
1004:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1005:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1006:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
1007:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get HCLK prescaler */
1008:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 671              		.loc 1 1008 0
 672 01ae 5368     		ldr	r3, [r2, #4]
 673              	.LVL46:
1009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
1010:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 674              		.loc 1 1010 0
 675 01b0 1949     		ldr	r1, .L75+8
1009:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 4;
 676              		.loc 1 1009 0
 677 01b2 C3F30313 		ubfx	r3, r3, #4, #4
 678              	.LVL47:
 679              		.loc 1 1010 0
 680 01b6 CC5C     		ldrb	r4, [r1, r3]	@ zero_extendqisi2
 681              	.LVL48:
1011:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* HCLK clock frequency */
1012:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 682              		.loc 1 1012 0
 683 01b8 0368     		ldr	r3, [r0]
 684              	.LVL49:
 685 01ba E340     		lsrs	r3, r3, r4
 686 01bc 4360     		str	r3, [r0, #4]
1013:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK1 prescaler */
1014:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 687              		.loc 1 1014 0
 688 01be 5468     		ldr	r4, [r2, #4]
 689              	.LVL50:
1015:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 8;
 690              		.loc 1 1015 0
 691 01c0 C4F30224 		ubfx	r4, r4, #8, #3
 692              	.LVL51:
1016:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 693              		.loc 1 1016 0
 694 01c4 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 695              	.LVL52:
1017:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK1 clock frequency */
1018:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 696              		.loc 1 1018 0
 697 01c6 23FA04F4 		lsr	r4, r3, r4
 698              	.LVL53:
 699 01ca 8460     		str	r4, [r0, #8]
1019:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get PCLK2 prescaler */
1020:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 700              		.loc 1 1020 0
 701 01cc 5468     		ldr	r4, [r2, #4]
 702              	.LVL54:
1021:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 11;
 703              		.loc 1 1021 0
 704 01ce C4F3C224 		ubfx	r4, r4, #11, #3
 705              	.LVL55:
1022:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 706              		.loc 1 1022 0
 707 01d2 0C5D     		ldrb	r4, [r1, r4]	@ zero_extendqisi2
 708              	.LVL56:
1023:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* PCLK2 clock frequency */
1024:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 709              		.loc 1 1024 0
 710 01d4 E340     		lsrs	r3, r3, r4
 711 01d6 C360     		str	r3, [r0, #12]
1025:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get ADCCLK prescaler */
1026:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 712              		.loc 1 1026 0
 713 01d8 5268     		ldr	r2, [r2, #4]
 714              	.LVL57:
1027:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = tmp >> 14;
 715              		.loc 1 1027 0
 716 01da C2F38132 		ubfx	r2, r2, #14, #2
 717              	.LVL58:
1028:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   presc = ADCPrescTable[tmp];
 718              		.loc 1 1028 0
 719 01de 1144     		add	r1, r1, r2
 720 01e0 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
 721              	.LVL59:
1029:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* ADCCLK clock frequency */
1030:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 722              		.loc 1 1030 0
 723 01e2 B3FBF2F3 		udiv	r3, r3, r2
 724 01e6 0361     		str	r3, [r0, #16]
 725 01e8 10BD     		pop	{r4, pc}
 726              	.LVL60:
 727              	.L67:
 929:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       break;
 728              		.loc 1 929 0
 729 01ea 0C4B     		ldr	r3, .L75+12
 730              	.LVL61:
 731 01ec DEE7     		b	.L73
 732              	.LVL62:
 733              	.L68:
 934:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 734              		.loc 1 934 0
 735 01ee 5368     		ldr	r3, [r2, #4]
 736              	.LVL63:
 935:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 737              		.loc 1 935 0
 738 01f0 5168     		ldr	r1, [r2, #4]
 739              	.LVL64:
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 740              		.loc 1 938 0
 741 01f2 C3F38343 		ubfx	r3, r3, #18, #4
 742              	.LVL65:
 940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 743              		.loc 1 940 0
 744 01f6 CC03     		lsls	r4, r1, #15
 938:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       
 745              		.loc 1 938 0
 746 01f8 03F10203 		add	r3, r3, #2
 747              	.LVL66:
 940:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       {/* HSI oscillator clock divided by 2 selected as PLL clock entry */
 748              		.loc 1 940 0
 749 01fc 02D4     		bmi	.L71
 942:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****       }
 750              		.loc 1 942 0
 751 01fe 0849     		ldr	r1, .L75+16
 752              	.LVL67:
 753              	.L74:
 958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 754              		.loc 1 958 0
 755 0200 4B43     		muls	r3, r1, r3
 756              	.LVL68:
 757 0202 D3E7     		b	.L73
 758              	.LVL69:
 759              	.L71:
 952:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         {/* HSE oscillator clock divided by 2 */
 760              		.loc 1 952 0
 761 0204 5168     		ldr	r1, [r2, #4]
 762              	.LVL70:
 763 0206 8903     		lsls	r1, r1, #14
 954:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 764              		.loc 1 954 0
 765 0208 4CBF     		ite	mi
 766 020a 0249     		ldrmi	r1, .L75+4
 958:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****         }
 767              		.loc 1 958 0
 768 020c 0349     		ldrpl	r1, .L75+12
 769 020e F7E7     		b	.L74
 770              	.L76:
 771              		.align	2
 772              	.L75:
 773 0210 00100240 		.word	1073876992
 774 0214 00127A00 		.word	8000000
 775 0218 00000000 		.word	.LANCHOR0
 776 021c 0024F400 		.word	16000000
 777 0220 00093D00 		.word	4000000
 778              		.cfi_endproc
 779              	.LFE48:
 781              		.align	1
 782              		.global	RCC_AHBPeriphClockCmd
 783              		.syntax unified
 784              		.thumb
 785              		.thumb_func
 786              		.fpu softvfp
 788              	RCC_AHBPeriphClockCmd:
 789              	.LFB49:
1031:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1032:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1033:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1034:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1035:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1036:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1037:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1038:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:        
1039:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1040:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1041:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1042:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1043:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1044:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS    
1045:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC   
1046:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Tx
1047:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC_Rx
1048:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1049:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the 
1050:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1051:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1052:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1053:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1054:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF
1055:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1056:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_FSMC
1057:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_SDIO
1058:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1059:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note SRAM and FLITF clock can be disabled only during sleep mode.
1060:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1061:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1062:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1063:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1064:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1065:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 790              		.loc 1 1065 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795              	.LVL71:
 796 0224 044B     		ldr	r3, .L81
1066:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1067:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1068:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1069:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1071:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1072:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 797              		.loc 1 1072 0
 798 0226 5A69     		ldr	r2, [r3, #20]
1070:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 799              		.loc 1 1070 0
 800 0228 11B1     		cbz	r1, .L78
 801              		.loc 1 1072 0
 802 022a 1043     		orrs	r0, r0, r2
 803              	.LVL72:
 804              	.L80:
1073:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1074:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1075:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1076:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 805              		.loc 1 1076 0
 806 022c 5861     		str	r0, [r3, #20]
 807 022e 7047     		bx	lr
 808              	.LVL73:
 809              	.L78:
 810 0230 22EA0000 		bic	r0, r2, r0
 811              	.LVL74:
 812 0234 FAE7     		b	.L80
 813              	.L82:
 814 0236 00BF     		.align	2
 815              	.L81:
 816 0238 00100240 		.word	1073876992
 817              		.cfi_endproc
 818              	.LFE49:
 820              		.align	1
 821              		.global	RCC_APB2PeriphClockCmd
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 825              		.fpu softvfp
 827              	RCC_APB2PeriphClockCmd:
 828              	.LFB50:
1077:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1078:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1079:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1080:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1081:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1082:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1083:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1084:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1085:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1086:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1087:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1088:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1089:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1090:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     
1091:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1092:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1093:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1094:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1095:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1096:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 829              		.loc 1 1096 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834              	.LVL75:
 835 023c 044B     		ldr	r3, .L87
1097:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1098:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1099:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1101:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1102:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 836              		.loc 1 1102 0
 837 023e 9A69     		ldr	r2, [r3, #24]
1100:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 838              		.loc 1 1100 0
 839 0240 11B1     		cbz	r1, .L84
 840              		.loc 1 1102 0
 841 0242 1043     		orrs	r0, r0, r2
 842              	.LVL76:
 843              	.L86:
1103:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1104:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1105:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1106:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 844              		.loc 1 1106 0
 845 0244 9861     		str	r0, [r3, #24]
 846 0246 7047     		bx	lr
 847              	.LVL77:
 848              	.L84:
 849 0248 22EA0000 		bic	r0, r2, r0
 850              	.LVL78:
 851 024c FAE7     		b	.L86
 852              	.L88:
 853 024e 00BF     		.align	2
 854              	.L87:
 855 0250 00100240 		.word	1073876992
 856              		.cfi_endproc
 857              	.LFE50:
 859              		.align	1
 860              		.global	RCC_APB1PeriphClockCmd
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 864              		.fpu softvfp
 866              	RCC_APB1PeriphClockCmd:
 867              	.LFB51:
1107:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1108:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1109:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1110:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1111:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1112:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1113:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1114:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1115:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1116:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1117:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1118:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1119:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1120:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1121:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14
1122:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1123:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1124:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1125:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1126:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1127:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 868              		.loc 1 1127 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873              	.LVL79:
 874 0254 044B     		ldr	r3, .L93
1128:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1129:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1130:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1132:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1133:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 875              		.loc 1 1133 0
 876 0256 DA69     		ldr	r2, [r3, #28]
1131:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 877              		.loc 1 1131 0
 878 0258 11B1     		cbz	r1, .L90
 879              		.loc 1 1133 0
 880 025a 1043     		orrs	r0, r0, r2
 881              	.LVL80:
 882              	.L92:
1134:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1135:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1136:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1137:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 883              		.loc 1 1137 0
 884 025c D861     		str	r0, [r3, #28]
 885 025e 7047     		bx	lr
 886              	.LVL81:
 887              	.L90:
 888 0260 22EA0000 		bic	r0, r2, r0
 889              	.LVL82:
 890 0264 FAE7     		b	.L92
 891              	.L94:
 892 0266 00BF     		.align	2
 893              	.L93:
 894 0268 00100240 		.word	1073876992
 895              		.cfi_endproc
 896              	.LFE51:
 898              		.align	1
 899              		.global	RCC_APB2PeriphResetCmd
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu softvfp
 905              	RCC_APB2PeriphResetCmd:
 906              	.LFB52:
1138:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1139:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1140:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1141:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #ifdef STM32F10X_CL
1142:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1143:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1144:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   This function applies only to STM32 Connectivity line devices.
1145:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1146:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1147:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_OTG_FS 
1148:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_AHBPeriph_ETH_MAC
1149:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1150:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1151:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1152:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1153:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1154:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
1155:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1156:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_AHB_PERIPH_RESET(RCC_AHBPeriph));
1157:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1158:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1159:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1160:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1161:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
1162:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1163:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1164:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1165:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
1166:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1167:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1168:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** #endif /* STM32F10X_CL */ 
1169:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1170:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1171:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1172:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1173:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1174:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,
1175:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,
1176:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,
1177:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,
1178:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,
1179:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,
1180:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11  
1181:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1182:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1183:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1184:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1185:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1186:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 907              		.loc 1 1186 0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911              		@ link register save eliminated.
 912              	.LVL83:
 913 026c 044B     		ldr	r3, .L99
1187:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1188:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1189:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1191:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1192:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 914              		.loc 1 1192 0
 915 026e DA68     		ldr	r2, [r3, #12]
1190:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 916              		.loc 1 1190 0
 917 0270 11B1     		cbz	r1, .L96
 918              		.loc 1 1192 0
 919 0272 1043     		orrs	r0, r0, r2
 920              	.LVL84:
 921              	.L98:
1193:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1194:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1195:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1196:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 922              		.loc 1 1196 0
 923 0274 D860     		str	r0, [r3, #12]
 924 0276 7047     		bx	lr
 925              	.LVL85:
 926              	.L96:
 927 0278 22EA0000 		bic	r0, r2, r0
 928              	.LVL86:
 929 027c FAE7     		b	.L98
 930              	.L100:
 931 027e 00BF     		.align	2
 932              	.L99:
 933 0280 00100240 		.word	1073876992
 934              		.cfi_endproc
 935              	.LFE52:
 937              		.align	1
 938              		.global	RCC_APB1PeriphResetCmd
 939              		.syntax unified
 940              		.thumb
 941              		.thumb_func
 942              		.fpu softvfp
 944              	RCC_APB1PeriphResetCmd:
 945              	.LFB53:
1197:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1198:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1199:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1200:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1201:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1202:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1203:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be any combination of the following values:
1204:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,
1205:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,
1206:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,
1207:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, 
1208:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,
1209:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,
1210:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,
1211:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14  
1212:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1213:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1214:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1215:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1216:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1217:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 946              		.loc 1 1217 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 951              	.LVL87:
 952 0284 044B     		ldr	r3, .L105
1218:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1219:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1220:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (NewState != DISABLE)
1222:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1223:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 953              		.loc 1 1223 0
 954 0286 1A69     		ldr	r2, [r3, #16]
1221:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 955              		.loc 1 1221 0
 956 0288 11B1     		cbz	r1, .L102
 957              		.loc 1 1223 0
 958 028a 1043     		orrs	r0, r0, r2
 959              	.LVL88:
 960              	.L104:
1224:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1225:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1226:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1227:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 961              		.loc 1 1227 0
 962 028c 1861     		str	r0, [r3, #16]
 963 028e 7047     		bx	lr
 964              	.LVL89:
 965              	.L102:
 966 0290 22EA0000 		bic	r0, r2, r0
 967              	.LVL90:
 968 0294 FAE7     		b	.L104
 969              	.L106:
 970 0296 00BF     		.align	2
 971              	.L105:
 972 0298 00100240 		.word	1073876992
 973              		.cfi_endproc
 974              	.LFE53:
 976              		.align	1
 977              		.global	RCC_BackupResetCmd
 978              		.syntax unified
 979              		.thumb
 980              		.thumb_func
 981              		.fpu softvfp
 983              	RCC_BackupResetCmd:
 984              	.LFB54:
1228:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1229:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1230:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1231:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1232:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1233:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1234:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1236:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1237:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1238:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 985              		.loc 1 1238 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL91:
1239:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1240:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1241:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 991              		.loc 1 1241 0
 992 029c 014B     		ldr	r3, .L108
 993 029e 1860     		str	r0, [r3]
 994 02a0 7047     		bx	lr
 995              	.L109:
 996 02a2 00BF     		.align	2
 997              	.L108:
 998 02a4 40044242 		.word	1111622720
 999              		.cfi_endproc
 1000              	.LFE54:
 1002              		.align	1
 1003              		.global	RCC_ClockSecuritySystemCmd
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1007              		.fpu softvfp
 1009              	RCC_ClockSecuritySystemCmd:
 1010              	.LFB55:
1242:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1243:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1244:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1245:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
1246:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  NewState: new state of the Clock Security System..
1247:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1248:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1249:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1250:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
1251:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1011              		.loc 1 1251 0
 1012              		.cfi_startproc
 1013              		@ args = 0, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 1015              		@ link register save eliminated.
 1016              	.LVL92:
1252:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1253:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1254:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 1017              		.loc 1 1254 0
 1018 02a8 014B     		ldr	r3, .L111
 1019 02aa 1860     		str	r0, [r3]
 1020 02ac 7047     		bx	lr
 1021              	.L112:
 1022 02ae 00BF     		.align	2
 1023              	.L111:
 1024 02b0 4C004242 		.word	1111621708
 1025              		.cfi_endproc
 1026              	.LFE55:
 1028              		.align	1
 1029              		.global	RCC_MCOConfig
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1033              		.fpu softvfp
 1035              	RCC_MCOConfig:
 1036              	.LFB56:
1255:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1256:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1257:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1258:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
1259:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_MCO: specifies the clock source to output.
1260:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1261:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1262:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:       
1263:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1264:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1265:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1266:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1267:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1268:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL2CLK: PLL2 clock selected                     
1269:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK_Div2: PLL3 clock divided by 2 selected   
1270:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_XT1: External 3-25 MHz oscillator clock selected  
1271:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLL3CLK: PLL3 clock selected 
1272:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1273:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For  @b other_STM32_devices, this parameter can be one of the following values:        
1274:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_NoClock: No clock selected
1275:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_SYSCLK: System clock selected
1276:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSI: HSI oscillator clock selected
1277:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_HSE: HSE oscillator clock selected
1278:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_MCO_PLLCLK_Div2: PLL clock divided by 2 selected
1279:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1280:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1281:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1282:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCO)
1283:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1037              		.loc 1 1283 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              		@ link register save eliminated.
 1042              	.LVL93:
1284:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1285:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCO));
1286:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1287:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to MCO bits to select the MCO source */
1288:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE4_ADDRESS = RCC_MCO;
 1043              		.loc 1 1288 0
 1044 02b4 014B     		ldr	r3, .L114
 1045 02b6 1870     		strb	r0, [r3]
 1046 02b8 7047     		bx	lr
 1047              	.L115:
 1048 02ba 00BF     		.align	2
 1049              	.L114:
 1050 02bc 07100240 		.word	1073876999
 1051              		.cfi_endproc
 1052              	.LFE56:
 1054              		.align	1
 1055              		.global	RCC_GetFlagStatus
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu softvfp
 1061              	RCC_GetFlagStatus:
 1062              	.LFB57:
1289:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1290:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1291:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1292:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1293:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1294:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1295:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1296:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1297:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1298:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1299:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1300:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL2RDY: PLL2 clock ready      
1301:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLL3RDY: PLL3 clock ready                           
1302:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1303:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1304:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1307:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1308:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1309:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1310:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1311:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1312:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready
1313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1316:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1318:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1319:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1320:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1321:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1322:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1323:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1324:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1325:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1327:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1063              		.loc 1 1327 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068              	.LVL94:
1328:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t tmp = 0;
1329:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   uint32_t statusreg = 0;
1330:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   FlagStatus bitstatus = RESET;
1331:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1332:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_FLAG(RCC_FLAG));
1333:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1334:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the RCC register index */
1335:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG >> 5;
 1069              		.loc 1 1335 0
 1070 02c0 4209     		lsrs	r2, r0, #5
 1071              	.LVL95:
1336:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if (tmp == 1)               /* The flag to check is in CR register */
 1072              		.loc 1 1336 0
 1073 02c2 012A     		cmp	r2, #1
 1074 02c4 074B     		ldr	r3, .L120
 1075 02c6 07D1     		bne	.L117
1337:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1338:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CR;
 1076              		.loc 1 1338 0
 1077 02c8 1B68     		ldr	r3, [r3]
 1078              	.LVL96:
 1079              	.L118:
1339:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else if (tmp == 2)          /* The flag to check is in BDCR register */
1341:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->BDCR;
1343:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1344:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else                       /* The flag to check is in CSR register */
1345:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     statusreg = RCC->CSR;
1347:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1348:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1349:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Get the flag position */
1350:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   tmp = RCC_FLAG & FLAG_Mask;
 1080              		.loc 1 1350 0
 1081 02ca 00F01F00 		and	r0, r0, #31
 1082              	.LVL97:
1351:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 1083              		.loc 1 1351 0
 1084 02ce 23FA00F0 		lsr	r0, r3, r0
1352:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1353:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1354:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1355:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1356:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1357:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1358:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1359:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1360:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the flag status */
1361:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return bitstatus;
1362:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1085              		.loc 1 1362 0
 1086 02d2 00F00100 		and	r0, r0, #1
 1087 02d6 7047     		bx	lr
 1088              	.LVL98:
 1089              	.L117:
1340:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 1090              		.loc 1 1340 0
 1091 02d8 022A     		cmp	r2, #2
1342:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 1092              		.loc 1 1342 0
 1093 02da 0CBF     		ite	eq
 1094 02dc 1B6A     		ldreq	r3, [r3, #32]
 1095              	.LVL99:
1346:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
 1096              		.loc 1 1346 0
 1097 02de 5B6A     		ldrne	r3, [r3, #36]
 1098              	.LVL100:
 1099 02e0 F3E7     		b	.L118
 1100              	.L121:
 1101 02e2 00BF     		.align	2
 1102              	.L120:
 1103 02e4 00100240 		.word	1073876992
 1104              		.cfi_endproc
 1105              	.LFE57:
 1107              		.align	1
 1108              		.global	RCC_WaitForHSEStartUp
 1109              		.syntax unified
 1110              		.thumb
 1111              		.thumb_func
 1112              		.fpu softvfp
 1114              	RCC_WaitForHSEStartUp:
 1115              	.LFB31:
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1116              		.loc 1 305 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1120              		.loc 1 306 0
 1121 02e8 0023     		movs	r3, #0
 305:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 1122              		.loc 1 305 0
 1123 02ea 07B5     		push	{r0, r1, r2, lr}
 1124              	.LCFI1:
 1125              		.cfi_def_cfa_offset 16
 1126              		.cfi_offset 14, -4
 306:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ErrorStatus status = ERROR;
 1127              		.loc 1 306 0
 1128 02ec 0193     		str	r3, [sp, #4]
 1129              	.LVL101:
 1130              	.L124:
 313:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     StartUpCounter++;  
 1131              		.loc 1 313 0 discriminator 2
 1132 02ee 3120     		movs	r0, #49
 1133 02f0 FFF7FEFF 		bl	RCC_GetFlagStatus
 1134              	.LVL102:
 314:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 1135              		.loc 1 314 0 discriminator 2
 1136 02f4 019B     		ldr	r3, [sp, #4]
 1137 02f6 0133     		adds	r3, r3, #1
 1138 02f8 0193     		str	r3, [sp, #4]
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 1139              		.loc 1 315 0 discriminator 2
 1140 02fa 019B     		ldr	r3, [sp, #4]
 1141 02fc B3F5A06F 		cmp	r3, #1280
 1142 0300 01D0     		beq	.L123
 315:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   
 1143              		.loc 1 315 0 is_stmt 0 discriminator 1
 1144 0302 0028     		cmp	r0, #0
 1145 0304 F3D0     		beq	.L124
 1146              	.L123:
 317:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
 1147              		.loc 1 317 0 is_stmt 1
 1148 0306 3120     		movs	r0, #49
 1149              	.LVL103:
 1150 0308 FFF7FEFF 		bl	RCC_GetFlagStatus
 1151              	.LVL104:
 326:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
 1152              		.loc 1 326 0
 1153 030c 0030     		adds	r0, r0, #0
 1154              	.LVL105:
 1155 030e 18BF     		it	ne
 1156 0310 0120     		movne	r0, #1
 1157 0312 03B0     		add	sp, sp, #12
 1158              	.LCFI2:
 1159              		.cfi_def_cfa_offset 4
 1160              		@ sp needed
 1161 0314 5DF804FB 		ldr	pc, [sp], #4
 1162              		.cfi_endproc
 1163              	.LFE31:
 1165              		.align	1
 1166              		.global	RCC_ClearFlag
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu softvfp
 1172              	RCC_ClearFlag:
 1173              	.LFB58:
1363:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1364:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1365:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC reset flags.
1366:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @note   The reset flags are: RCC_FLAG_PINRST, RCC_FLAG_PORRST, RCC_FLAG_SFTRST,
1367:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST
1368:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  None
1369:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1370:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1371:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearFlag(void)
1372:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1174              		.loc 1 1372 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              		@ link register save eliminated.
1373:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1374:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   RCC->CSR |= CSR_RMVF_Set;
 1179              		.loc 1 1374 0
 1180 0318 024A     		ldr	r2, .L131
 1181 031a 536A     		ldr	r3, [r2, #36]
 1182 031c 43F08073 		orr	r3, r3, #16777216
 1183 0320 5362     		str	r3, [r2, #36]
 1184 0322 7047     		bx	lr
 1185              	.L132:
 1186              		.align	2
 1187              	.L131:
 1188 0324 00100240 		.word	1073876992
 1189              		.cfi_endproc
 1190              	.LFE58:
 1192              		.align	1
 1193              		.global	RCC_GetITStatus
 1194              		.syntax unified
 1195              		.thumb
 1196              		.thumb_func
 1197              		.fpu softvfp
 1199              	RCC_GetITStatus:
 1200              	.LFB59:
1375:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
1376:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1377:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1378:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1379:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1380:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1381:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be one of the
1382:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:
1383:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1384:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1385:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1386:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1387:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1388:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1389:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1390:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1391:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1392:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be one of the following values:        
1393:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1394:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1395:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1396:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1397:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1398:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1399:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1400:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1401:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1402:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1403:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1201              		.loc 1 1403 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205              		@ link register save eliminated.
 1206              	.LVL106:
1404:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   ITStatus bitstatus = RESET;
1405:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1406:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_GET_IT(RCC_IT));
1407:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1408:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1409:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 1207              		.loc 1 1409 0
 1208 0328 034B     		ldr	r3, .L134
 1209 032a 9B68     		ldr	r3, [r3, #8]
 1210              	.LVL107:
 1211 032c 1842     		tst	r0, r3
1410:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1411:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = SET;
1412:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1413:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   else
1414:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   {
1415:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****     bitstatus = RESET;
1416:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   }
1417:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1418:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Return the RCC_IT status */
1419:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   return  bitstatus;
1420:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** }
 1212              		.loc 1 1420 0
 1213 032e 14BF     		ite	ne
 1214 0330 0120     		movne	r0, #1
 1215              	.LVL108:
 1216 0332 0020     		moveq	r0, #0
 1217 0334 7047     		bx	lr
 1218              	.L135:
 1219 0336 00BF     		.align	2
 1220              	.L134:
 1221 0338 00100240 		.word	1073876992
 1222              		.cfi_endproc
 1223              	.LFE59:
 1225              		.align	1
 1226              		.global	RCC_ClearITPendingBit
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu softvfp
 1232              	RCC_ClearITPendingBit:
 1233              	.LFB60:
1421:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1422:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** /**
1423:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1424:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1425:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1426:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b STM32_Connectivity_line_devices, this parameter can be any combination
1427:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   of the following values:
1428:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1429:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1430:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1431:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1432:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1433:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL2RDY: PLL2 ready interrupt 
1434:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLL3RDY: PLL3 ready interrupt                      
1435:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1436:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * 
1437:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   For @b other_STM32_devices, this parameter can be any combination of the
1438:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   following values:        
1439:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1440:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1441:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1442:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1443:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1444:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *   
1445:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1446:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   * @retval None
1447:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   */
1448:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1449:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** {
 1234              		.loc 1 1449 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
 1238              		@ link register save eliminated.
 1239              	.LVL109:
1450:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Check the parameters */
1451:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1452:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c **** 
1453:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1454:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****      pending bits */
1455:lib/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 1240              		.loc 1 1455 0
 1241 033c 014B     		ldr	r3, .L137
 1242 033e 1870     		strb	r0, [r3]
 1243 0340 7047     		bx	lr
 1244              	.L138:
 1245 0342 00BF     		.align	2
 1246              	.L137:
 1247 0344 0A100240 		.word	1073877002
 1248              		.cfi_endproc
 1249              	.LFE60:
 1251              		.data
 1252              		.set	.LANCHOR0,. + 0
 1255              	APBAHBPrescTable:
 1256 0000 00       		.byte	0
 1257 0001 00       		.byte	0
 1258 0002 00       		.byte	0
 1259 0003 00       		.byte	0
 1260 0004 01       		.byte	1
 1261 0005 02       		.byte	2
 1262 0006 03       		.byte	3
 1263 0007 04       		.byte	4
 1264 0008 01       		.byte	1
 1265 0009 02       		.byte	2
 1266 000a 03       		.byte	3
 1267 000b 04       		.byte	4
 1268 000c 06       		.byte	6
 1269 000d 07       		.byte	7
 1270 000e 08       		.byte	8
 1271 000f 09       		.byte	9
 1274              	ADCPrescTable:
 1275 0010 02       		.byte	2
 1276 0011 04       		.byte	4
 1277 0012 06       		.byte	6
 1278 0013 08       		.byte	8
 1279              		.text
 1280              	.Letext0:
 1281              		.file 2 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/machine/_default_types.h"
 1282              		.file 3 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_stdint.h"
 1283              		.file 4 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
 1284              		.file 5 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.h"
 1285              		.file 6 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 1286              		.file 7 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f10x_rcc.c
     /tmp/ccYPVnDp.s:15     .text:0000000000000000 $t
     /tmp/ccYPVnDp.s:22     .text:0000000000000000 RCC_DeInit
     /tmp/ccYPVnDp.s:60     .text:0000000000000038 $d
     /tmp/ccYPVnDp.s:65     .text:0000000000000040 $t
     /tmp/ccYPVnDp.s:72     .text:0000000000000040 RCC_HSEConfig
     /tmp/ccYPVnDp.s:112    .text:0000000000000074 $d
     /tmp/ccYPVnDp.s:116    .text:0000000000000078 $t
     /tmp/ccYPVnDp.s:123    .text:0000000000000078 RCC_AdjustHSICalibrationValue
     /tmp/ccYPVnDp.s:147    .text:0000000000000088 $d
     /tmp/ccYPVnDp.s:151    .text:000000000000008c $t
     /tmp/ccYPVnDp.s:158    .text:000000000000008c RCC_HSICmd
     /tmp/ccYPVnDp.s:173    .text:0000000000000094 $d
     /tmp/ccYPVnDp.s:177    .text:0000000000000098 $t
     /tmp/ccYPVnDp.s:184    .text:0000000000000098 RCC_PLLConfig
     /tmp/ccYPVnDp.s:210    .text:00000000000000a8 $d
     /tmp/ccYPVnDp.s:214    .text:00000000000000ac $t
     /tmp/ccYPVnDp.s:221    .text:00000000000000ac RCC_PLLCmd
     /tmp/ccYPVnDp.s:236    .text:00000000000000b4 $d
     /tmp/ccYPVnDp.s:240    .text:00000000000000b8 $t
     /tmp/ccYPVnDp.s:247    .text:00000000000000b8 RCC_SYSCLKConfig
     /tmp/ccYPVnDp.s:271    .text:00000000000000c8 $d
     /tmp/ccYPVnDp.s:275    .text:00000000000000cc $t
     /tmp/ccYPVnDp.s:282    .text:00000000000000cc RCC_GetSYSCLKSource
     /tmp/ccYPVnDp.s:298    .text:00000000000000d8 $d
     /tmp/ccYPVnDp.s:302    .text:00000000000000dc $t
     /tmp/ccYPVnDp.s:309    .text:00000000000000dc RCC_HCLKConfig
     /tmp/ccYPVnDp.s:333    .text:00000000000000ec $d
     /tmp/ccYPVnDp.s:337    .text:00000000000000f0 $t
     /tmp/ccYPVnDp.s:344    .text:00000000000000f0 RCC_PCLK1Config
     /tmp/ccYPVnDp.s:368    .text:0000000000000100 $d
     /tmp/ccYPVnDp.s:372    .text:0000000000000104 $t
     /tmp/ccYPVnDp.s:379    .text:0000000000000104 RCC_PCLK2Config
     /tmp/ccYPVnDp.s:403    .text:0000000000000114 $d
     /tmp/ccYPVnDp.s:407    .text:0000000000000118 $t
     /tmp/ccYPVnDp.s:414    .text:0000000000000118 RCC_ITConfig
     /tmp/ccYPVnDp.s:442    .text:000000000000012c $d
     /tmp/ccYPVnDp.s:446    .text:0000000000000130 $t
     /tmp/ccYPVnDp.s:453    .text:0000000000000130 RCC_USBCLKConfig
     /tmp/ccYPVnDp.s:468    .text:0000000000000138 $d
     /tmp/ccYPVnDp.s:472    .text:000000000000013c $t
     /tmp/ccYPVnDp.s:479    .text:000000000000013c RCC_ADCCLKConfig
     /tmp/ccYPVnDp.s:503    .text:000000000000014c $d
     /tmp/ccYPVnDp.s:507    .text:0000000000000150 $t
     /tmp/ccYPVnDp.s:514    .text:0000000000000150 RCC_LSEConfig
     /tmp/ccYPVnDp.s:549    .text:000000000000016c $d
     /tmp/ccYPVnDp.s:553    .text:0000000000000170 $t
     /tmp/ccYPVnDp.s:560    .text:0000000000000170 RCC_LSICmd
     /tmp/ccYPVnDp.s:575    .text:0000000000000178 $d
     /tmp/ccYPVnDp.s:579    .text:000000000000017c $t
     /tmp/ccYPVnDp.s:586    .text:000000000000017c RCC_RTCCLKConfig
     /tmp/ccYPVnDp.s:604    .text:0000000000000188 $d
     /tmp/ccYPVnDp.s:608    .text:000000000000018c $t
     /tmp/ccYPVnDp.s:615    .text:000000000000018c RCC_RTCCLKCmd
     /tmp/ccYPVnDp.s:630    .text:0000000000000194 $d
     /tmp/ccYPVnDp.s:634    .text:0000000000000198 $t
     /tmp/ccYPVnDp.s:641    .text:0000000000000198 RCC_GetClocksFreq
     /tmp/ccYPVnDp.s:773    .text:0000000000000210 $d
     /tmp/ccYPVnDp.s:781    .text:0000000000000224 $t
     /tmp/ccYPVnDp.s:788    .text:0000000000000224 RCC_AHBPeriphClockCmd
     /tmp/ccYPVnDp.s:816    .text:0000000000000238 $d
     /tmp/ccYPVnDp.s:820    .text:000000000000023c $t
     /tmp/ccYPVnDp.s:827    .text:000000000000023c RCC_APB2PeriphClockCmd
     /tmp/ccYPVnDp.s:855    .text:0000000000000250 $d
     /tmp/ccYPVnDp.s:859    .text:0000000000000254 $t
     /tmp/ccYPVnDp.s:866    .text:0000000000000254 RCC_APB1PeriphClockCmd
     /tmp/ccYPVnDp.s:894    .text:0000000000000268 $d
     /tmp/ccYPVnDp.s:898    .text:000000000000026c $t
     /tmp/ccYPVnDp.s:905    .text:000000000000026c RCC_APB2PeriphResetCmd
     /tmp/ccYPVnDp.s:933    .text:0000000000000280 $d
     /tmp/ccYPVnDp.s:937    .text:0000000000000284 $t
     /tmp/ccYPVnDp.s:944    .text:0000000000000284 RCC_APB1PeriphResetCmd
     /tmp/ccYPVnDp.s:972    .text:0000000000000298 $d
     /tmp/ccYPVnDp.s:976    .text:000000000000029c $t
     /tmp/ccYPVnDp.s:983    .text:000000000000029c RCC_BackupResetCmd
     /tmp/ccYPVnDp.s:998    .text:00000000000002a4 $d
     /tmp/ccYPVnDp.s:1002   .text:00000000000002a8 $t
     /tmp/ccYPVnDp.s:1009   .text:00000000000002a8 RCC_ClockSecuritySystemCmd
     /tmp/ccYPVnDp.s:1024   .text:00000000000002b0 $d
     /tmp/ccYPVnDp.s:1028   .text:00000000000002b4 $t
     /tmp/ccYPVnDp.s:1035   .text:00000000000002b4 RCC_MCOConfig
     /tmp/ccYPVnDp.s:1050   .text:00000000000002bc $d
     /tmp/ccYPVnDp.s:1054   .text:00000000000002c0 $t
     /tmp/ccYPVnDp.s:1061   .text:00000000000002c0 RCC_GetFlagStatus
     /tmp/ccYPVnDp.s:1103   .text:00000000000002e4 $d
     /tmp/ccYPVnDp.s:1107   .text:00000000000002e8 $t
     /tmp/ccYPVnDp.s:1114   .text:00000000000002e8 RCC_WaitForHSEStartUp
     /tmp/ccYPVnDp.s:1172   .text:0000000000000318 RCC_ClearFlag
     /tmp/ccYPVnDp.s:1188   .text:0000000000000324 $d
     /tmp/ccYPVnDp.s:1192   .text:0000000000000328 $t
     /tmp/ccYPVnDp.s:1199   .text:0000000000000328 RCC_GetITStatus
     /tmp/ccYPVnDp.s:1221   .text:0000000000000338 $d
     /tmp/ccYPVnDp.s:1225   .text:000000000000033c $t
     /tmp/ccYPVnDp.s:1232   .text:000000000000033c RCC_ClearITPendingBit
     /tmp/ccYPVnDp.s:1247   .text:0000000000000344 $d
     /tmp/ccYPVnDp.s:1255   .data:0000000000000000 APBAHBPrescTable
     /tmp/ccYPVnDp.s:1274   .data:0000000000000010 ADCPrescTable
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
