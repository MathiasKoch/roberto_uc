   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"servo.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN5servo9motorTypeEv,"axG",%progbits,_ZN5servo9motorTypeEv,comdat
  16              		.align	1
  17              		.weak	_ZN5servo9motorTypeEv
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_ZN5servo9motorTypeEv:
  24              		.fnstart
  25              	.LFB1137:
  26              		.file 1 "./inc/servo.h"
   1:./inc/servo.h **** 
   2:./inc/servo.h **** #ifndef _servo_H
   3:./inc/servo.h **** #define	_servo_H
   4:./inc/servo.h **** 
   5:./inc/servo.h **** #include <stm32f10x.h>
   6:./inc/servo.h **** #include "motor.h"
   7:./inc/servo.h **** 
   8:./inc/servo.h **** class servo : public motor
   9:./inc/servo.h **** {
  10:./inc/servo.h **** public:
  11:./inc/servo.h ****     servo(motorSettings *settings);
  12:./inc/servo.h ****     ~servo();
  13:./inc/servo.h **** 
  14:./inc/servo.h ****     virtual void setReference(float setPoint);
  15:./inc/servo.h ****     virtual float getReference();
  16:./inc/servo.h ****     virtual const char* motorName();
  17:./inc/servo.h ****     //virtual std::tuple<float, int, int, int> update(float dt, bool connected);
  18:./inc/servo.h ****     virtual float update(float dt, bool connected, bool enable);
  19:./inc/servo.h **** 
  20:./inc/servo.h ****     virtual int motorType() { return MOTOR_TYPE_SERVO; }
  27              		.loc 1 20 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              		.loc 1 20 0
  34 0000 0120     		movs	r0, #1
  35              	.LVL1:
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1137:
  39              		.cantunwind
  40              		.fnend
  42              		.global	__aeabi_f2iz
  43              		.text
  44              		.align	1
  45              		.global	_ZN5servo12setReferenceEf
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu softvfp
  51              	_ZN5servo12setReferenceEf:
  52              		.fnstart
  53              	.LFB1146:
  54              		.file 2 "src/servo.cpp"
   1:src/servo.cpp **** 
   2:src/servo.cpp **** #include "servo.h"
   3:src/servo.cpp **** #include "motorSettings.h"
   4:src/servo.cpp **** 
   5:src/servo.cpp **** 
   6:src/servo.cpp **** servo::servo(motorSettings *settings) : motor(settings)
   7:src/servo.cpp **** {
   8:src/servo.cpp **** 
   9:src/servo.cpp **** }
  10:src/servo.cpp **** 
  11:src/servo.cpp **** servo::~servo()
  12:src/servo.cpp **** {
  13:src/servo.cpp **** }
  14:src/servo.cpp **** 
  15:src/servo.cpp **** bool servo::motorInit()
  16:src/servo.cpp **** {
  17:src/servo.cpp **** 
  18:src/servo.cpp **** 	GPIO_InitTypeDef GPIO_InitStructure;
  19:src/servo.cpp **** 
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Pin = m_settings->m_ServoPin;
  21:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  22:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  23:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
  24:src/servo.cpp **** 
  25:src/servo.cpp **** 
  26:src/servo.cpp **** 
  27:src/servo.cpp **** 
  28:src/servo.cpp **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;
  29:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Period = 59999; // ie 0..29999
  30:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 23;
  31:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
  32:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
  33:src/servo.cpp **** 
  34:src/servo.cpp **** 	TIM_TimeBaseInit(m_settings->m_Timer, &TIM_TimeBaseStructure);
  35:src/servo.cpp **** 
  36:src/servo.cpp **** 
  37:src/servo.cpp **** 	TIM_OCInitTypeDef TIM_OCInitStructure;
  38:src/servo.cpp **** 	TIM_OCStructInit(&TIM_OCInitStructure); // clears the other 4 fields not used here
  39:src/servo.cpp **** 
  40:src/servo.cpp **** 	/* PWM1 Mode configuration: Channel1 */
  41:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
  42:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  43:src/servo.cpp **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
  44:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
  45:src/servo.cpp **** 
  46:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
  47:src/servo.cpp **** 		case 1:
  48:src/servo.cpp **** 			TIM_OC1Init(m_settings->m_Timer, &TIM_OCInitStructure);
  49:src/servo.cpp **** 			TIM_OC1PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  50:src/servo.cpp **** 			break;
  51:src/servo.cpp **** 		case 2:
  52:src/servo.cpp **** 			TIM_OC2Init(m_settings->m_Timer, &TIM_OCInitStructure);
  53:src/servo.cpp **** 			TIM_OC2PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  54:src/servo.cpp **** 			break;
  55:src/servo.cpp **** 		case 3:
  56:src/servo.cpp **** 			TIM_OC3Init(m_settings->m_Timer, &TIM_OCInitStructure);
  57:src/servo.cpp **** 			TIM_OC3PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  58:src/servo.cpp **** 			break;
  59:src/servo.cpp **** 		case 4:
  60:src/servo.cpp **** 			TIM_OC4Init(m_settings->m_Timer, &TIM_OCInitStructure);
  61:src/servo.cpp **** 			TIM_OC4PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
  62:src/servo.cpp **** 			break;
  63:src/servo.cpp **** 		default:
  64:src/servo.cpp **** 			return false;
  65:src/servo.cpp **** 	}
  66:src/servo.cpp **** 
  67:src/servo.cpp **** 
  68:src/servo.cpp **** 	TIM_ARRPreloadConfig(m_settings->m_Timer, ENABLE);
  69:src/servo.cpp **** 
  70:src/servo.cpp **** 	/* TIM Main Output Enable */
  71:src/servo.cpp **** 	TIM_CtrlPWMOutputs(m_settings->m_Timer, ENABLE);
  72:src/servo.cpp **** 
  73:src/servo.cpp **** 	/* TIM enable counter */
  74:src/servo.cpp **** 	TIM_Cmd(m_settings->m_Timer, ENABLE);
  75:src/servo.cpp **** 
  76:src/servo.cpp **** 	// Setup Controller
  77:src/servo.cpp **** 	float b_[] = {0.0201,    0.0402,    0.0201};
  78:src/servo.cpp **** 	float a_[] = {1.0000,   -1.561,    0.6414};
  79:src/servo.cpp **** 	float y_[] = {0, 0, 0};
  80:src/servo.cpp **** 	float u_[] = {0, 0, 0};
  81:src/servo.cpp **** 	std::copy(b_, b_ + 3, b);
  82:src/servo.cpp **** 	std::copy(a_, a_ + 3, a);
  83:src/servo.cpp **** 	std::copy(y_, y_ + 3, y);
  84:src/servo.cpp **** 	std::copy(u_, u_ + 3, u);
  85:src/servo.cpp **** 
  86:src/servo.cpp **** 	return true;
  87:src/servo.cpp **** }
  88:src/servo.cpp **** 
  89:src/servo.cpp **** void servo::setReference(float setPoint){
  55              		.loc 2 89 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL2:
  60 0000 10B5     		push	{r4, lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
  65              		.loc 2 89 0
  66 0002 0446     		mov	r4, r0
  90:src/servo.cpp **** 	pos = (int) setPoint;
  67              		.loc 2 90 0
  68 0004 0846     		mov	r0, r1
  69              	.LVL3:
  70 0006 FFF7FEFF 		bl	__aeabi_f2iz
  71              	.LVL4:
  72 000a A060     		str	r0, [r4, #8]
  73 000c 10BD     		pop	{r4, pc}
  74              		.cfi_endproc
  75              	.LFE1146:
  76              		.cantunwind
  77              		.fnend
  79              		.global	__aeabi_i2f
  80              		.align	1
  81              		.global	_ZN5servo12getReferenceEv
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	_ZN5servo12getReferenceEv:
  88              		.fnstart
  89              	.LFB1147:
  91:src/servo.cpp **** 	//pos = (int)setPoint > 90? 90 : ( (int)setPoint < -MAX_ANGLE_PIVOT? -MAX_ANGLE_PIVOT : (int)setPo
  92:src/servo.cpp **** }
  93:src/servo.cpp **** 
  94:src/servo.cpp **** float servo::getReference(){
  90              		.loc 2 94 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              	.LVL5:
  95 000e 08B5     		push	{r3, lr}
  96              	.LCFI1:
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 3, -8
  99              		.cfi_offset 14, -4
  95:src/servo.cpp **** 	return (float)pos;
 100              		.loc 2 95 0
 101 0010 8068     		ldr	r0, [r0, #8]
 102              	.LVL6:
 103 0012 FFF7FEFF 		bl	__aeabi_i2f
 104              	.LVL7:
  96:src/servo.cpp **** }
 105              		.loc 2 96 0
 106 0016 08BD     		pop	{r3, pc}
 107              		.cfi_endproc
 108              	.LFE1147:
 109              		.cantunwind
 110              		.fnend
 112              		.align	1
 113              		.global	_ZN5servo9motorNameEv
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu softvfp
 119              	_ZN5servo9motorNameEv:
 120              		.fnstart
 121              	.LFB1148:
  97:src/servo.cpp **** const char* servo::motorName(){
 122              		.loc 2 97 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL8:
  98:src/servo.cpp **** 	return m_settings->m_motorName;
 128              		.loc 2 98 0
 129 0018 4368     		ldr	r3, [r0, #4]
  99:src/servo.cpp **** }
 130              		.loc 2 99 0
 131 001a 5868     		ldr	r0, [r3, #4]
 132              	.LVL9:
 133 001c 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE1148:
 136              		.cantunwind
 137              		.fnend
 139              		.align	1
 140              		.global	_ZN5servoD2Ev
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu softvfp
 146              	_ZN5servoD2Ev:
 147              		.fnstart
 148              	.LFB1142:
  11:src/servo.cpp **** {
 149              		.loc 2 11 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              	.LVL10:
 154 001e 10B5     		push	{r4, lr}
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
  11:src/servo.cpp **** {
 159              		.loc 2 11 0
 160 0020 0446     		mov	r4, r0
 161              	.LBB22:
 162 0022 034B     		ldr	r3, .L6
 163 0024 0360     		str	r3, [r0]
 164 0026 FFF7FEFF 		bl	_ZN5motorD2Ev
 165              	.LVL11:
 166              	.LBE22:
  13:src/servo.cpp **** 
 167              		.loc 2 13 0
 168 002a 2046     		mov	r0, r4
 169 002c 10BD     		pop	{r4, pc}
 170              	.LVL12:
 171              	.L7:
 172 002e 00BF     		.align	2
 173              	.L6:
 174 0030 08000000 		.word	.LANCHOR0+8
 175              		.cfi_endproc
 176              	.LFE1142:
 177              		.cantunwind
 178              		.fnend
 180              		.global	_ZN5servoD1Ev
 181              		.thumb_set _ZN5servoD1Ev,_ZN5servoD2Ev
 182              		.align	1
 183              		.global	_ZN5servoD0Ev
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	_ZN5servoD0Ev:
 190              		.fnstart
 191              	.LFB1144:
  11:src/servo.cpp **** {
 192              		.loc 2 11 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL13:
 197 0034 10B5     		push	{r4, lr}
 198              	.LCFI3:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
  11:src/servo.cpp **** {
 202              		.loc 2 11 0
 203 0036 0446     		mov	r4, r0
  13:src/servo.cpp **** 
 204              		.loc 2 13 0
 205 0038 FFF7FEFF 		bl	_ZN5servoD1Ev
 206              	.LVL14:
 207 003c 2046     		mov	r0, r4
 208 003e FFF7FEFF 		bl	_ZdlPv
 209              	.LVL15:
 210 0042 2046     		mov	r0, r4
 211 0044 10BD     		pop	{r4, pc}
 212              		.cfi_endproc
 213              	.LFE1144:
 214              		.cantunwind
 215              		.fnend
 217              		.align	1
 218              		.global	_ZN5servo9motorInitEv
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu softvfp
 224              	_ZN5servo9motorInitEv:
 225              		.fnstart
 226              	.LFB1145:
  16:src/servo.cpp **** 
 227              		.loc 2 16 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 80
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL16:
 232 0046 70B5     		push	{r4, r5, r6, lr}
 233              		.save {r4, r5, r6, lr}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 4, -16
 237              		.cfi_offset 5, -12
 238              		.cfi_offset 6, -8
 239              		.cfi_offset 14, -4
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 240              		.loc 2 20 0
 241 0048 4368     		ldr	r3, [r0, #4]
  16:src/servo.cpp **** 
 242              		.loc 2 16 0
 243              		.pad #80
 244 004a 94B0     		sub	sp, sp, #80
 245              	.LCFI5:
 246              		.cfi_def_cfa_offset 96
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 247              		.loc 2 20 0
 248 004c 9A69     		ldr	r2, [r3, #24]
  16:src/servo.cpp **** 
 249              		.loc 2 16 0
 250 004e 0446     		mov	r4, r0
  20:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 251              		.loc 2 20 0
 252 0050 ADF80020 		strh	r2, [sp]	@ movhi
  21:src/servo.cpp **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 253              		.loc 2 21 0
 254 0054 1822     		movs	r2, #24
 255 0056 8DF80320 		strb	r2, [sp, #3]
  22:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
 256              		.loc 2 22 0
 257 005a 0322     		movs	r2, #3
  23:src/servo.cpp **** 
 258              		.loc 2 23 0
 259 005c D869     		ldr	r0, [r3, #28]
 260              	.LVL17:
 261 005e 6946     		mov	r1, sp
  22:src/servo.cpp **** 	GPIO_Init(m_settings->m_ServoPort, &GPIO_InitStructure);
 262              		.loc 2 22 0
 263 0060 8DF80220 		strb	r2, [sp, #2]
  23:src/servo.cpp **** 
 264              		.loc 2 23 0
 265 0064 FFF7FEFF 		bl	GPIO_Init
 266              	.LVL18:
  29:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_Prescaler = 23;
 267              		.loc 2 29 0
 268 0068 4EF65F23 		movw	r3, #59999
 269 006c ADF80830 		strh	r3, [sp, #8]	@ movhi
  30:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 270              		.loc 2 30 0
 271 0070 1723     		movs	r3, #23
  31:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 272              		.loc 2 31 0
 273 0072 0025     		movs	r5, #0
  30:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 274              		.loc 2 30 0
 275 0074 ADF80430 		strh	r3, [sp, #4]	@ movhi
  34:src/servo.cpp **** 
 276              		.loc 2 34 0
 277 0078 6368     		ldr	r3, [r4, #4]
 278 007a 01A9     		add	r1, sp, #4
 279 007c 9868     		ldr	r0, [r3, #8]
  31:src/servo.cpp **** 	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 280              		.loc 2 31 0
 281 007e ADF80A50 		strh	r5, [sp, #10]	@ movhi
  32:src/servo.cpp **** 
 282              		.loc 2 32 0
 283 0082 ADF80650 		strh	r5, [sp, #6]	@ movhi
  34:src/servo.cpp **** 
 284              		.loc 2 34 0
 285 0086 FFF7FEFF 		bl	TIM_TimeBaseInit
 286              	.LVL19:
  38:src/servo.cpp **** 
 287              		.loc 2 38 0
 288 008a 10A8     		add	r0, sp, #64
 289 008c FFF7FEFF 		bl	TIM_OCStructInit
 290              	.LVL20:
  41:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 291              		.loc 2 41 0
 292 0090 6023     		movs	r3, #96
 293 0092 ADF84030 		strh	r3, [sp, #64]	@ movhi
  42:src/servo.cpp **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
 294              		.loc 2 42 0
 295 0096 0123     		movs	r3, #1
 296 0098 ADF84230 		strh	r3, [sp, #66]	@ movhi
  46:src/servo.cpp **** 		case 1:
 297              		.loc 2 46 0
 298 009c 6368     		ldr	r3, [r4, #4]
  43:src/servo.cpp **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
 299              		.loc 2 43 0
 300 009e ADF84650 		strh	r5, [sp, #70]	@ movhi
  46:src/servo.cpp **** 		case 1:
 301              		.loc 2 46 0
 302 00a2 DA68     		ldr	r2, [r3, #12]
  44:src/servo.cpp **** 
 303              		.loc 2 44 0
 304 00a4 ADF84850 		strh	r5, [sp, #72]	@ movhi
  46:src/servo.cpp **** 		case 1:
 305              		.loc 2 46 0
 306 00a8 013A     		subs	r2, r2, #1
 307 00aa 032A     		cmp	r2, #3
 308 00ac 64D8     		bhi	.L17
 309 00ae DFE802F0 		tbb	[pc, r2]
 310              	.L12:
 311 00b2 02       		.byte	(.L11-.L12)/2
 312 00b3 45       		.byte	(.L13-.L12)/2
 313 00b4 4F       		.byte	(.L14-.L12)/2
 314 00b5 59       		.byte	(.L15-.L12)/2
 315              		.p2align 1
 316              	.L11:
  48:src/servo.cpp **** 			TIM_OC1PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 317              		.loc 2 48 0
 318 00b6 9868     		ldr	r0, [r3, #8]
 319 00b8 10A9     		add	r1, sp, #64
 320 00ba FFF7FEFF 		bl	TIM_OC1Init
 321              	.LVL21:
  49:src/servo.cpp **** 			break;
 322              		.loc 2 49 0
 323 00be 6368     		ldr	r3, [r4, #4]
 324 00c0 0821     		movs	r1, #8
 325 00c2 9868     		ldr	r0, [r3, #8]
 326 00c4 FFF7FEFF 		bl	TIM_OC1PreloadConfig
 327              	.LVL22:
 328              	.L16:
  68:src/servo.cpp **** 
 329              		.loc 2 68 0
 330 00c8 6368     		ldr	r3, [r4, #4]
 331 00ca 0121     		movs	r1, #1
 332 00cc 9868     		ldr	r0, [r3, #8]
 333 00ce FFF7FEFF 		bl	TIM_ARRPreloadConfig
 334              	.LVL23:
  71:src/servo.cpp **** 
 335              		.loc 2 71 0
 336 00d2 6368     		ldr	r3, [r4, #4]
 337 00d4 0121     		movs	r1, #1
 338 00d6 9868     		ldr	r0, [r3, #8]
 339 00d8 FFF7FEFF 		bl	TIM_CtrlPWMOutputs
 340              	.LVL24:
  74:src/servo.cpp **** 
 341              		.loc 2 74 0
 342 00dc 6368     		ldr	r3, [r4, #4]
  77:src/servo.cpp **** 	float a_[] = {1.0000,   -1.561,    0.6414};
 343              		.loc 2 77 0
 344 00de 274E     		ldr	r6, .L18
  74:src/servo.cpp **** 
 345              		.loc 2 74 0
 346 00e0 9868     		ldr	r0, [r3, #8]
 347 00e2 0121     		movs	r1, #1
 348 00e4 FFF7FEFF 		bl	TIM_Cmd
 349              	.LVL25:
  77:src/servo.cpp **** 	float a_[] = {1.0000,   -1.561,    0.6414};
 350              		.loc 2 77 0
 351 00e8 96E80700 		ldm	r6, {r0, r1, r2}
 352 00ec 04AD     		add	r5, sp, #16
 353              	.LVL26:
  78:src/servo.cpp **** 	float y_[] = {0, 0, 0};
 354              		.loc 2 78 0
 355 00ee 07AB     		add	r3, sp, #28
 356              	.LVL27:
 357 00f0 0C36     		adds	r6, r6, #12
  77:src/servo.cpp **** 	float a_[] = {1.0000,   -1.561,    0.6414};
 358              		.loc 2 77 0
 359 00f2 85E80700 		stm	r5, {r0, r1, r2}
  78:src/servo.cpp **** 	float y_[] = {0, 0, 0};
 360              		.loc 2 78 0
 361 00f6 96E80700 		ldm	r6, {r0, r1, r2}
 362 00fa 83E80700 		stm	r3, {r0, r1, r2}
  79:src/servo.cpp **** 	float u_[] = {0, 0, 0};
 363              		.loc 2 79 0
 364 00fe 0022     		movs	r2, #0
 365 0100 0A92     		str	r2, [sp, #40]	@ float
 366 0102 0B92     		str	r2, [sp, #44]	@ float
  80:src/servo.cpp **** 	std::copy(b_, b_ + 3, b);
 367              		.loc 2 80 0
 368 0104 0D92     		str	r2, [sp, #52]	@ float
 369 0106 0E92     		str	r2, [sp, #56]	@ float
 370              	.LBB51:
 371              	.LBB52:
 372              	.LBB53:
 373              	.LBB54:
 374              	.LBB55:
 375              	.LBB56:
 376              		.file 3 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algoba
   1:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
   3:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // Copyright (C) 2001-2016 Free Software Foundation, Inc.
   4:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** //
   5:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // any later version.
  10:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  11:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  16:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  20:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  25:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** /*
  26:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *
  27:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *
  30:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *
  38:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *
  39:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *
  42:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  */
  50:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  51:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****  */
  55:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  56:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  59:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  73:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** {
  75:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  77:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __iter_swap
  83:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
  84:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static void
  86:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         {
  88:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****             _ValueType1;
  90:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	}
  94:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     };
  95:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
  96:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<>
  97:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
  99:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static void 
 101:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         {
 103:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         }
 105:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     };
 106:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #endif
 107:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 108:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   /**
 109:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *
 115:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  iterators themselves.
 117:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   */
 118:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     inline void
 120:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 122:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       // concept requirements
 123:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 128:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	_ValueType1;
 131:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	_ValueType2;
 133:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 134:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 139:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #else
 148:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #endif
 150:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     }
 151:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 152:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   /**
 153:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *
 160:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   */
 164:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     _ForwardIterator2
 166:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 169:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       // concept requirements
 170:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 176:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 177:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       return __first2;
 179:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     }
 180:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 181:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   /**
 182:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *
 188:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   */
 192:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 193:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     inline const _Tp&
 195:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 197:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       // concept requirements
 198:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       if (__b < __a)
 201:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	return __b;
 202:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       return __a;
 203:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     }
 204:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 205:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   /**
 206:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *
 212:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   */
 216:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _Tp>
 217:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     inline const _Tp&
 219:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 221:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       // concept requirements
 222:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       if (__a < __b)
 225:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	return __b;
 226:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       return __a;
 227:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     }
 228:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 229:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   /**
 230:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *
 237:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   */
 240:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     inline const _Tp&
 243:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 245:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	return __b;
 248:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       return __a;
 249:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     }
 250:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 251:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   /**
 252:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *
 259:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   */
 262:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     inline const _Tp&
 265:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 267:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	return __b;
 270:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       return __a;
 271:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     }
 272:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 273:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 274:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 275:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     inline _Iterator
 277:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     { return __it; }
 279:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 280:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 281:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 282:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 283:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 284:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 285:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 286:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 287:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __copy_move
 288:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 289:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 290:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static _OI
 291:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 292:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         {
 293:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 294:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    *__result = *__first;
 295:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  return __result;
 296:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	}
 297:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     };
 298:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 299:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 300:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<typename _Category>
 301:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 302:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 303:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 304:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static _OI
 305:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 306:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         {
 307:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 308:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 309:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  return __result;
 310:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	}
 311:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     };
 312:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #endif
 313:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 314:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<>
 315:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 316:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 317:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 318:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static _OI
 319:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 320:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         { 
 321:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 322:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 323:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    {
 324:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	      *__result = *__first;
 325:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	      ++__first;
 326:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	      ++__result;
 327:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    }
 328:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  return __result;
 329:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	}
 330:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     };
 331:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 332:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 333:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<>
 334:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 335:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 336:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 337:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static _OI
 338:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 339:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         { 
 340:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 341:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 342:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    {
 343:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 344:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	      ++__first;
 345:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	      ++__result;
 346:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    }
 347:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  return __result;
 348:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	}
 349:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     };
 350:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #endif
 351:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 
 352:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****   template<bool _IsMove>
 353:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 354:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****     {
 355:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****       template<typename _Tp>
 356:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         static _Tp*
 357:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 358:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h ****         {
 359:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 360:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 361:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 362:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 363:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 364:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 365:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** #endif
 366:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 367:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	  if (_Num)
 368:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 377              		.loc 3 368 0
 378 0108 2A46     		mov	r2, r5
 379 010a 03CA     		ldmia	r2!, {r0, r1}
 380 010c E062     		str	r0, [r4, #44]	@ unaligned
 381 010e 1068     		ldr	r0, [r2]
 382 0110 2163     		str	r1, [r4, #48]	@ unaligned
 383 0112 6063     		str	r0, [r4, #52]	@ unaligned
 384              	.LVL28:
 385              	.LBE56:
 386              	.LBE55:
 387              	.LBE54:
 388              	.LBE53:
 389              	.LBE52:
 390              	.LBE51:
 391              	.LBB57:
 392              	.LBB58:
 393              	.LBB59:
 394              	.LBB60:
 395              	.LBB61:
 396              	.LBB62:
 397 0114 03CB     		ldmia	r3!, {r0, r1}
 398              	.LVL29:
 399 0116 E063     		str	r0, [r4, #60]	@ unaligned
 400 0118 1868     		ldr	r0, [r3]
 401              	.LBE62:
 402              	.LBE61:
 403              	.LBE60:
 404              	.LBE59:
 405              	.LBE58:
 406              	.LBE57:
 407              	.LBB68:
 408              	.LBB69:
 409              	.LBB70:
 410              	.LBB71:
 411              	.LBB72:
 412              	.LBB73:
 413 011a 0AAB     		add	r3, sp, #40
 414              	.LVL30:
 415              	.LBE73:
 416              	.LBE72:
 417              	.LBE71:
 418              	.LBE70:
 419              	.LBE69:
 420              	.LBE68:
 421              	.LBB84:
 422              	.LBB67:
 423              	.LBB66:
 424              	.LBB65:
 425              	.LBB64:
 426              	.LBB63:
 427 011c 2164     		str	r1, [r4, #64]	@ unaligned
 428 011e 6064     		str	r0, [r4, #68]	@ unaligned
 429              	.LVL31:
 430              	.LBE63:
 431              	.LBE64:
 432              	.LBE65:
 433              	.LBE66:
 434              	.LBE67:
 435              	.LBE84:
 436              	.LBB85:
 437              	.LBB82:
 438              	.LBB80:
 439              	.LBB78:
 440              	.LBB76:
 441              	.LBB74:
 442 0120 03CB     		ldmia	r3!, {r0, r1}
 443              	.LVL32:
 444 0122 E061     		str	r0, [r4, #28]	@ unaligned
 445 0124 0020     		movs	r0, #0
 446              	.LBE74:
 447              	.LBE76:
 448              	.LBE78:
 449              	.LBE80:
 450              	.LBE82:
 451              	.LBE85:
 452              	.LBB86:
 453              	.LBB87:
 454              	.LBB88:
 455              	.LBB89:
 456              	.LBB90:
 457              	.LBB91:
 458 0126 0DAB     		add	r3, sp, #52
 459              	.LVL33:
 460              	.LBE91:
 461              	.LBE90:
 462              	.LBE89:
 463              	.LBE88:
 464              	.LBE87:
 465              	.LBE86:
 466              	.LBB102:
 467              	.LBB83:
 468              	.LBB81:
 469              	.LBB79:
 470              	.LBB77:
 471              	.LBB75:
 472 0128 2162     		str	r1, [r4, #32]	@ unaligned
 473 012a 6062     		str	r0, [r4, #36]	@ unaligned
 474              	.LVL34:
 475              	.LBE75:
 476              	.LBE77:
 477              	.LBE79:
 478              	.LBE81:
 479              	.LBE83:
 480              	.LBE102:
 481              	.LBB103:
 482              	.LBB100:
 483              	.LBB98:
 484              	.LBB96:
 485              	.LBB94:
 486              	.LBB92:
 487 012c 03CB     		ldmia	r3!, {r0, r1}
 488              	.LVL35:
 489 012e E060     		str	r0, [r4, #12]	@ unaligned
 490 0130 0020     		movs	r0, #0
 491 0132 6061     		str	r0, [r4, #20]	@ unaligned
 492              	.LVL36:
 493              	.LBE92:
 494              	.LBE94:
 495              	.LBE96:
 496              	.LBE98:
 497              	.LBE100:
 498              	.LBE103:
  86:src/servo.cpp **** }
 499              		.loc 2 86 0
 500 0134 0120     		movs	r0, #1
 501              	.LBB104:
 502              	.LBB101:
 503              	.LBB99:
 504              	.LBB97:
 505              	.LBB95:
 506              	.LBB93:
 507              		.loc 3 368 0
 508 0136 2161     		str	r1, [r4, #16]	@ unaligned
 509              	.LVL37:
 510              	.L10:
 511              	.LBE93:
 512              	.LBE95:
 513              	.LBE97:
 514              	.LBE99:
 515              	.LBE101:
 516              	.LBE104:
  87:src/servo.cpp **** 
 517              		.loc 2 87 0
 518 0138 14B0     		add	sp, sp, #80
 519              	.LCFI6:
 520              		.cfi_remember_state
 521              		.cfi_def_cfa_offset 16
 522              		@ sp needed
 523 013a 70BD     		pop	{r4, r5, r6, pc}
 524              	.LVL38:
 525              	.L13:
 526              	.LCFI7:
 527              		.cfi_restore_state
  52:src/servo.cpp **** 			TIM_OC2PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 528              		.loc 2 52 0
 529 013c 10A9     		add	r1, sp, #64
 530 013e 9868     		ldr	r0, [r3, #8]
 531 0140 FFF7FEFF 		bl	TIM_OC2Init
 532              	.LVL39:
  53:src/servo.cpp **** 			break;
 533              		.loc 2 53 0
 534 0144 6368     		ldr	r3, [r4, #4]
 535 0146 0821     		movs	r1, #8
 536 0148 9868     		ldr	r0, [r3, #8]
 537 014a FFF7FEFF 		bl	TIM_OC2PreloadConfig
 538              	.LVL40:
 539 014e BBE7     		b	.L16
 540              	.L14:
  56:src/servo.cpp **** 			TIM_OC3PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 541              		.loc 2 56 0
 542 0150 10A9     		add	r1, sp, #64
 543 0152 9868     		ldr	r0, [r3, #8]
 544 0154 FFF7FEFF 		bl	TIM_OC3Init
 545              	.LVL41:
  57:src/servo.cpp **** 			break;
 546              		.loc 2 57 0
 547 0158 6368     		ldr	r3, [r4, #4]
 548 015a 0821     		movs	r1, #8
 549 015c 9868     		ldr	r0, [r3, #8]
 550 015e FFF7FEFF 		bl	TIM_OC3PreloadConfig
 551              	.LVL42:
 552 0162 B1E7     		b	.L16
 553              	.L15:
  60:src/servo.cpp **** 			TIM_OC4PreloadConfig(m_settings->m_Timer, TIM_OCPreload_Enable);
 554              		.loc 2 60 0
 555 0164 10A9     		add	r1, sp, #64
 556 0166 9868     		ldr	r0, [r3, #8]
 557 0168 FFF7FEFF 		bl	TIM_OC4Init
 558              	.LVL43:
  61:src/servo.cpp **** 			break;
 559              		.loc 2 61 0
 560 016c 6368     		ldr	r3, [r4, #4]
 561 016e 0821     		movs	r1, #8
 562 0170 9868     		ldr	r0, [r3, #8]
 563 0172 FFF7FEFF 		bl	TIM_OC4PreloadConfig
 564              	.LVL44:
 565 0176 A7E7     		b	.L16
 566              	.L17:
  64:src/servo.cpp **** 	}
 567              		.loc 2 64 0
 568 0178 0020     		movs	r0, #0
 569 017a DDE7     		b	.L10
 570              	.L19:
 571              		.align	2
 572              	.L18:
 573 017c 28000000 		.word	.LANCHOR0+40
 574              		.cfi_endproc
 575              	.LFE1145:
 576              		.fnend
 578              		.align	1
 579              		.global	_ZN5servoC2EP13motorSettings
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 583              		.fpu softvfp
 585              	_ZN5servoC2EP13motorSettings:
 586              		.fnstart
 587              	.LFB1139:
   6:src/servo.cpp **** {
 588              		.loc 2 6 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              	.LVL45:
 593 0180 10B5     		push	{r4, lr}
 594              		.save {r4, lr}
 595              	.LCFI8:
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 4, -8
 598              		.cfi_offset 14, -4
   6:src/servo.cpp **** {
 599              		.loc 2 6 0
 600 0182 0446     		mov	r4, r0
 601              	.LBB105:
 602 0184 FFF7FEFF 		bl	_ZN5motorC2EP13motorSettings
 603              	.LVL46:
 604 0188 014B     		ldr	r3, .L21
 605              	.LBE105:
   9:src/servo.cpp **** 
 606              		.loc 2 9 0
 607 018a 2046     		mov	r0, r4
 608              	.LBB106:
   6:src/servo.cpp **** {
 609              		.loc 2 6 0
 610 018c 2360     		str	r3, [r4]
 611              	.LBE106:
   9:src/servo.cpp **** 
 612              		.loc 2 9 0
 613 018e 10BD     		pop	{r4, pc}
 614              	.LVL47:
 615              	.L22:
 616              		.align	2
 617              	.L21:
 618 0190 08000000 		.word	.LANCHOR0+8
 619              		.cfi_endproc
 620              	.LFE1139:
 621              		.fnend
 623              		.global	_ZN5servoC1EP13motorSettings
 624              		.thumb_set _ZN5servoC1EP13motorSettings,_ZN5servoC2EP13motorSettings
 625              		.global	__aeabi_fmul
 626              		.global	__aeabi_fadd
 627              		.global	__aeabi_fsub
 628              		.align	1
 629              		.global	_ZN5servo12filterUpdateEf
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 633              		.fpu softvfp
 635              	_ZN5servo12filterUpdateEf:
 636              		.fnstart
 637              	.LFB1150:
 100:src/servo.cpp **** 
 101:src/servo.cpp **** //std::tuple<float, int, int, int> servo::update(float dt, bool connected){
 102:src/servo.cpp **** float servo::update(float dt, bool connected, bool enable){
 103:src/servo.cpp **** 	int spDeg = (int)filterUpdate(pos);
 104:src/servo.cpp **** 	int sp = spDeg * (m_settings->m_ServoLimitMax - m_settings->m_ServoLimitMin) / 180 + m_settings->m
 105:src/servo.cpp **** 
 106:src/servo.cpp **** 	__disable_irq();
 107:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
 108:src/servo.cpp **** 		case 1:
 109:src/servo.cpp **** 			(m_settings->m_Timer)->CCR1 = sp;
 110:src/servo.cpp **** 			break;
 111:src/servo.cpp **** 		case 2:
 112:src/servo.cpp **** 			(m_settings->m_Timer)->CCR2 = sp;
 113:src/servo.cpp **** 			break;
 114:src/servo.cpp **** 		case 3:
 115:src/servo.cpp **** 			(m_settings->m_Timer)->CCR3 = sp;
 116:src/servo.cpp **** 			break;
 117:src/servo.cpp **** 		case 4:
 118:src/servo.cpp **** 			(m_settings->m_Timer)->CCR4 = sp;
 119:src/servo.cpp **** 			break;
 120:src/servo.cpp **** 	}
 121:src/servo.cpp **** 	__enable_irq();
 122:src/servo.cpp **** 	return (float)spDeg;//std::make_tuple(y0, 0, sp, 0);
 123:src/servo.cpp **** }
 124:src/servo.cpp **** 
 125:src/servo.cpp **** float servo::filterUpdate(float sp){
 638              		.loc 2 125 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              	.LVL48:
 643 0194 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 644              	.LCFI9:
 645              		.cfi_def_cfa_offset 24
 646              		.cfi_offset 3, -24
 647              		.cfi_offset 4, -20
 648              		.cfi_offset 5, -16
 649              		.cfi_offset 6, -12
 650              		.cfi_offset 7, -8
 651              		.cfi_offset 14, -4
 126:src/servo.cpp **** 	int i;
 127:src/servo.cpp **** 	for(i = 2; i > 0; i--){
 128:src/servo.cpp **** 		u[i] = u[i-1]; 
 129:src/servo.cpp **** 	}
 130:src/servo.cpp **** 	u[0] = sp; 
 652              		.loc 2 130 0
 653 0196 0546     		mov	r5, r0
 125:src/servo.cpp **** 	int i;
 654              		.loc 2 125 0
 655 0198 0446     		mov	r4, r0
 131:src/servo.cpp **** 	
 132:src/servo.cpp **** 	float Y = 0;
 656              		.loc 2 132 0
 657 019a 0026     		movs	r6, #0
 133:src/servo.cpp **** 	for(i = 0; i<3; i++){
 658              		.loc 2 133 0
 659 019c 0027     		movs	r7, #0
 128:src/servo.cpp **** 	}
 660              		.loc 2 128 0
 661 019e 0369     		ldr	r3, [r0, #16]	@ float
 662 01a0 4361     		str	r3, [r0, #20]	@ float
 663              	.LVL49:
 664 01a2 C368     		ldr	r3, [r0, #12]	@ float
 665 01a4 0361     		str	r3, [r0, #16]	@ float
 666              	.LVL50:
 130:src/servo.cpp **** 	
 667              		.loc 2 130 0
 668 01a6 45F80C1F 		str	r1, [r5, #12]!	@ float
 669              	.LVL51:
 670              	.L24:
 671 01aa 2B46     		mov	r3, r5
 134:src/servo.cpp **** 		Y += b[i]*u[i];
 672              		.loc 2 134 0
 673 01ac 2968     		ldr	r1, [r5]	@ float
 674 01ae 186A     		ldr	r0, [r3, #32]	@ float
 675 01b0 FFF7FEFF 		bl	__aeabi_fmul
 676              	.LVL52:
 677 01b4 0146     		mov	r1, r0
 678 01b6 3046     		mov	r0, r6
 679 01b8 FFF7FEFF 		bl	__aeabi_fadd
 680              	.LVL53:
 135:src/servo.cpp **** 		if(i < 2)
 681              		.loc 2 135 0
 682 01bc 022F     		cmp	r7, #2
 134:src/servo.cpp **** 		Y += b[i]*u[i];
 683              		.loc 2 134 0
 684 01be 05F10405 		add	r5, r5, #4
 685 01c2 0646     		mov	r6, r0
 686              	.LVL54:
 687              		.loc 2 135 0
 688 01c4 08D0     		beq	.L25
 136:src/servo.cpp **** 			Y -= a[i+1]*y[i];
 689              		.loc 2 136 0
 690 01c6 E968     		ldr	r1, [r5, #12]	@ float
 691 01c8 286B     		ldr	r0, [r5, #48]	@ float
 692              	.LVL55:
 693 01ca FFF7FEFF 		bl	__aeabi_fmul
 694              	.LVL56:
 695 01ce 0146     		mov	r1, r0
 696 01d0 3046     		mov	r0, r6
 697 01d2 FFF7FEFF 		bl	__aeabi_fsub
 698              	.LVL57:
 699 01d6 0646     		mov	r6, r0
 700              	.LVL58:
 701              	.L25:
 133:src/servo.cpp **** 		Y += b[i]*u[i];
 702              		.loc 2 133 0 discriminator 2
 703 01d8 0137     		adds	r7, r7, #1
 704              	.LVL59:
 705 01da 032F     		cmp	r7, #3
 706 01dc E5D1     		bne	.L24
 707              	.LVL60:
 137:src/servo.cpp **** 	}
 138:src/servo.cpp **** 	//Y /= a[0];
 139:src/servo.cpp **** 
 140:src/servo.cpp **** 	for(i = 2; i > 0; i--){
 141:src/servo.cpp **** 		y[i] = y[i-1]; 
 708              		.loc 2 141 0 discriminator 3
 709 01de 236A     		ldr	r3, [r4, #32]	@ float
 142:src/servo.cpp **** 	}
 143:src/servo.cpp **** 	y[0] = Y;
 144:src/servo.cpp **** 	return Y;
 145:src/servo.cpp **** }...
 710              		.loc 2 145 0 discriminator 3
 711 01e0 3046     		mov	r0, r6
 141:src/servo.cpp **** 		y[i] = y[i-1]; 
 712              		.loc 2 141 0 discriminator 3
 713 01e2 6362     		str	r3, [r4, #36]	@ float
 714              	.LVL61:
 715 01e4 E369     		ldr	r3, [r4, #28]	@ float
 143:src/servo.cpp **** 	y[0] = Y;
 716              		.loc 2 143 0 discriminator 3
 717 01e6 E661     		str	r6, [r4, #28]	@ float
 141:src/servo.cpp **** 		y[i] = y[i-1]; 
 718              		.loc 2 141 0 discriminator 3
 719 01e8 2362     		str	r3, [r4, #32]	@ float
 720              	.LVL62:
 721              		.loc 2 145 0 discriminator 3
 722 01ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 723              		.cfi_endproc
 724              	.LFE1150:
 725              		.cantunwind
 726              		.fnend
 728              		.align	1
 729              		.global	_ZN5servo6updateEfbb
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 733              		.fpu softvfp
 735              	_ZN5servo6updateEfbb:
 736              		.fnstart
 737              	.LFB1149:
 102:src/servo.cpp **** float servo::update(float dt, bool connected, bool enable){
 738              		.loc 2 102 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              	.LVL63:
 743 01ec 10B5     		push	{r4, lr}
 744              	.LCFI10:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 4, -8
 747              		.cfi_offset 14, -4
 102:src/servo.cpp **** float servo::update(float dt, bool connected, bool enable){
 748              		.loc 2 102 0
 749 01ee 0446     		mov	r4, r0
 103:src/servo.cpp **** 	int spDeg = (int)filterUpdate(pos);
 750              		.loc 2 103 0
 751 01f0 8068     		ldr	r0, [r0, #8]
 752              	.LVL64:
 753 01f2 FFF7FEFF 		bl	__aeabi_i2f
 754              	.LVL65:
 755 01f6 0146     		mov	r1, r0
 756 01f8 2046     		mov	r0, r4
 757 01fa FFF7FEFF 		bl	_ZN5servo12filterUpdateEf
 758              	.LVL66:
 759 01fe FFF7FEFF 		bl	__aeabi_f2iz
 760              	.LVL67:
 104:src/servo.cpp **** 	int sp = spDeg * (m_settings->m_ServoLimitMax - m_settings->m_ServoLimitMin) / 180 + m_settings->m
 761              		.loc 2 104 0
 762 0202 6168     		ldr	r1, [r4, #4]
 763 0204 4C69     		ldr	r4, [r1, #20]
 764              	.LVL68:
 765 0206 0A69     		ldr	r2, [r1, #16]
 766 0208 131B     		subs	r3, r2, r4
 767 020a B422     		movs	r2, #180
 768 020c 4343     		muls	r3, r0, r3
 769 020e 93FBF2F3 		sdiv	r3, r3, r2
 770 0212 2344     		add	r3, r3, r4
 771              	.LVL69:
 772              	.LBB107:
 773              	.LBB108:
 774              		.file 4 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 775              		.loc 4 1205 0
 776              		.syntax unified
 777              	@ 1205 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 778 0214 72B6     		cpsid i
 779              	@ 0 "" 2
 780              		.thumb
 781              		.syntax unified
 782              	.LBE108:
 783              	.LBE107:
 107:src/servo.cpp **** 	switch(m_settings->m_TimerChannel){
 784              		.loc 2 107 0
 785 0216 CA68     		ldr	r2, [r1, #12]
 786 0218 013A     		subs	r2, r2, #1
 787 021a 032A     		cmp	r2, #3
 788 021c 06D8     		bhi	.L32
 789 021e DFE802F0 		tbb	[pc, r2]
 790              	.L34:
 791 0222 02       		.byte	(.L33-.L34)/2
 792 0223 09       		.byte	(.L35-.L34)/2
 793 0224 0D       		.byte	(.L36-.L34)/2
 794 0225 11       		.byte	(.L37-.L34)/2
 795              		.p2align 1
 796              	.L33:
 109:src/servo.cpp **** 			(m_settings->m_Timer)->CCR1 = sp;
 797              		.loc 2 109 0
 798 0226 8A68     		ldr	r2, [r1, #8]
 799 0228 9BB2     		uxth	r3, r3
 800              	.LVL70:
 801 022a 9386     		strh	r3, [r2, #52]	@ movhi
 802              	.L32:
 803              	.LBB109:
 804              	.LBB110:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 805              		.loc 4 1204 0
 806              		.syntax unified
 807              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 808 022c 62B6     		cpsie i
 809              	@ 0 "" 2
 810              		.thumb
 811              		.syntax unified
 812              	.LBE110:
 813              	.LBE109:
 122:src/servo.cpp **** 	return (float)spDeg;//std::make_tuple(y0, 0, sp, 0);
 814              		.loc 2 122 0
 815 022e FFF7FEFF 		bl	__aeabi_i2f
 816              	.LVL71:
 123:src/servo.cpp **** }
 817              		.loc 2 123 0
 818 0232 10BD     		pop	{r4, pc}
 819              	.LVL72:
 820              	.L35:
 112:src/servo.cpp **** 			(m_settings->m_Timer)->CCR2 = sp;
 821              		.loc 2 112 0
 822 0234 8A68     		ldr	r2, [r1, #8]
 823 0236 9BB2     		uxth	r3, r3
 824              	.LVL73:
 825 0238 1387     		strh	r3, [r2, #56]	@ movhi
 113:src/servo.cpp **** 			break;
 826              		.loc 2 113 0
 827 023a F7E7     		b	.L32
 828              	.LVL74:
 829              	.L36:
 115:src/servo.cpp **** 			(m_settings->m_Timer)->CCR3 = sp;
 830              		.loc 2 115 0
 831 023c 8A68     		ldr	r2, [r1, #8]
 832 023e 9BB2     		uxth	r3, r3
 833              	.LVL75:
 834 0240 9387     		strh	r3, [r2, #60]	@ movhi
 116:src/servo.cpp **** 			break;
 835              		.loc 2 116 0
 836 0242 F3E7     		b	.L32
 837              	.LVL76:
 838              	.L37:
 118:src/servo.cpp **** 			(m_settings->m_Timer)->CCR4 = sp;
 839              		.loc 2 118 0
 840 0244 8A68     		ldr	r2, [r1, #8]
 841 0246 9BB2     		uxth	r3, r3
 842              	.LVL77:
 843 0248 A2F84030 		strh	r3, [r2, #64]	@ movhi
 119:src/servo.cpp **** 			break;
 844              		.loc 2 119 0
 845 024c EEE7     		b	.L32
 846              		.cfi_endproc
 847              	.LFE1149:
 848              		.cantunwind
 849              		.fnend
 851              		.global	_ZTS5servo
 852              		.global	_ZTI5servo
 853              		.global	_ZTV5servo
 854              		.section	.rodata
 855              		.align	2
 856              		.set	.LANCHOR0,. + 0
 859              	_ZTV5servo:
 860 0000 00000000 		.word	0
 861 0004 00000000 		.word	_ZTI5servo
 862 0008 00000000 		.word	_ZN5servoD1Ev
 863 000c 00000000 		.word	_ZN5servoD0Ev
 864 0010 00000000 		.word	_ZN5servo9motorTypeEv
 865 0014 00000000 		.word	_ZN5servo9motorInitEv
 866 0018 00000000 		.word	_ZN5servo9motorNameEv
 867 001c 00000000 		.word	_ZN5servo12setReferenceEf
 868 0020 00000000 		.word	_ZN5servo12getReferenceEv
 869 0024 00000000 		.word	_ZN5servo6updateEfbb
 870              	.LC0:
 871 0028 C1A8A43C 		.word	1017424065
 872 002c C1A8243D 		.word	1025812673
 873 0030 C1A8A43C 		.word	1017424065
 874              	.LC1:
 875 0034 0000803F 		.word	1065353216
 876 0038 D9CEC7BF 		.word	3217542873
 877 003c CA32243F 		.word	1059336906
 880              	_ZTS5servo:
 881 0040 35736572 		.ascii	"5servo\000"
 881      766F00
 882 0047 00       		.space	1
 885              	_ZTI5servo:
 886 0048 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 887 004c 00000000 		.word	_ZTS5servo
 888 0050 00000000 		.word	_ZTI5motor
 889              		.text
 890              	.Letext0:
 891              		.file 5 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/machine/_default_types.h"
 892              		.file 6 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_stdint.h"
 893              		.file 7 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/stdint.h"
 894              		.file 8 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.h"
 895              		.file 9 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 896              		.file 10 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 897              		.file 11 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 898              		.file 12 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/lib/gcc/arm-none-eabi/6.2.1/include/stddef.h"
 899              		.file 13 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/lib/gcc/arm-none-eabi/6.2.1/include/stdarg.h"
 900              		.file 14 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/lock.h"
 901              		.file 15 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_types.h"
 902              		.file 16 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/reent.h"
 903              		.file 17 "<built-in>"
 904              		.file 18 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/stdio.h"
 905              		.file 19 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/type_traits"
 906              		.file 20 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/arm-none-eabi/
 907              		.file 21 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_pair.
 908              		.file 22 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/exception
 909              		.file 23 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/debug/debug.h"
 910              		.file 24 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cwchar"
 911              		.file 25 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cstdint"
 912              		.file 26 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/new"
 913              		.file 27 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/clocale"
 914              		.file 28 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cstdlib"
 915              		.file 29 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cstdio"
 916              		.file 30 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/uses_allo
 917              		.file 31 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_itera
 918              		.file 32 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/tuple"
 919              		.file 33 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/cpp_type_
 920              		.file 34 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/predefine
 921              		.file 35 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/ext/new_alloca
 922              		.file 36 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/ext/numeric_tr
 923              		.file 37 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/wchar.h"
 924              		.file 38 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/locale.h"
 925              		.file 39 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/ctype.h"
 926              		.file 40 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/stdlib.h"
 927              		.file 41 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/errno.h"
 928              		.file 42 "./inc/motorSettings.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 servo.cpp
     /tmp/ccNwI2Sn.s:16     .text._ZN5servo9motorTypeEv:0000000000000000 $t
     /tmp/ccNwI2Sn.s:23     .text._ZN5servo9motorTypeEv:0000000000000000 _ZN5servo9motorTypeEv
.ARM.exidx.text._ZN5servo9motorTypeEv:0000000000000000 $d
     /tmp/ccNwI2Sn.s:44     .text:0000000000000000 $t
     /tmp/ccNwI2Sn.s:51     .text:0000000000000000 _ZN5servo12setReferenceEf
                       .ARM.exidx:0000000000000000 $d
     /tmp/ccNwI2Sn.s:87     .text:000000000000000e _ZN5servo12getReferenceEv
     /tmp/ccNwI2Sn.s:119    .text:0000000000000018 _ZN5servo9motorNameEv
     /tmp/ccNwI2Sn.s:146    .text:000000000000001e _ZN5servoD2Ev
     /tmp/ccNwI2Sn.s:174    .text:0000000000000030 $d
     /tmp/ccNwI2Sn.s:146    .text:000000000000001e _ZN5servoD1Ev
     /tmp/ccNwI2Sn.s:182    .text:0000000000000034 $t
     /tmp/ccNwI2Sn.s:189    .text:0000000000000034 _ZN5servoD0Ev
     /tmp/ccNwI2Sn.s:224    .text:0000000000000046 _ZN5servo9motorInitEv
     /tmp/ccNwI2Sn.s:311    .text:00000000000000b2 $d
     /tmp/ccNwI2Sn.s:315    .text:00000000000000b6 $t
     /tmp/ccNwI2Sn.s:573    .text:000000000000017c $d
     /tmp/ccNwI2Sn.s:578    .text:0000000000000180 $t
     /tmp/ccNwI2Sn.s:585    .text:0000000000000180 _ZN5servoC2EP13motorSettings
     /tmp/ccNwI2Sn.s:618    .text:0000000000000190 $d
     /tmp/ccNwI2Sn.s:585    .text:0000000000000180 _ZN5servoC1EP13motorSettings
     /tmp/ccNwI2Sn.s:628    .text:0000000000000194 $t
     /tmp/ccNwI2Sn.s:635    .text:0000000000000194 _ZN5servo12filterUpdateEf
     /tmp/ccNwI2Sn.s:735    .text:00000000000001ec _ZN5servo6updateEfbb
     /tmp/ccNwI2Sn.s:791    .text:0000000000000222 $d
     /tmp/ccNwI2Sn.s:795    .text:0000000000000226 $t
     /tmp/ccNwI2Sn.s:880    .rodata:0000000000000040 _ZTS5servo
     /tmp/ccNwI2Sn.s:885    .rodata:0000000000000048 _ZTI5servo
     /tmp/ccNwI2Sn.s:859    .rodata:0000000000000000 _ZTV5servo
     /tmp/ccNwI2Sn.s:855    .rodata:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_f2iz
__aeabi_i2f
_ZN5motorD2Ev
_ZdlPv
GPIO_Init
TIM_TimeBaseInit
TIM_OCStructInit
TIM_OC1Init
TIM_OC1PreloadConfig
TIM_ARRPreloadConfig
TIM_CtrlPWMOutputs
TIM_Cmd
TIM_OC2Init
TIM_OC2PreloadConfig
TIM_OC3Init
TIM_OC3PreloadConfig
TIM_OC4Init
TIM_OC4PreloadConfig
__aeabi_unwind_cpp_pr0
_ZN5motorC2EP13motorSettings
__aeabi_fmul
__aeabi_fadd
__aeabi_fsub
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTI5motor
