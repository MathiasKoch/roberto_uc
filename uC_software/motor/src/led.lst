   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"led.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.align	1
  16              		.global	LED_Init
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	LED_Init:
  23              	.LFB30:
  24              		.file 1 "src/led.c"
   1:src/led.c     **** 
   2:src/led.c     **** #include <stdio.h>
   3:src/led.c     **** #include <stdbool.h>
   4:src/led.c     **** #include <stdint.h>
   5:src/led.c     **** 
   6:src/led.c     **** #include <stm32f10x.h>
   7:src/led.c     **** #include "led.h"
   8:src/led.c     **** 
   9:src/led.c     **** 
  10:src/led.c     **** #define DEBUG_PRINT(args...) printf(args)
  11:src/led.c     **** 
  12:src/led.c     **** 
  13:src/led.c     **** TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
  14:src/led.c     **** TIM_OCInitTypeDef  TIM_OCInitStructure;
  15:src/led.c     **** 
  16:src/led.c     **** 
  17:src/led.c     **** 
  18:src/led.c     **** void LED_Init(){
  25              		.loc 1 18 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  19:src/led.c     **** 
  20:src/led.c     **** 	GPIO_InitTypeDef GPIO_InitStructure;
  21:src/led.c     **** 
  22:src/led.c     **** 	/*Configure GPIO pin : PA1 */
  23:src/led.c     **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
  29              		.loc 1 23 0
  30 0000 0223     		movs	r3, #2
  18:src/led.c     **** 
  31              		.loc 1 18 0
  32 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              		.loc 1 23 0
  39 0004 ADF80430 		strh	r3, [sp, #4]	@ movhi
  24:src/led.c     **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
  40              		.loc 1 24 0
  41 0008 1823     		movs	r3, #24
  42 000a 8DF80730 		strb	r3, [sp, #7]
  25:src/led.c     **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  43              		.loc 1 25 0
  44 000e 0323     		movs	r3, #3
  26:src/led.c     **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
  27:src/led.c     **** 
  28:src/led.c     **** 
  29:src/led.c     **** 	TIM_OCStructInit(&TIM_OCInitStructure); // clears the other 4 fields not used here
  45              		.loc 1 29 0
  46 0010 154C     		ldr	r4, .L2
  26:src/led.c     **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
  47              		.loc 1 26 0
  48 0012 01A9     		add	r1, sp, #4
  49 0014 1548     		ldr	r0, .L2+4
  25:src/led.c     **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  50              		.loc 1 25 0
  51 0016 8DF80630 		strb	r3, [sp, #6]
  26:src/led.c     **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
  52              		.loc 1 26 0
  53 001a FFF7FEFF 		bl	GPIO_Init
  54              	.LVL0:
  55              		.loc 1 29 0
  56 001e 2046     		mov	r0, r4
  57 0020 FFF7FEFF 		bl	TIM_OCStructInit
  58              	.LVL1:
  30:src/led.c     **** 
  31:src/led.c     **** 	/* PWM1 Mode configuration: Channel1 */
  32:src/led.c     **** 	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
  59              		.loc 1 32 0
  60 0024 6023     		movs	r3, #96
  33:src/led.c     **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  61              		.loc 1 33 0
  62 0026 0125     		movs	r5, #1
  32:src/led.c     **** 	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
  63              		.loc 1 32 0
  64 0028 2380     		strh	r3, [r4]	@ movhi
  34:src/led.c     **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
  65              		.loc 1 34 0
  66 002a 0023     		movs	r3, #0
  35:src/led.c     **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
  36:src/led.c     **** 
  37:src/led.c     **** 	TIM_OC2Init(TIM2, &TIM_OCInitStructure);
  67              		.loc 1 37 0
  68 002c 2146     		mov	r1, r4
  69 002e 4FF08040 		mov	r0, #1073741824
  34:src/led.c     **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
  70              		.loc 1 34 0
  71 0032 E380     		strh	r3, [r4, #6]	@ movhi
  35:src/led.c     **** 	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
  72              		.loc 1 35 0
  73 0034 2381     		strh	r3, [r4, #8]	@ movhi
  33:src/led.c     **** 	TIM_OCInitStructure.TIM_Pulse = 0x0000;
  74              		.loc 1 33 0
  75 0036 6580     		strh	r5, [r4, #2]	@ movhi
  76              		.loc 1 37 0
  77 0038 FFF7FEFF 		bl	TIM_OC2Init
  78              	.LVL2:
  38:src/led.c     **** 	
  39:src/led.c     **** 	TIM_OC2PreloadConfig(TIM2, TIM_OCPreload_Enable);
  79              		.loc 1 39 0
  80 003c 0821     		movs	r1, #8
  81 003e 4FF08040 		mov	r0, #1073741824
  82 0042 FFF7FEFF 		bl	TIM_OC2PreloadConfig
  83              	.LVL3:
  40:src/led.c     **** 
  41:src/led.c     **** 	TIM_ARRPreloadConfig(TIM2, ENABLE);
  84              		.loc 1 41 0
  85 0046 2946     		mov	r1, r5
  86 0048 4FF08040 		mov	r0, #1073741824
  87 004c FFF7FEFF 		bl	TIM_ARRPreloadConfig
  88              	.LVL4:
  42:src/led.c     **** 
  43:src/led.c     **** 
  44:src/led.c     **** 	/* TIM Main Output Enable */
  45:src/led.c     **** 	TIM_CtrlPWMOutputs(TIM2, ENABLE);
  89              		.loc 1 45 0
  90 0050 2946     		mov	r1, r5
  91 0052 4FF08040 		mov	r0, #1073741824
  92 0056 FFF7FEFF 		bl	TIM_CtrlPWMOutputs
  93              	.LVL5:
  46:src/led.c     **** 
  47:src/led.c     **** 	/* TIM enable counter */
  48:src/led.c     **** 	TIM_Cmd(TIM2, ENABLE);
  94              		.loc 1 48 0
  95 005a 2946     		mov	r1, r5
  96 005c 4FF08040 		mov	r0, #1073741824
  97 0060 FFF7FEFF 		bl	TIM_Cmd
  98              	.LVL6:
  49:src/led.c     **** }
  99              		.loc 1 49 0
 100 0064 03B0     		add	sp, sp, #12
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 12
 103              		@ sp needed
 104 0066 30BD     		pop	{r4, r5, pc}
 105              	.L3:
 106              		.align	2
 107              	.L2:
 108 0068 00000000 		.word	TIM_OCInitStructure
 109 006c 00080140 		.word	1073809408
 110              		.cfi_endproc
 111              	.LFE30:
 113              		.align	1
 114              		.global	led_set
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 118              		.fpu softvfp
 120              	led_set:
 121              	.LFB31:
  50:src/led.c     **** 
  51:src/led.c     **** 
  52:src/led.c     **** void led_set(uint8_t val){
 122              		.loc 1 52 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.LVL7:
  53:src/led.c     **** 	TIM2->CCR2 = val*TIM2->ARR/255;
 128              		.loc 1 53 0
 129 0070 4FF08042 		mov	r2, #1073741824
 130 0074 938D     		ldrh	r3, [r2, #44]
 131 0076 9BB2     		uxth	r3, r3
 132 0078 5843     		muls	r0, r3, r0
 133              	.LVL8:
 134 007a FF23     		movs	r3, #255
 135 007c 90FBF3F0 		sdiv	r0, r0, r3
 136 0080 80B2     		uxth	r0, r0
 137 0082 1087     		strh	r0, [r2, #56]	@ movhi
 138 0084 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE31:
 142              		.align	1
 143              		.global	DEBUG_Init
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu softvfp
 149              	DEBUG_Init:
 150              	.LFB32:
  54:src/led.c     **** }
  55:src/led.c     **** 
  56:src/led.c     **** void DEBUG_Init(){
 151              		.loc 1 56 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 0, uses_anonymous_args = 0
  57:src/led.c     **** 	GPIO_InitTypeDef  GPIO_InitStructure;
  58:src/led.c     **** 
  59:src/led.c     **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 155              		.loc 1 59 0
 156 0086 3023     		movs	r3, #48
  56:src/led.c     **** 	GPIO_InitTypeDef  GPIO_InitStructure;
 157              		.loc 1 56 0
 158 0088 07B5     		push	{r0, r1, r2, lr}
 159              	.LCFI2:
 160              		.cfi_def_cfa_offset 16
 161              		.cfi_offset 14, -4
 162              		.loc 1 59 0
 163 008a ADF80430 		strh	r3, [sp, #4]	@ movhi
  60:src/led.c     **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 164              		.loc 1 60 0
 165 008e 0323     		movs	r3, #3
 166 0090 8DF80630 		strb	r3, [sp, #6]
  61:src/led.c     **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 167              		.loc 1 61 0
 168 0094 1023     		movs	r3, #16
  62:src/led.c     **** 	GPIO_Init(GPIOB, &GPIO_InitStructure);
 169              		.loc 1 62 0
 170 0096 01A9     		add	r1, sp, #4
 171 0098 0348     		ldr	r0, .L6
  61:src/led.c     **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
 172              		.loc 1 61 0
 173 009a 8DF80730 		strb	r3, [sp, #7]
 174              		.loc 1 62 0
 175 009e FFF7FEFF 		bl	GPIO_Init
 176              	.LVL9:
  63:src/led.c     **** }
 177              		.loc 1 63 0
 178 00a2 03B0     		add	sp, sp, #12
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 4
 181              		@ sp needed
 182 00a4 5DF804FB 		ldr	pc, [sp], #4
 183              	.L7:
 184              		.align	2
 185              	.L6:
 186 00a8 000C0140 		.word	1073810432
 187              		.cfi_endproc
 188              	.LFE32:
 190              		.align	1
 191              		.global	debug_toggle
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu softvfp
 197              	debug_toggle:
 198              	.LFB33:
  64:src/led.c     **** 
  65:src/led.c     **** void debug_toggle(void){
 199              		.loc 1 65 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
  66:src/led.c     ****     uint8_t led_bit = GPIO_ReadOutputDataBit(GPIOB, GPIO_Pin_5);
 203              		.loc 1 66 0
 204 00ac 2021     		movs	r1, #32
  65:src/led.c     ****     uint8_t led_bit = GPIO_ReadOutputDataBit(GPIOB, GPIO_Pin_5);
 205              		.loc 1 65 0
 206 00ae 08B5     		push	{r3, lr}
 207              	.LCFI4:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 3, -8
 210              		.cfi_offset 14, -4
 211              		.loc 1 66 0
 212 00b0 0748     		ldr	r0, .L10
 213 00b2 FFF7FEFF 		bl	GPIO_ReadOutputDataBit
 214              	.LVL10:
  67:src/led.c     ****     if(led_bit == (uint8_t)Bit_SET)
 215              		.loc 1 67 0
 216 00b6 0128     		cmp	r0, #1
  68:src/led.c     ****         GPIO_ResetBits(GPIOB, GPIO_Pin_5);
 217              		.loc 1 68 0
 218 00b8 4FF02001 		mov	r1, #32
 219 00bc 0448     		ldr	r0, .L10
 220              	.LVL11:
  67:src/led.c     ****     if(led_bit == (uint8_t)Bit_SET)
 221              		.loc 1 67 0
 222 00be 03D1     		bne	.L9
  69:src/led.c     ****     else
  70:src/led.c     ****         GPIO_SetBits(GPIOB, GPIO_Pin_5);
  71:src/led.c     **** }
 223              		.loc 1 71 0
 224 00c0 BDE80840 		pop	{r3, lr}
 225              	.LCFI5:
 226              		.cfi_remember_state
 227              		.cfi_restore 14
 228              		.cfi_restore 3
 229              		.cfi_def_cfa_offset 0
  68:src/led.c     ****         GPIO_ResetBits(GPIOB, GPIO_Pin_5);
 230              		.loc 1 68 0
 231 00c4 FFF7FEBF 		b	GPIO_ResetBits
 232              	.LVL12:
 233              	.L9:
 234              	.LCFI6:
 235              		.cfi_restore_state
 236              		.loc 1 71 0
 237 00c8 BDE80840 		pop	{r3, lr}
 238              	.LCFI7:
 239              		.cfi_restore 14
 240              		.cfi_restore 3
 241              		.cfi_def_cfa_offset 0
  70:src/led.c     **** }
 242              		.loc 1 70 0
 243 00cc FFF7FEBF 		b	GPIO_SetBits
 244              	.LVL13:
 245              	.L11:
 246              		.align	2
 247              	.L10:
 248 00d0 000C0140 		.word	1073810432
 249              		.cfi_endproc
 250              	.LFE33:
 252              		.align	1
 253              		.global	SHUTDOWN_Init
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu softvfp
 259              	SHUTDOWN_Init:
 260              	.LFB34:
  72:src/led.c     **** 
  73:src/led.c     **** void SHUTDOWN_Init(){
 261              		.loc 1 73 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 16
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 00d4 30B5     		push	{r4, r5, lr}
 266              	.LCFI8:
 267              		.cfi_def_cfa_offset 12
 268              		.cfi_offset 4, -12
 269              		.cfi_offset 5, -8
 270              		.cfi_offset 14, -4
  74:src/led.c     **** 	GPIO_InitTypeDef  GPIO_InitStructure;
  75:src/led.c     **** 
  76:src/led.c     **** 	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
  77:src/led.c     **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  78:src/led.c     **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 271              		.loc 1 78 0
 272 00d6 0323     		movs	r3, #3
  76:src/led.c     **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 273              		.loc 1 76 0
 274 00d8 0424     		movs	r4, #4
  73:src/led.c     **** 	GPIO_InitTypeDef  GPIO_InitStructure;
 275              		.loc 1 73 0
 276 00da 85B0     		sub	sp, sp, #20
 277              	.LCFI9:
 278              		.cfi_def_cfa_offset 32
  79:src/led.c     **** 	//GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
  80:src/led.c     **** 	GPIO_Init(GPIOA, &GPIO_InitStructure);
 279              		.loc 1 80 0
 280 00dc 6946     		mov	r1, sp
 281 00de 1348     		ldr	r0, .L13
  78:src/led.c     **** 	//GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 282              		.loc 1 78 0
 283 00e0 8DF80230 		strb	r3, [sp, #2]
  81:src/led.c     **** 
  82:src/led.c     **** 	//SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource2);
  83:src/led.c     **** 
  84:src/led.c     **** 	EXTI_InitTypeDef EXTI_InitStructure;
  85:src/led.c     **** 	EXTI_StructInit(&EXTI_InitStructure);
  86:src/led.c     **** 	EXTI_InitStructure.EXTI_Line = EXTI_Line2;
  87:src/led.c     **** 	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
  88:src/led.c     **** 	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
 284              		.loc 1 88 0
 285 00e4 0825     		movs	r5, #8
  76:src/led.c     **** 	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 286              		.loc 1 76 0
 287 00e6 ADF80040 		strh	r4, [sp]	@ movhi
  77:src/led.c     **** 	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 288              		.loc 1 77 0
 289 00ea 8DF80340 		strb	r4, [sp, #3]
  80:src/led.c     **** 
 290              		.loc 1 80 0
 291 00ee FFF7FEFF 		bl	GPIO_Init
 292              	.LVL14:
  85:src/led.c     **** 	EXTI_InitStructure.EXTI_Line = EXTI_Line2;
 293              		.loc 1 85 0
 294 00f2 02A8     		add	r0, sp, #8
 295 00f4 FFF7FEFF 		bl	EXTI_StructInit
 296              	.LVL15:
  87:src/led.c     **** 	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
 297              		.loc 1 87 0
 298 00f8 0023     		movs	r3, #0
  86:src/led.c     **** 	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 299              		.loc 1 86 0
 300 00fa 0294     		str	r4, [sp, #8]
  89:src/led.c     **** 	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 301              		.loc 1 89 0
 302 00fc 0124     		movs	r4, #1
  90:src/led.c     **** 	EXTI_Init(&EXTI_InitStructure);
 303              		.loc 1 90 0
 304 00fe 0DEB0500 		add	r0, sp, r5
  87:src/led.c     **** 	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;
 305              		.loc 1 87 0
 306 0102 8DF80C30 		strb	r3, [sp, #12]
  88:src/led.c     **** 	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 307              		.loc 1 88 0
 308 0106 8DF80D50 		strb	r5, [sp, #13]
  89:src/led.c     **** 	EXTI_Init(&EXTI_InitStructure);
 309              		.loc 1 89 0
 310 010a 8DF80E40 		strb	r4, [sp, #14]
 311              		.loc 1 90 0
 312 010e FFF7FEFF 		bl	EXTI_Init
 313              	.LVL16:
  91:src/led.c     **** 
  92:src/led.c     **** 	NVIC_InitTypeDef NVIC_InitStructure;
  93:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannel = EXTI2_IRQn;
  94:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x01;
  95:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x01;
  96:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
  97:src/led.c     **** 	NVIC_Init(&NVIC_InitStructure);
 314              		.loc 1 97 0
 315 0112 01A8     		add	r0, sp, #4
  93:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x01;
 316              		.loc 1 93 0
 317 0114 8DF80450 		strb	r5, [sp, #4]
  94:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x01;
 318              		.loc 1 94 0
 319 0118 8DF80540 		strb	r4, [sp, #5]
  95:src/led.c     **** 	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 320              		.loc 1 95 0
 321 011c 8DF80640 		strb	r4, [sp, #6]
  96:src/led.c     **** 	NVIC_Init(&NVIC_InitStructure);
 322              		.loc 1 96 0
 323 0120 8DF80740 		strb	r4, [sp, #7]
 324              		.loc 1 97 0
 325 0124 FFF7FEFF 		bl	NVIC_Init
 326              	.LVL17:
  98:src/led.c     **** }
 327              		.loc 1 98 0
 328 0128 05B0     		add	sp, sp, #20
 329              	.LCFI10:
 330              		.cfi_def_cfa_offset 12
 331              		@ sp needed
 332 012a 30BD     		pop	{r4, r5, pc}
 333              	.L14:
 334              		.align	2
 335              	.L13:
 336 012c 00080140 		.word	1073809408
 337              		.cfi_endproc
 338              	.LFE34:
 340              		.comm	TIM_OCInitStructure,16,2
 341              		.comm	TIM_TimeBaseStructure,10,2
 342              	.Letext0:
 343              		.file 2 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/machine/_default_types.h"
 344              		.file 3 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/lock.h"
 345              		.file 4 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_types.h"
 346              		.file 5 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/lib/gcc/arm-none-eabi/6.2.1/include/stddef.h"
 347              		.file 6 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/reent.h"
 348              		.file 7 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_stdint.h"
 349              		.file 8 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
 350              		.file 9 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.h"
 351              		.file 10 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 352              		.file 11 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 353              		.file 12 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 354              		.file 13 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 355              		.file 14 "./lib/STM32F10x_StdPeriph_Driver/inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 led.c
     /tmp/ccIIcSaR.s:15     .text:0000000000000000 $t
     /tmp/ccIIcSaR.s:22     .text:0000000000000000 LED_Init
     /tmp/ccIIcSaR.s:108    .text:0000000000000068 $d
                            *COM*:0000000000000010 TIM_OCInitStructure
     /tmp/ccIIcSaR.s:113    .text:0000000000000070 $t
     /tmp/ccIIcSaR.s:120    .text:0000000000000070 led_set
     /tmp/ccIIcSaR.s:149    .text:0000000000000086 DEBUG_Init
     /tmp/ccIIcSaR.s:186    .text:00000000000000a8 $d
     /tmp/ccIIcSaR.s:190    .text:00000000000000ac $t
     /tmp/ccIIcSaR.s:197    .text:00000000000000ac debug_toggle
     /tmp/ccIIcSaR.s:248    .text:00000000000000d0 $d
     /tmp/ccIIcSaR.s:252    .text:00000000000000d4 $t
     /tmp/ccIIcSaR.s:259    .text:00000000000000d4 SHUTDOWN_Init
     /tmp/ccIIcSaR.s:336    .text:000000000000012c $d
                            *COM*:000000000000000a TIM_TimeBaseStructure
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
GPIO_Init
TIM_OCStructInit
TIM_OC2Init
TIM_OC2PreloadConfig
TIM_ARRPreloadConfig
TIM_CtrlPWMOutputs
TIM_Cmd
GPIO_ReadOutputDataBit
GPIO_ResetBits
GPIO_SetBits
EXTI_StructInit
EXTI_Init
NVIC_Init
