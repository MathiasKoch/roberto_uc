   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZNK8std_msgs4Time9serializeEPh,"axG",%progbits,_ZNK8std_msgs4Time9serializeEPh,com
  16              		.align	1
  17              		.weak	_ZNK8std_msgs4Time9serializeEPh
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_ZNK8std_msgs4Time9serializeEPh:
  24              		.fnstart
  25              	.LFB1381:
  26              		.file 1 "./lib/ros_lib/std_msgs/Time.h"
   1:./lib/ros_lib/std_msgs/Time.h **** #ifndef _ROS_std_msgs_Time_h
   2:./lib/ros_lib/std_msgs/Time.h **** #define _ROS_std_msgs_Time_h
   3:./lib/ros_lib/std_msgs/Time.h **** 
   4:./lib/ros_lib/std_msgs/Time.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Time.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Time.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Time.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Time.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Time.h **** 
  10:./lib/ros_lib/std_msgs/Time.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Time.h **** {
  12:./lib/ros_lib/std_msgs/Time.h **** 
  13:./lib/ros_lib/std_msgs/Time.h ****   class Time : public ros::Msg
  14:./lib/ros_lib/std_msgs/Time.h ****   {
  15:./lib/ros_lib/std_msgs/Time.h ****     public:
  16:./lib/ros_lib/std_msgs/Time.h ****       ros::Time data;
  17:./lib/ros_lib/std_msgs/Time.h **** 
  18:./lib/ros_lib/std_msgs/Time.h ****     Time():
  19:./lib/ros_lib/std_msgs/Time.h ****       data()
  20:./lib/ros_lib/std_msgs/Time.h ****     {
  21:./lib/ros_lib/std_msgs/Time.h ****     }
  22:./lib/ros_lib/std_msgs/Time.h **** 
  23:./lib/ros_lib/std_msgs/Time.h ****     virtual int serialize(unsigned char *outbuffer) const
  27              		.loc 1 23 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  24:./lib/ros_lib/std_msgs/Time.h ****     {
  25:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  26:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
  33              		.loc 1 26 0
  34 0000 4368     		ldr	r3, [r0, #4]
  35 0002 0B70     		strb	r3, [r1]
  27:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
  36              		.loc 1 27 0
  37 0004 4368     		ldr	r3, [r0, #4]
  38 0006 1B0A     		lsrs	r3, r3, #8
  39 0008 4B70     		strb	r3, [r1, #1]
  28:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
  40              		.loc 1 28 0
  41 000a C388     		ldrh	r3, [r0, #6]
  42 000c 8B70     		strb	r3, [r1, #2]
  29:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
  43              		.loc 1 29 0
  44 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
  45 0010 CB70     		strb	r3, [r1, #3]
  46              	.LVL1:
  30:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  31:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
  47              		.loc 1 31 0
  48 0012 8368     		ldr	r3, [r0, #8]
  49 0014 0B71     		strb	r3, [r1, #4]
  32:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
  50              		.loc 1 32 0
  51 0016 8368     		ldr	r3, [r0, #8]
  52 0018 1B0A     		lsrs	r3, r3, #8
  53 001a 4B71     		strb	r3, [r1, #5]
  33:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
  54              		.loc 1 33 0
  55 001c 4389     		ldrh	r3, [r0, #10]
  56 001e 8B71     		strb	r3, [r1, #6]
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  57              		.loc 1 34 0
  58 0020 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
  35:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  36:./lib/ros_lib/std_msgs/Time.h ****       return offset;
  37:./lib/ros_lib/std_msgs/Time.h ****     }
  59              		.loc 1 37 0
  60 0022 0820     		movs	r0, #8
  61              	.LVL2:
  34:./lib/ros_lib/std_msgs/Time.h ****       *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
  62              		.loc 1 34 0
  63 0024 CB71     		strb	r3, [r1, #7]
  64              	.LVL3:
  65              		.loc 1 37 0
  66 0026 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1381:
  69              		.cantunwind
  70              		.fnend
  72              		.section	.text._ZN8std_msgs4Time11deserializeEPh,"axG",%progbits,_ZN8std_msgs4Time11deserializeEPh
  73              		.align	1
  74              		.weak	_ZN8std_msgs4Time11deserializeEPh
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu softvfp
  80              	_ZN8std_msgs4Time11deserializeEPh:
  81              		.fnstart
  82              	.LFB1382:
  38:./lib/ros_lib/std_msgs/Time.h **** 
  39:./lib/ros_lib/std_msgs/Time.h ****     virtual int deserialize(unsigned char *inbuffer)
  83              		.loc 1 39 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  40:./lib/ros_lib/std_msgs/Time.h ****     {
  41:./lib/ros_lib/std_msgs/Time.h ****       int offset = 0;
  42:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
  89              		.loc 1 42 0
  90 0000 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  91 0002 4360     		str	r3, [r0, #4]
  43:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  92              		.loc 1 43 0
  93 0004 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
  94 0006 43EA0223 		orr	r3, r3, r2, lsl #8
  95 000a 4360     		str	r3, [r0, #4]
  44:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  96              		.loc 1 44 0
  97 000c 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
  98 000e 43EA0243 		orr	r3, r3, r2, lsl #16
  99 0012 4360     		str	r3, [r0, #4]
  45:./lib/ros_lib/std_msgs/Time.h ****       this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 100              		.loc 1 45 0
 101 0014 CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 102 0016 43EA0263 		orr	r3, r3, r2, lsl #24
 103 001a 4360     		str	r3, [r0, #4]
 104              	.LVL5:
  46:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.sec);
  47:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 105              		.loc 1 47 0
 106 001c 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
 107 001e 8360     		str	r3, [r0, #8]
  48:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 108              		.loc 1 48 0
 109 0020 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 110 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 111 0026 8360     		str	r3, [r0, #8]
  49:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 112              		.loc 1 49 0
 113 0028 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 114 002a 43EA0243 		orr	r3, r3, r2, lsl #16
 115 002e 8360     		str	r3, [r0, #8]
  50:./lib/ros_lib/std_msgs/Time.h ****       this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 116              		.loc 1 50 0
 117 0030 CA79     		ldrb	r2, [r1, #7]	@ zero_extendqisi2
 118 0032 43EA0263 		orr	r3, r3, r2, lsl #24
 119 0036 8360     		str	r3, [r0, #8]
 120              	.LVL6:
  51:./lib/ros_lib/std_msgs/Time.h ****       offset += sizeof(this->data.nsec);
  52:./lib/ros_lib/std_msgs/Time.h ****      return offset;
  53:./lib/ros_lib/std_msgs/Time.h ****     }
 121              		.loc 1 53 0
 122 0038 0820     		movs	r0, #8
 123              	.LVL7:
 124 003a 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE1382:
 127              		.cantunwind
 128              		.fnend
 130              		.section	.text._ZN8std_msgs4Time7getTypeEv,"axG",%progbits,_ZN8std_msgs4Time7getTypeEv,comdat
 131              		.align	1
 132              		.weak	_ZN8std_msgs4Time7getTypeEv
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu softvfp
 138              	_ZN8std_msgs4Time7getTypeEv:
 139              		.fnstart
 140              	.LFB1383:
  54:./lib/ros_lib/std_msgs/Time.h **** 
  55:./lib/ros_lib/std_msgs/Time.h ****     const char * getType(){ return "std_msgs/Time"; };
 141              		.loc 1 55 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL8:
 147              		.loc 1 55 0
 148 0000 0048     		ldr	r0, .L4
 149              	.LVL9:
 150 0002 7047     		bx	lr
 151              	.L5:
 152              		.align	2
 153              	.L4:
 154 0004 00000000 		.word	.LC2
 155              		.cfi_endproc
 156              	.LFE1383:
 157              		.cantunwind
 158              		.fnend
 160              		.section	.text._ZN8std_msgs4Time6getMD5Ev,"axG",%progbits,_ZN8std_msgs4Time6getMD5Ev,comdat
 161              		.align	1
 162              		.weak	_ZN8std_msgs4Time6getMD5Ev
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu softvfp
 168              	_ZN8std_msgs4Time6getMD5Ev:
 169              		.fnstart
 170              	.LFB1384:
  56:./lib/ros_lib/std_msgs/Time.h ****     const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 171              		.loc 1 56 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL10:
 177              		.loc 1 56 0
 178 0000 0048     		ldr	r0, .L7
 179              	.LVL11:
 180 0002 7047     		bx	lr
 181              	.L8:
 182              		.align	2
 183              	.L7:
 184 0004 00000000 		.word	.LC3
 185              		.cfi_endproc
 186              	.LFE1384:
 187              		.cantunwind
 188              		.fnend
 190              		.section	.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs9T
 191              		.align	1
 192              		.weak	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu softvfp
 198              	_ZN14rosserial_msgs9TopicInfo11deserializeEPh:
 199              		.fnstart
 200              	.LFB1389:
 201              		.file 2 "./lib/ros_lib/rosserial_msgs/TopicInfo.h"
   1:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #ifndef _ROS_rosserial_msgs_TopicInfo_h
   2:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #define _ROS_rosserial_msgs_TopicInfo_h
   3:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   4:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
   9:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** {
  11:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  12:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   class TopicInfo : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****   {
  14:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint16_t topic_id;
  16:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* topic_name;
  17:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* message_type;
  18:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       const char* md5sum;
  19:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int32_t buffer_size;
  20:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PUBLISHER = 0 };
  21:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SUBSCRIBER = 1 };
  22:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_SERVER = 2 };
  23:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_SERVICE_CLIENT = 4 };
  24:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_PARAMETER_REQUEST = 6 };
  25:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_LOG = 7 };
  26:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TIME = 10 };
  27:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       enum { ID_TX_STOP = 11 };
  28:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  29:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     TopicInfo():
  30:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_id(0),
  31:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       topic_name(""),
  32:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       message_type(""),
  33:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       md5sum(""),
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       buffer_size(0)
  35:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  36:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  37:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int serialize(unsigned char *outbuffer) const
  39:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  40:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
  43:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name = strlen(this->topic_name);
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
  46:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->topic_name, length_topic_name);
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
  59:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
  60:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
  61:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
  62:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.real = this->buffer_size;
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
  68:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
  69:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       return offset;
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
  71:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
  72:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     virtual int deserialize(unsigned char *inbuffer)
 202              		.loc 2 72 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              	.LVL12:
 207 0000 30B5     		push	{r4, r5, lr}
 208              	.LCFI0:
 209              		.cfi_def_cfa_offset 12
 210              		.cfi_offset 4, -12
 211              		.cfi_offset 5, -8
 212              		.cfi_offset 14, -4
  73:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
  74:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       int offset = 0;
  75:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 213              		.loc 2 75 0
 214 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 215 0004 8380     		strh	r3, [r0, #4]	@ movhi
  76:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 216              		.loc 2 76 0
 217 0006 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 218 0008 43EA0223 		orr	r3, r3, r2, lsl #8
 219 000c 8380     		strh	r3, [r0, #4]	@ movhi
 220              	.LVL13:
  77:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
  78:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_topic_name;
  79:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_topic_name, (inbuffer + offset), sizeof(uint32_t));
 221              		.loc 2 79 0
 222 000e D1F80220 		ldr	r2, [r1, #2]	@ unaligned
 223              	.LVL14:
 224 0012 8B1D     		adds	r3, r1, #6
 225              	.LBB199:
  80:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 226              		.loc 2 81 0
 227 0014 941D     		adds	r4, r2, #6
 228              	.LVL15:
 229              	.L11:
 230              		.loc 2 81 0 is_stmt 0 discriminator 3
 231 0016 5D1A     		subs	r5, r3, r1
 232              	.LVL16:
 233 0018 AC42     		cmp	r4, r5
 234 001a 04D9     		bls	.L10
  82:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 235              		.loc 2 82 0 is_stmt 1 discriminator 2
 236 001c 13F8015B 		ldrb	r5, [r3], #1	@ zero_extendqisi2
 237              	.LVL17:
 238 0020 03F8025C 		strb	r5, [r3, #-2]
 239              	.LVL18:
  81:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 240              		.loc 2 81 0 discriminator 2
 241 0024 F7E7     		b	.L11
 242              	.LVL19:
 243              	.L10:
 244              	.LBE199:
  83:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  84:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_topic_name-1]=0;
 245              		.loc 2 84 0
 246 0026 0025     		movs	r5, #0
 247              	.LVL20:
 248 0028 8B18     		adds	r3, r1, r2
 249              	.LVL21:
 250 002a 5D71     		strb	r5, [r3, #5]
  85:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->topic_name = (char *)(inbuffer + offset-1);
 251              		.loc 2 85 0
 252 002c 4B1D     		adds	r3, r1, #5
 253 002e 8360     		str	r3, [r0, #8]
 254              	.LVL22:
  86:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
  87:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type;
  88:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_message_type, (inbuffer + offset), sizeof(uint32_t));
 255              		.loc 2 88 0
 256 0030 0B59     		ldr	r3, [r1, r4]	@ unaligned
 257              	.LVL23:
  89:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 258              		.loc 2 89 0
 259 0032 0A32     		adds	r2, r2, #10
 260              	.LVL24:
 261 0034 8C18     		adds	r4, r1, r2
 262              	.LVL25:
 263              	.LBB200:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 264              		.loc 2 90 0
 265 0036 1344     		add	r3, r3, r2
 266              	.LVL26:
 267              	.L13:
 268              		.loc 2 90 0 is_stmt 0 discriminator 3
 269 0038 651A     		subs	r5, r4, r1
 270              	.LVL27:
 271 003a AB42     		cmp	r3, r5
 272 003c 04D9     		bls	.L12
  91:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 273              		.loc 2 91 0 is_stmt 1 discriminator 2
 274 003e 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 275              	.LVL28:
 276 0042 04F8025C 		strb	r5, [r4, #-2]
 277              	.LVL29:
  90:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_message_type; ++k){
 278              		.loc 2 90 0 discriminator 2
 279 0046 F7E7     		b	.L13
 280              	.LVL30:
 281              	.L12:
 282              	.LBE200:
  92:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_message_type-1]=0;
 283              		.loc 2 93 0
 284 0048 0025     		movs	r5, #0
 285              	.LVL31:
  94:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 286              		.loc 2 94 0
 287 004a 013A     		subs	r2, r2, #1
 288              	.LVL32:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 289              		.loc 2 93 0
 290 004c CC18     		adds	r4, r1, r3
 291              	.LVL33:
 292              		.loc 2 94 0
 293 004e 0A44     		add	r2, r2, r1
 294              	.LVL34:
  93:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->message_type = (char *)(inbuffer + offset-1);
 295              		.loc 2 93 0
 296 0050 04F8015C 		strb	r5, [r4, #-1]
 297              		.loc 2 94 0
 298 0054 C260     		str	r2, [r0, #12]
 299              	.LVL35:
  95:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
  96:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum;
  97:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(&length_md5sum, (inbuffer + offset), sizeof(uint32_t));
 300              		.loc 2 97 0
 301 0056 CA58     		ldr	r2, [r1, r3]	@ unaligned
 302              	.LVL36:
  98:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 303              		.loc 2 98 0
 304 0058 0433     		adds	r3, r3, #4
 305              	.LVL37:
 306 005a CC18     		adds	r4, r1, r3
 307              	.LBB201:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 308              		.loc 2 99 0
 309 005c 1A44     		add	r2, r2, r3
 310              	.LVL38:
 311              	.L15:
 312              		.loc 2 99 0 is_stmt 0 discriminator 3
 313 005e 651A     		subs	r5, r4, r1
 314              	.LVL39:
 315 0060 AA42     		cmp	r2, r5
 316 0062 04D9     		bls	.L14
 100:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****           inbuffer[k-1]=inbuffer[k];
 317              		.loc 2 100 0 is_stmt 1 discriminator 2
 318 0064 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 319              	.LVL40:
 320 0068 04F8025C 		strb	r5, [r4, #-2]
 321              	.LVL41:
  99:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 322              		.loc 2 99 0 discriminator 2
 323 006c F7E7     		b	.L15
 324              	.LVL42:
 325              	.L14:
 326              	.LBE201:
 101:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       }
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       inbuffer[offset+length_md5sum-1]=0;
 327              		.loc 2 102 0
 328 006e 0025     		movs	r5, #0
 329              	.LVL43:
 103:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 330              		.loc 2 103 0
 331 0070 013B     		subs	r3, r3, #1
 332              	.LVL44:
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 333              		.loc 2 102 0
 334 0072 8C18     		adds	r4, r1, r2
 335              	.LVL45:
 336              		.loc 2 103 0
 337 0074 0B44     		add	r3, r3, r1
 338              	.LVL46:
 102:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->md5sum = (char *)(inbuffer + offset-1);
 339              		.loc 2 102 0
 340 0076 04F8015C 		strb	r5, [r4, #-1]
 341              		.loc 2 103 0
 342 007a 0361     		str	r3, [r0, #16]
 343              	.LVL47:
 104:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 105:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 106:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         int32_t real;
 107:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****         uint32_t base;
 108:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       } u_buffer_size;
 109:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base = 0;
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 112:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 344              		.loc 2 112 0
 345 007c A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 111:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 346              		.loc 2 111 0
 347 007e 6578     		ldrb	r5, [r4, #1]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 348              		.loc 2 110 0
 349 0080 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 350              	.LVL48:
 351              		.loc 2 112 0
 352 0082 1B04     		lsls	r3, r3, #16
 353 0084 43EA0523 		orr	r3, r3, r5, lsl #8
 354 0088 0B43     		orrs	r3, r3, r1
 113:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 355              		.loc 2 113 0
 356 008a E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 357 008c 43EA0163 		orr	r3, r3, r1, lsl #24
 114:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       this->buffer_size = u_buffer_size.real;
 358              		.loc 2 114 0
 359 0090 4361     		str	r3, [r0, #20]
 360              	.LVL49:
 115:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 116:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****      return offset;
 117:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     }
 361              		.loc 2 117 0
 362 0092 101D     		adds	r0, r2, #4
 363              	.LVL50:
 364 0094 30BD     		pop	{r4, r5, pc}
 365              		.cfi_endproc
 366              	.LFE1389:
 367              		.cantunwind
 368              		.fnend
 370              		.section	.text._ZN14rosserial_msgs9TopicInfo7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs9TopicIn
 371              		.align	1
 372              		.weak	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu softvfp
 378              	_ZN14rosserial_msgs9TopicInfo7getTypeEv:
 379              		.fnstart
 380              	.LFB1390:
 118:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 119:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 381              		.loc 2 119 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 386              	.LVL51:
 387              		.loc 2 119 0
 388 0000 0048     		ldr	r0, .L20
 389              	.LVL52:
 390 0002 7047     		bx	lr
 391              	.L21:
 392              		.align	2
 393              	.L20:
 394 0004 00000000 		.word	.LC4
 395              		.cfi_endproc
 396              	.LFE1390:
 397              		.cantunwind
 398              		.fnend
 400              		.section	.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs9TopicInf
 401              		.align	1
 402              		.weak	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu softvfp
 408              	_ZN14rosserial_msgs9TopicInfo6getMD5Ev:
 409              		.fnstart
 410              	.LFB1391:
 120:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 411              		.loc 2 120 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL53:
 417              		.loc 2 120 0
 418 0000 0048     		ldr	r0, .L23
 419              	.LVL54:
 420 0002 7047     		bx	lr
 421              	.L24:
 422              		.align	2
 423              	.L23:
 424 0004 00000000 		.word	.LC5
 425              		.cfi_endproc
 426              	.LFE1391:
 427              		.cantunwind
 428              		.fnend
 430              		.section	.text._ZN14rosserial_msgs3Log11deserializeEPh,"axG",%progbits,_ZN14rosserial_msgs3Log11de
 431              		.align	1
 432              		.weak	_ZN14rosserial_msgs3Log11deserializeEPh
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu softvfp
 438              	_ZN14rosserial_msgs3Log11deserializeEPh:
 439              		.fnstart
 440              	.LFB1396:
 441              		.file 3 "./lib/ros_lib/rosserial_msgs/Log.h"
   1:./lib/ros_lib/rosserial_msgs/Log.h **** #ifndef _ROS_rosserial_msgs_Log_h
   2:./lib/ros_lib/rosserial_msgs/Log.h **** #define _ROS_rosserial_msgs_Log_h
   3:./lib/ros_lib/rosserial_msgs/Log.h **** 
   4:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdint.h>
   5:./lib/ros_lib/rosserial_msgs/Log.h **** #include <string.h>
   6:./lib/ros_lib/rosserial_msgs/Log.h **** #include <stdlib.h>
   7:./lib/ros_lib/rosserial_msgs/Log.h **** #include "ros/msg.h"
   8:./lib/ros_lib/rosserial_msgs/Log.h **** 
   9:./lib/ros_lib/rosserial_msgs/Log.h **** namespace rosserial_msgs
  10:./lib/ros_lib/rosserial_msgs/Log.h **** {
  11:./lib/ros_lib/rosserial_msgs/Log.h **** 
  12:./lib/ros_lib/rosserial_msgs/Log.h ****   class Log : public ros::Msg
  13:./lib/ros_lib/rosserial_msgs/Log.h ****   {
  14:./lib/ros_lib/rosserial_msgs/Log.h ****     public:
  15:./lib/ros_lib/rosserial_msgs/Log.h ****       uint8_t level;
  16:./lib/ros_lib/rosserial_msgs/Log.h ****       const char* msg;
  17:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ROSDEBUG = 0 };
  18:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { INFO = 1 };
  19:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { WARN = 2 };
  20:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { ERROR = 3 };
  21:./lib/ros_lib/rosserial_msgs/Log.h ****       enum { FATAL = 4 };
  22:./lib/ros_lib/rosserial_msgs/Log.h **** 
  23:./lib/ros_lib/rosserial_msgs/Log.h ****     Log():
  24:./lib/ros_lib/rosserial_msgs/Log.h ****       level(0),
  25:./lib/ros_lib/rosserial_msgs/Log.h ****       msg("")
  26:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  27:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  28:./lib/ros_lib/rosserial_msgs/Log.h **** 
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int serialize(unsigned char *outbuffer) const
  30:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  31:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
  33:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg = strlen(this->msg);
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
  36:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, this->msg, length_msg);
  38:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  39:./lib/ros_lib/rosserial_msgs/Log.h ****       return offset;
  40:./lib/ros_lib/rosserial_msgs/Log.h ****     }
  41:./lib/ros_lib/rosserial_msgs/Log.h **** 
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     virtual int deserialize(unsigned char *inbuffer)
 442              		.loc 3 42 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              	.LVL55:
 447 0000 30B5     		push	{r4, r5, lr}
 448              	.LCFI1:
 449              		.cfi_def_cfa_offset 12
 450              		.cfi_offset 4, -12
 451              		.cfi_offset 5, -8
 452              		.cfi_offset 14, -4
  43:./lib/ros_lib/rosserial_msgs/Log.h ****     {
  44:./lib/ros_lib/rosserial_msgs/Log.h ****       int offset = 0;
  45:./lib/ros_lib/rosserial_msgs/Log.h ****       this->level =  ((uint8_t) (*(inbuffer + offset)));
 453              		.loc 3 45 0
 454 0002 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  42:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 455              		.loc 3 42 0
 456 0004 0446     		mov	r4, r0
 457              		.loc 3 45 0
 458 0006 0371     		strb	r3, [r0, #4]
 459              	.LVL56:
  46:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
  47:./lib/ros_lib/rosserial_msgs/Log.h ****       uint32_t length_msg;
  48:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(&length_msg, (inbuffer + offset), sizeof(uint32_t));
 460              		.loc 3 48 0
 461 0008 D1F80130 		ldr	r3, [r1, #1]	@ unaligned
 462              	.LVL57:
 463 000c 4A1D     		adds	r2, r1, #5
 464              	.LBB202:
  49:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
  50:./lib/ros_lib/rosserial_msgs/Log.h ****       for(unsigned int k= offset; k< offset+length_msg; ++k){
 465              		.loc 3 50 0
 466 000e 581D     		adds	r0, r3, #5
 467              	.LVL58:
 468              	.L27:
 469              		.loc 3 50 0 is_stmt 0 discriminator 3
 470 0010 551A     		subs	r5, r2, r1
 471              	.LVL59:
 472 0012 A842     		cmp	r0, r5
 473 0014 04D9     		bls	.L26
  51:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 474              		.loc 3 51 0 is_stmt 1 discriminator 2
 475 0016 12F8015B 		ldrb	r5, [r2], #1	@ zero_extendqisi2
 476              	.LVL60:
 477 001a 02F8025C 		strb	r5, [r2, #-2]
 478              	.LVL61:
  50:./lib/ros_lib/rosserial_msgs/Log.h ****           inbuffer[k-1]=inbuffer[k];
 479              		.loc 3 50 0 discriminator 2
 480 001e F7E7     		b	.L27
 481              	.LVL62:
 482              	.L26:
 483              	.LBE202:
  52:./lib/ros_lib/rosserial_msgs/Log.h ****       }
  53:./lib/ros_lib/rosserial_msgs/Log.h ****       inbuffer[offset+length_msg-1]=0;
 484              		.loc 3 53 0
 485 0020 0022     		movs	r2, #0
 486 0022 0B44     		add	r3, r3, r1
 487              	.LVL63:
 488 0024 1A71     		strb	r2, [r3, #4]
  54:./lib/ros_lib/rosserial_msgs/Log.h ****       this->msg = (char *)(inbuffer + offset-1);
 489              		.loc 3 54 0
 490 0026 0431     		adds	r1, r1, #4
 491              	.LVL64:
 492 0028 A160     		str	r1, [r4, #8]
 493              	.LVL65:
  55:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
  56:./lib/ros_lib/rosserial_msgs/Log.h ****      return offset;
  57:./lib/ros_lib/rosserial_msgs/Log.h ****     }
 494              		.loc 3 57 0
 495 002a 30BD     		pop	{r4, r5, pc}
 496              		.cfi_endproc
 497              	.LFE1396:
 498              		.cantunwind
 499              		.fnend
 501              		.section	.text._ZN14rosserial_msgs3Log7getTypeEv,"axG",%progbits,_ZN14rosserial_msgs3Log7getTypeEv
 502              		.align	1
 503              		.weak	_ZN14rosserial_msgs3Log7getTypeEv
 504              		.syntax unified
 505              		.thumb
 506              		.thumb_func
 507              		.fpu softvfp
 509              	_ZN14rosserial_msgs3Log7getTypeEv:
 510              		.fnstart
 511              	.LFB1397:
  58:./lib/ros_lib/rosserial_msgs/Log.h **** 
  59:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getType(){ return "rosserial_msgs/Log"; };
 512              		.loc 3 59 0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 0
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		@ link register save eliminated.
 517              	.LVL66:
 518              		.loc 3 59 0
 519 0000 0048     		ldr	r0, .L30
 520              	.LVL67:
 521 0002 7047     		bx	lr
 522              	.L31:
 523              		.align	2
 524              	.L30:
 525 0004 00000000 		.word	.LC6
 526              		.cfi_endproc
 527              	.LFE1397:
 528              		.cantunwind
 529              		.fnend
 531              		.section	.text._ZN14rosserial_msgs3Log6getMD5Ev,"axG",%progbits,_ZN14rosserial_msgs3Log6getMD5Ev,c
 532              		.align	1
 533              		.weak	_ZN14rosserial_msgs3Log6getMD5Ev
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu softvfp
 539              	_ZN14rosserial_msgs3Log6getMD5Ev:
 540              		.fnstart
 541              	.LFB1398:
  60:./lib/ros_lib/rosserial_msgs/Log.h ****     const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 542              		.loc 3 60 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547              	.LVL68:
 548              		.loc 3 60 0
 549 0000 0048     		ldr	r0, .L33
 550              	.LVL69:
 551 0002 7047     		bx	lr
 552              	.L34:
 553              		.align	2
 554              	.L33:
 555 0004 00000000 		.word	.LC7
 556              		.cfi_endproc
 557              	.LFE1398:
 558              		.cantunwind
 559              		.fnend
 561              		.section	.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv,"axG",%progbits,_ZN14rosserial_
 562              		.align	1
 563              		.weak	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 564              		.syntax unified
 565              		.thumb
 566              		.thumb_func
 567              		.fpu softvfp
 569              	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv:
 570              		.fnstart
 571              	.LFB1411:
 572              		.file 4 "./lib/ros_lib/rosserial_msgs/RequestParam.h"
   1:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #ifndef _ROS_SERVICE_RequestParam_h
   2:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #define _ROS_SERVICE_RequestParam_h
   3:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdint.h>
   4:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <string.h>
   5:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include <stdlib.h>
   6:./lib/ros_lib/rosserial_msgs/RequestParam.h **** #include "ros/msg.h"
   7:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
   8:./lib/ros_lib/rosserial_msgs/RequestParam.h **** namespace rosserial_msgs
   9:./lib/ros_lib/rosserial_msgs/RequestParam.h **** {
  10:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  11:./lib/ros_lib/rosserial_msgs/RequestParam.h **** static const char REQUESTPARAM[] = "rosserial_msgs/RequestParam";
  12:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  13:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamRequest : public ros::Msg
  14:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  15:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  16:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       const char* name;
  17:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  18:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamRequest():
  19:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       name("")
  20:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  21:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  22:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  23:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  24:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  25:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  26:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name = strlen(this->name);
  27:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_name, sizeof(uint32_t));
  28:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  29:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->name, length_name);
  30:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  31:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
  32:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  33:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  34:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
  35:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  36:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  37:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_name;
  38:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_name, (inbuffer + offset), sizeof(uint32_t));
  39:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
  40:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_name; ++k){
  41:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
  42:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  43:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_name-1]=0;
  44:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->name = (char *)(inbuffer + offset-1);
  45:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_name;
  46:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
  47:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  48:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  49:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
  50:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "c1f3d28f1b044c871e6eff2e9fc3c667"; };
  51:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  52:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   };
  53:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  54:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   class RequestParamResponse : public ros::Msg
  55:./lib/ros_lib/rosserial_msgs/RequestParam.h ****   {
  56:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     public:
  57:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_length;
  58:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t st_ints;
  59:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int32_t * ints;
  60:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_length;
  61:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float st_floats;
  62:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       float * floats;
  63:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_length;
  64:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* st_strings;
  65:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       char* * strings;
  66:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  67:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     RequestParamResponse():
  68:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length(0), ints(NULL),
  69:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length(0), floats(NULL),
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length(0), strings(NULL)
  71:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  72:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
  73:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int serialize(unsigned char *outbuffer) const
  75:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
  76:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = ints_length;
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
  82:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  83:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
  84:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
  85:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_intsi;
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_intsi.real = this->ints[i];
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
  91:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
  92:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = floats_length;
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
  98:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
  99:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 100:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 101:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_floatsi;
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_floatsi.real = this->floats[i];
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 107:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 108:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = strings_length;
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 119:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 120:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       return offset;
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 122:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     virtual int deserialize(unsigned char *inbuffer)
 124:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 125:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       int offset = 0;
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t ints_lengthT = *(inbuffer + offset++);
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 129:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       ints_length = ints_lengthT;
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 132:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 133:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         int32_t real;
 134:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 135:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_ints;
 136:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base = 0;
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 142:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 144:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t floats_lengthT = *(inbuffer + offset++);
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 151:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 152:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         float real;
 153:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         uint32_t base;
 154:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       } u_st_floats;
 155:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base = 0;
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 161:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 163:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint8_t strings_lengthT = *(inbuffer + offset++);
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 170:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(&length_st_strings, (inbuffer + offset), sizeof(uint32_t));
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 175:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       inbuffer[offset+length_st_strings-1]=0;
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 178:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 180:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 181:./lib/ros_lib/rosserial_msgs/RequestParam.h ****      return offset;
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     }
 183:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 184:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getType(){ return REQUESTPARAM; };
 573              		.loc 4 184 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578              	.LVL70:
 579              		.loc 4 184 0
 580 0000 0048     		ldr	r0, .L36
 581              	.LVL71:
 582 0002 7047     		bx	lr
 583              	.L37:
 584              		.align	2
 585              	.L36:
 586 0004 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE1411:
 589              		.cantunwind
 590              		.fnend
 592              		.section	.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev,"axG",%progbits,_ZN14rosserial_m
 593              		.align	1
 594              		.weak	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 595              		.syntax unified
 596              		.thumb
 597              		.thumb_func
 598              		.fpu softvfp
 600              	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:
 601              		.fnstart
 602              	.LFB1412:
 185:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 603              		.loc 4 185 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL72:
 609              		.loc 4 185 0
 610 0000 0048     		ldr	r0, .L39
 611              	.LVL73:
 612 0002 7047     		bx	lr
 613              	.L40:
 614              		.align	2
 615              	.L39:
 616 0004 00000000 		.word	.LC8
 617              		.cfi_endproc
 618              	.LFE1412:
 619              		.cantunwind
 620              		.fnend
 622              		.section	.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh,"axG",%progbits,_ZN8std_msgs19Mul
 623              		.align	1
 624              		.weak	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 625              		.syntax unified
 626              		.thumb
 627              		.thumb_func
 628              		.fpu softvfp
 630              	_ZN8std_msgs19MultiArrayDimension11deserializeEPh:
 631              		.fnstart
 632              	.LFB1489:
 633              		.file 5 "./lib/ros_lib/std_msgs/MultiArrayDimension.h"
   1:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #ifndef _ROS_std_msgs_MultiArrayDimension_h
   2:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #define _ROS_std_msgs_MultiArrayDimension_h
   3:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
   9:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** namespace std_msgs
  10:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** {
  11:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  12:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   class MultiArrayDimension : public ros::Msg
  13:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****   {
  14:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     public:
  15:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       const char* label;
  16:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t size;
  17:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t stride;
  18:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  19:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     MultiArrayDimension():
  20:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       label(""),
  21:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       size(0),
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       stride(0)
  23:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  24:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  25:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int serialize(unsigned char *outbuffer) const
  27:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  28:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label = strlen(this->label);
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
  31:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, this->label, length_label);
  33:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->size >> (8 * 0)) & 0xFF;
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
  38:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 0) = (this->stride >> (8 * 0)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
  43:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  44:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       return offset;
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
  46:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     virtual int deserialize(unsigned char *inbuffer)
 634              		.loc 5 47 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              	.LVL74:
  48:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
  49:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       int offset = 0;
  50:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       uint32_t length_label;
  51:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(&length_label, (inbuffer + offset), sizeof(uint32_t));
 639              		.loc 5 51 0
 640 0000 0B46     		mov	r3, r1
  47:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 641              		.loc 5 47 0
 642 0002 30B5     		push	{r4, r5, lr}
 643              	.LCFI2:
 644              		.cfi_def_cfa_offset 12
 645              		.cfi_offset 4, -12
 646              		.cfi_offset 5, -8
 647              		.cfi_offset 14, -4
 648              		.loc 5 51 0
 649 0004 53F8044B 		ldr	r4, [r3], #4	@ unaligned
 650              	.LVL75:
 651              	.LBB203:
  52:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       for(unsigned int k= offset; k< offset+length_label; ++k){
 652              		.loc 5 53 0
 653 0008 251D     		adds	r5, r4, #4
 654              	.LVL76:
 655              	.L43:
 656              		.loc 5 53 0 is_stmt 0 discriminator 3
 657 000a 5A1A     		subs	r2, r3, r1
 658              	.LVL77:
 659 000c 9542     		cmp	r5, r2
 660 000e 04D9     		bls	.L42
  54:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 661              		.loc 5 54 0 is_stmt 1 discriminator 2
 662 0010 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 663              	.LVL78:
 664 0014 03F8022C 		strb	r2, [r3, #-2]
 665              	.LVL79:
  53:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****           inbuffer[k-1]=inbuffer[k];
 666              		.loc 5 53 0 discriminator 2
 667 0018 F7E7     		b	.L43
 668              	.LVL80:
 669              	.L42:
 670              	.LBE203:
  55:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       }
  56:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       inbuffer[offset+length_label-1]=0;
 671              		.loc 5 56 0
 672 001a 0023     		movs	r3, #0
 673 001c 0A19     		adds	r2, r1, r4
 674              	.LVL81:
 675 001e D370     		strb	r3, [r2, #3]
  57:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->label = (char *)(inbuffer + offset-1);
 676              		.loc 5 57 0
 677 0020 CB1C     		adds	r3, r1, #3
 678 0022 4360     		str	r3, [r0, #4]
 679              	.LVL82:
  58:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
  59:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size =  ((uint32_t) (*(inbuffer + offset)));
 680              		.loc 5 59 0
 681 0024 4B5D     		ldrb	r3, [r1, r5]	@ zero_extendqisi2
 682 0026 8360     		str	r3, [r0, #8]
  60:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 683              		.loc 5 60 0
 684 0028 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 685              	.LVL83:
 686 002a 43EA0123 		orr	r3, r3, r1, lsl #8
 687 002e 8360     		str	r3, [r0, #8]
  61:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 688              		.loc 5 61 0
 689 0030 9179     		ldrb	r1, [r2, #6]	@ zero_extendqisi2
 690 0032 43EA0143 		orr	r3, r3, r1, lsl #16
 691 0036 8360     		str	r3, [r0, #8]
  62:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->size |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 692              		.loc 5 62 0
 693 0038 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 694 003a 43EA0163 		orr	r3, r3, r1, lsl #24
 695 003e 8360     		str	r3, [r0, #8]
 696              	.LVL84:
  63:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
  64:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride =  ((uint32_t) (*(inbuffer + offset)));
 697              		.loc 5 64 0
 698 0040 137A     		ldrb	r3, [r2, #8]	@ zero_extendqisi2
 699 0042 C360     		str	r3, [r0, #12]
  65:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 700              		.loc 5 65 0
 701 0044 517A     		ldrb	r1, [r2, #9]	@ zero_extendqisi2
 702 0046 43EA0123 		orr	r3, r3, r1, lsl #8
 703 004a C360     		str	r3, [r0, #12]
  66:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 704              		.loc 5 66 0
 705 004c 917A     		ldrb	r1, [r2, #10]	@ zero_extendqisi2
 706 004e 43EA0143 		orr	r3, r3, r1, lsl #16
 707 0052 C360     		str	r3, [r0, #12]
  67:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       this->stride |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 708              		.loc 5 67 0
 709 0054 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 710 0056 43EA0263 		orr	r3, r3, r2, lsl #24
 711 005a C360     		str	r3, [r0, #12]
 712              	.LVL85:
  68:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
  69:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****      return offset;
  70:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     }
 713              		.loc 5 70 0
 714 005c 04F10C00 		add	r0, r4, #12
 715              	.LVL86:
 716 0060 30BD     		pop	{r4, r5, pc}
 717              		.cfi_endproc
 718              	.LFE1489:
 719              		.cantunwind
 720              		.fnend
 722              		.section	.text._ZN8std_msgs19MultiArrayDimension7getTypeEv,"axG",%progbits,_ZN8std_msgs19MultiArra
 723              		.align	1
 724              		.weak	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 728              		.fpu softvfp
 730              	_ZN8std_msgs19MultiArrayDimension7getTypeEv:
 731              		.fnstart
 732              	.LFB1490:
  71:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
  72:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getType(){ return "std_msgs/MultiArrayDimension"; };
 733              		.loc 5 72 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738              	.LVL87:
 739              		.loc 5 72 0
 740 0000 0048     		ldr	r0, .L46
 741              	.LVL88:
 742 0002 7047     		bx	lr
 743              	.L47:
 744              		.align	2
 745              	.L46:
 746 0004 00000000 		.word	.LC9
 747              		.cfi_endproc
 748              	.LFE1490:
 749              		.cantunwind
 750              		.fnend
 752              		.section	.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev,"axG",%progbits,_ZN8std_msgs19MultiArray
 753              		.align	1
 754              		.weak	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu softvfp
 760              	_ZN8std_msgs19MultiArrayDimension6getMD5Ev:
 761              		.fnstart
 762              	.LFB1491:
  73:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     const char * getMD5(){ return "4cd0c83a8683deae40ecdac60e53bfa8"; };
 763              		.loc 5 73 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		@ link register save eliminated.
 768              	.LVL89:
 769              		.loc 5 73 0
 770 0000 0048     		ldr	r0, .L49
 771              	.LVL90:
 772 0002 7047     		bx	lr
 773              	.L50:
 774              		.align	2
 775              	.L49:
 776 0004 00000000 		.word	.LC10
 777              		.cfi_endproc
 778              	.LFE1491:
 779              		.cantunwind
 780              		.fnend
 782              		.section	.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh,"axG",%progbits,_ZNK8std_msgs16MultiAr
 783              		.align	1
 784              		.weak	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 788              		.fpu softvfp
 790              	_ZNK8std_msgs16MultiArrayLayout9serializeEPh:
 791              		.fnstart
 792              	.LFB1495:
 793              		.file 6 "./lib/ros_lib/std_msgs/MultiArrayLayout.h"
   1:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #ifndef _ROS_std_msgs_MultiArrayLayout_h
   2:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #define _ROS_std_msgs_MultiArrayLayout_h
   3:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
   4:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** #include "std_msgs/MultiArrayDimension.h"
   9:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  10:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** {
  12:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  13:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   class MultiArrayLayout : public ros::Msg
  14:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****   {
  15:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     public:
  16:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_length;
  17:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension st_dim;
  18:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       std_msgs::MultiArrayDimension * dim;
  19:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint32_t data_offset;
  20:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  21:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     MultiArrayLayout():
  22:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length(0), dim(NULL),
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       data_offset(0)
  24:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  25:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  26:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int serialize(unsigned char *outbuffer) const
 794              		.loc 6 27 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798              	.LVL91:
 799 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 800              		.save {r3, r4, r5, r6, r7, lr}
 801              	.LCFI3:
 802              		.cfi_def_cfa_offset 24
 803              		.cfi_offset 3, -24
 804              		.cfi_offset 4, -20
 805              		.cfi_offset 5, -16
 806              		.cfi_offset 6, -12
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809              		.loc 6 27 0
 810 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  29:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = dim_length;
 811              		.loc 6 30 0
 812 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 813              		.loc 6 31 0
 814 0006 0020     		movs	r0, #0
 815              	.LVL92:
  27:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 816              		.loc 6 27 0
 817 0008 0D46     		mov	r5, r1
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
  33:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 818              		.loc 6 33 0
 819 000a 0426     		movs	r6, #4
  30:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 820              		.loc 6 30 0
 821 000c 0B70     		strb	r3, [r1]
 822              	.LVL93:
  31:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 823              		.loc 6 31 0
 824 000e 4870     		strb	r0, [r1, #1]
 825              	.LVL94:
  32:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset++) = 0;
 826              		.loc 6 32 0
 827 0010 8870     		strb	r0, [r1, #2]
 828              	.LVL95:
 829              		.loc 6 33 0
 830 0012 C870     		strb	r0, [r1, #3]
 831              	.LVL96:
 832              	.L53:
 833              	.LBB204:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 834              		.loc 6 34 0 discriminator 3
 835 0014 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 836 0016 471C     		adds	r7, r0, #1
 837 0018 C0B2     		uxtb	r0, r0
 838 001a 9842     		cmp	r0, r3
 839 001c 05EB0601 		add	r1, r5, r6
 840 0020 08DA     		bge	.L52
  35:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->dim[i].serialize(outbuffer + offset);
 841              		.loc 6 35 0 discriminator 2
 842 0022 A369     		ldr	r3, [r4, #24]
 843 0024 0001     		lsls	r0, r0, #4
 844              	.LVL97:
 845 0026 1A58     		ldr	r2, [r3, r0]
 846 0028 1844     		add	r0, r0, r3
 847 002a 1268     		ldr	r2, [r2]
 848 002c 9047     		blx	r2
 849              	.LVL98:
 850 002e 0644     		add	r6, r6, r0
 851              	.LVL99:
  34:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 852              		.loc 6 34 0 discriminator 2
 853 0030 3846     		mov	r0, r7
 854 0032 EFE7     		b	.L53
 855              	.LVL100:
 856              	.L52:
 857              	.LBE204:
  36:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 0) = (this->data_offset >> (8 * 0)) & 0xFF;
 858              		.loc 6 37 0
 859 0034 E369     		ldr	r3, [r4, #28]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 2) = (this->data_offset >> (8 * 2)) & 0xFF;
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
  41:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  42:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       return offset;
  43:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
 860              		.loc 6 43 0
 861 0036 301D     		adds	r0, r6, #4
 862              	.LVL101:
  37:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 863              		.loc 6 37 0
 864 0038 AB55     		strb	r3, [r5, r6]
  38:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 1) = (this->data_offset >> (8 * 1)) & 0xFF;
 865              		.loc 6 38 0
 866 003a E369     		ldr	r3, [r4, #28]
 867 003c 1B0A     		lsrs	r3, r3, #8
 868 003e 4B70     		strb	r3, [r1, #1]
  39:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       *(outbuffer + offset + 3) = (this->data_offset >> (8 * 3)) & 0xFF;
 869              		.loc 6 39 0
 870 0040 E38B     		ldrh	r3, [r4, #30]
 871 0042 8B70     		strb	r3, [r1, #2]
  40:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 872              		.loc 6 40 0
 873 0044 E37F     		ldrb	r3, [r4, #31]	@ zero_extendqisi2
 874 0046 CB70     		strb	r3, [r1, #3]
 875              	.LVL102:
 876              		.loc 6 43 0
 877 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 878              		.cfi_endproc
 879              	.LFE1495:
 880              		.fnend
 882              		.section	.text._ZN8std_msgs16MultiArrayLayout7getTypeEv,"axG",%progbits,_ZN8std_msgs16MultiArrayLa
 883              		.align	1
 884              		.weak	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu softvfp
 890              	_ZN8std_msgs16MultiArrayLayout7getTypeEv:
 891              		.fnstart
 892              	.LFB1497:
  44:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     virtual int deserialize(unsigned char *inbuffer)
  46:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
  47:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       int offset = 0;
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       uint8_t dim_lengthT = *(inbuffer + offset++);
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
  56:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset =  ((uint32_t) (*(inbuffer + offset)));
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  61:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
  62:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****      return offset;
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     }
  64:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
  65:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getType(){ return "std_msgs/MultiArrayLayout"; };
 893              		.loc 6 65 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              		@ link register save eliminated.
 898              	.LVL103:
 899              		.loc 6 65 0
 900 0000 0048     		ldr	r0, .L55
 901              	.LVL104:
 902 0002 7047     		bx	lr
 903              	.L56:
 904              		.align	2
 905              	.L55:
 906 0004 00000000 		.word	.LC11
 907              		.cfi_endproc
 908              	.LFE1497:
 909              		.cantunwind
 910              		.fnend
 912              		.section	.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev,"axG",%progbits,_ZN8std_msgs16MultiArrayLay
 913              		.align	1
 914              		.weak	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu softvfp
 920              	_ZN8std_msgs16MultiArrayLayout6getMD5Ev:
 921              		.fnstart
 922              	.LFB1498:
  66:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     const char * getMD5(){ return "0fed2a11c13e11c5571b4e2a995a91a3"; };
 923              		.loc 6 66 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 928              	.LVL105:
 929              		.loc 6 66 0
 930 0000 0048     		ldr	r0, .L58
 931              	.LVL106:
 932 0002 7047     		bx	lr
 933              	.L59:
 934              		.align	2
 935              	.L58:
 936 0004 00000000 		.word	.LC12
 937              		.cfi_endproc
 938              	.LFE1498:
 939              		.cantunwind
 940              		.fnend
 942              		.section	.text._ZNK8std_msgs17Float32MultiArray9serializeEPh,"axG",%progbits,_ZNK8std_msgs17Float3
 943              		.align	1
 944              		.weak	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 948              		.fpu softvfp
 950              	_ZNK8std_msgs17Float32MultiArray9serializeEPh:
 951              		.fnstart
 952              	.LFB1502:
 953              		.file 7 "./lib/ros_lib/std_msgs/Float32MultiArray.h"
   1:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #ifndef _ROS_std_msgs_Float32MultiArray_h
   2:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #define _ROS_std_msgs_Float32MultiArray_h
   3:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
   4:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Float32MultiArray.h **** #include "std_msgs/MultiArrayLayout.h"
   9:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  10:./lib/ros_lib/std_msgs/Float32MultiArray.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Float32MultiArray.h **** {
  12:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  13:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   class Float32MultiArray : public ros::Msg
  14:./lib/ros_lib/std_msgs/Float32MultiArray.h ****   {
  15:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     public:
  16:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       std_msgs::MultiArrayLayout layout;
  17:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_length;
  18:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float st_data;
  19:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       float * data;
  20:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  21:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     Float32MultiArray():
  22:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       layout(),
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length(0), data(NULL)
  24:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  25:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  26:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int serialize(unsigned char *outbuffer) const
 954              		.loc 7 27 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL107:
 959 0000 70B5     		push	{r4, r5, r6, lr}
 960              		.save {r4, r5, r6, lr}
 961              	.LCFI4:
 962              		.cfi_def_cfa_offset 16
 963              		.cfi_offset 4, -16
 964              		.cfi_offset 5, -12
 965              		.cfi_offset 6, -8
 966              		.cfi_offset 14, -4
 967              		.loc 7 27 0
 968 0002 0446     		mov	r4, r0
  28:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  29:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.serialize(outbuffer + offset);
 969              		.loc 7 30 0
 970 0004 0430     		adds	r0, r0, #4
 971              	.LVL108:
  27:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 972              		.loc 7 27 0
 973 0006 0D46     		mov	r5, r1
 974              		.loc 7 30 0
 975 0008 FFF7FEFF 		bl	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 976              	.LVL109:
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 977              		.loc 7 32 0
 978 000c 0022     		movs	r2, #0
  31:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = data_length;
 979              		.loc 7 31 0
 980 000e 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 981 0012 2B54     		strb	r3, [r5, r0]
 982              	.LVL110:
 983              		.loc 7 32 0
 984 0014 2B18     		adds	r3, r5, r0
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
  34:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 985              		.loc 7 34 0
 986 0016 0430     		adds	r0, r0, #4
 987              	.LVL111:
  32:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 988              		.loc 7 32 0
 989 0018 5A70     		strb	r2, [r3, #1]
 990              	.LVL112:
  33:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset++) = 0;
 991              		.loc 7 33 0
 992 001a 9A70     		strb	r2, [r3, #2]
 993              		.loc 7 34 0
 994 001c DA70     		strb	r2, [r3, #3]
 995              	.LVL113:
 996 001e 2B18     		adds	r3, r5, r0
 997              	.LVL114:
 998              	.L62:
 999              	.LBB205:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 1000              		.loc 7 35 0 discriminator 3
 1001 0020 94F82460 		ldrb	r6, [r4, #36]	@ zero_extendqisi2
 1002 0024 511C     		adds	r1, r2, #1
 1003 0026 D2B2     		uxtb	r2, r2
 1004 0028 B242     		cmp	r2, r6
 1005 002a A3EB0500 		sub	r0, r3, r5
 1006              	.LVL115:
 1007 002e 03F10403 		add	r3, r3, #4
 1008 0032 0FDA     		bge	.L60
 1009              	.LBB206:
  36:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  37:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  38:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  39:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_datai;
  40:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_datai.real = this->data[i];
 1010              		.loc 7 40 0 discriminator 2
 1011 0034 E06A     		ldr	r0, [r4, #44]
 1012              	.LVL116:
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 1013              		.loc 7 41 0 discriminator 2
 1014 0036 50F82220 		ldr	r2, [r0, r2, lsl #2]
  42:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 1) = (u_datai.base >> (8 * 1)) & 0xFF;
 1015              		.loc 7 42 0 discriminator 2
 1016 003a 100A     		lsrs	r0, r2, #8
  41:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 0) = (u_datai.base >> (8 * 0)) & 0xFF;
 1017              		.loc 7 41 0 discriminator 2
 1018 003c 03F8042C 		strb	r2, [r3, #-4]
 1019              		.loc 7 42 0 discriminator 2
 1020 0040 03F8030C 		strb	r0, [r3, #-3]
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 1021              		.loc 7 43 0 discriminator 2
 1022 0044 100C     		lsrs	r0, r2, #16
  44:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 3) = (u_datai.base >> (8 * 3)) & 0xFF;
 1023              		.loc 7 44 0 discriminator 2
 1024 0046 120E     		lsrs	r2, r2, #24
 1025 0048 03F8012C 		strb	r2, [r3, #-1]
 1026              	.LVL117:
  43:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       *(outbuffer + offset + 2) = (u_datai.base >> (8 * 2)) & 0xFF;
 1027              		.loc 7 43 0 discriminator 2
 1028 004c 03F8020C 		strb	r0, [r3, #-2]
 1029              	.LBE206:
  35:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 1030              		.loc 7 35 0 discriminator 2
 1031 0050 0A46     		mov	r2, r1
 1032 0052 E5E7     		b	.L62
 1033              	.LVL118:
 1034              	.L60:
 1035              	.LBE205:
  45:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->data[i]);
  46:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  47:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       return offset;
  48:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
 1036              		.loc 7 48 0
 1037 0054 70BD     		pop	{r4, r5, r6, pc}
 1038              		.cfi_endproc
 1039              	.LFE1502:
 1040              		.fnend
 1042              		.section	.text._ZN8std_msgs17Float32MultiArray7getTypeEv,"axG",%progbits,_ZN8std_msgs17Float32Mult
 1043              		.align	1
 1044              		.weak	_ZN8std_msgs17Float32MultiArray7getTypeEv
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1048              		.fpu softvfp
 1050              	_ZN8std_msgs17Float32MultiArray7getTypeEv:
 1051              		.fnstart
 1052              	.LFB1504:
  49:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
  52:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       int offset = 0;
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += this->layout.deserialize(inbuffer + offset);
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
  60:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
  61:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         float real;
  62:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         uint32_t base;
  63:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       } u_st_data;
  64:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base = 0;
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
  70:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         memcpy( &(this->data[i]), &(this->st_data), sizeof(float));
  72:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
  73:./lib/ros_lib/std_msgs/Float32MultiArray.h ****      return offset;
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     }
  75:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
  76:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getType(){ return "std_msgs/Float32MultiArray"; };
 1053              		.loc 7 76 0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 1058              	.LVL119:
 1059              		.loc 7 76 0
 1060 0000 0048     		ldr	r0, .L64
 1061              	.LVL120:
 1062 0002 7047     		bx	lr
 1063              	.L65:
 1064              		.align	2
 1065              	.L64:
 1066 0004 00000000 		.word	.LC13
 1067              		.cfi_endproc
 1068              	.LFE1504:
 1069              		.cantunwind
 1070              		.fnend
 1072              		.section	.text._ZN8std_msgs17Float32MultiArray6getMD5Ev,"axG",%progbits,_ZN8std_msgs17Float32Multi
 1073              		.align	1
 1074              		.weak	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu softvfp
 1080              	_ZN8std_msgs17Float32MultiArray6getMD5Ev:
 1081              		.fnstart
 1082              	.LFB1505:
  77:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     const char * getMD5(){ return "6a40e0ffa6a17a503ac3f8616991b1f6"; };
 1083              		.loc 7 77 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL121:
 1089              		.loc 7 77 0
 1090 0000 0048     		ldr	r0, .L67
 1091              	.LVL122:
 1092 0002 7047     		bx	lr
 1093              	.L68:
 1094              		.align	2
 1095              	.L67:
 1096 0004 00000000 		.word	.LC14
 1097              		.cfi_endproc
 1098              	.LFE1505:
 1099              		.cantunwind
 1100              		.fnend
 1102              		.section	.text._ZN8std_msgs6Header11deserializeEPh,"axG",%progbits,_ZN8std_msgs6Header11deserializ
 1103              		.align	1
 1104              		.weak	_ZN8std_msgs6Header11deserializeEPh
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu softvfp
 1110              	_ZN8std_msgs6Header11deserializeEPh:
 1111              		.fnstart
 1112              	.LFB1524:
 1113              		.file 8 "./lib/ros_lib/std_msgs/Header.h"
   1:./lib/ros_lib/std_msgs/Header.h **** #ifndef _ROS_std_msgs_Header_h
   2:./lib/ros_lib/std_msgs/Header.h **** #define _ROS_std_msgs_Header_h
   3:./lib/ros_lib/std_msgs/Header.h **** 
   4:./lib/ros_lib/std_msgs/Header.h **** #include <stdint.h>
   5:./lib/ros_lib/std_msgs/Header.h **** #include <string.h>
   6:./lib/ros_lib/std_msgs/Header.h **** #include <stdlib.h>
   7:./lib/ros_lib/std_msgs/Header.h **** #include "ros/msg.h"
   8:./lib/ros_lib/std_msgs/Header.h **** #include "ros/time.h"
   9:./lib/ros_lib/std_msgs/Header.h **** 
  10:./lib/ros_lib/std_msgs/Header.h **** namespace std_msgs
  11:./lib/ros_lib/std_msgs/Header.h **** {
  12:./lib/ros_lib/std_msgs/Header.h **** 
  13:./lib/ros_lib/std_msgs/Header.h ****   class Header : public ros::Msg
  14:./lib/ros_lib/std_msgs/Header.h ****   {
  15:./lib/ros_lib/std_msgs/Header.h ****     public:
  16:./lib/ros_lib/std_msgs/Header.h ****       uint32_t seq;
  17:./lib/ros_lib/std_msgs/Header.h ****       ros::Time stamp;
  18:./lib/ros_lib/std_msgs/Header.h ****       const char* frame_id;
  19:./lib/ros_lib/std_msgs/Header.h **** 
  20:./lib/ros_lib/std_msgs/Header.h ****     Header():
  21:./lib/ros_lib/std_msgs/Header.h ****       seq(0),
  22:./lib/ros_lib/std_msgs/Header.h ****       stamp(),
  23:./lib/ros_lib/std_msgs/Header.h ****       frame_id("")
  24:./lib/ros_lib/std_msgs/Header.h ****     {
  25:./lib/ros_lib/std_msgs/Header.h ****     }
  26:./lib/ros_lib/std_msgs/Header.h **** 
  27:./lib/ros_lib/std_msgs/Header.h ****     virtual int serialize(unsigned char *outbuffer) const
  28:./lib/ros_lib/std_msgs/Header.h ****     {
  29:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->seq >> (8 * 0)) & 0xFF;
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
  33:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
  34:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.sec >> (8 * 0)) & 0xFF;
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
  38:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
  39:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 0) = (this->stamp.nsec >> (8 * 0)) & 0xFF;
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
  43:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
  44:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  45:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id = strlen(this->frame_id);
  46:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
  47:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  48:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, this->frame_id, length_frame_id);
  49:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  50:./lib/ros_lib/std_msgs/Header.h ****       return offset;
  51:./lib/ros_lib/std_msgs/Header.h ****     }
  52:./lib/ros_lib/std_msgs/Header.h **** 
  53:./lib/ros_lib/std_msgs/Header.h ****     virtual int deserialize(unsigned char *inbuffer)
 1114              		.loc 8 53 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              	.LVL123:
 1119 0000 0346     		mov	r3, r0
 1120 0002 30B5     		push	{r4, r5, lr}
 1121              	.LCFI5:
 1122              		.cfi_def_cfa_offset 12
 1123              		.cfi_offset 4, -12
 1124              		.cfi_offset 5, -8
 1125              		.cfi_offset 14, -4
  54:./lib/ros_lib/std_msgs/Header.h ****     {
  55:./lib/ros_lib/std_msgs/Header.h ****       int offset = 0;
  56:./lib/ros_lib/std_msgs/Header.h ****       this->seq =  ((uint32_t) (*(inbuffer + offset)));
 1126              		.loc 8 56 0
 1127 0004 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1128 0006 01F11004 		add	r4, r1, #16
 1129 000a 4260     		str	r2, [r0, #4]
  57:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1130              		.loc 8 57 0
 1131 000c 4878     		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 1132              	.LVL124:
 1133 000e 42EA0022 		orr	r2, r2, r0, lsl #8
 1134 0012 5A60     		str	r2, [r3, #4]
  58:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1135              		.loc 8 58 0
 1136 0014 8878     		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 1137 0016 42EA0042 		orr	r2, r2, r0, lsl #16
 1138 001a 5A60     		str	r2, [r3, #4]
  59:./lib/ros_lib/std_msgs/Header.h ****       this->seq |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1139              		.loc 8 59 0
 1140 001c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 1141 001e 42EA0062 		orr	r2, r2, r0, lsl #24
 1142 0022 5A60     		str	r2, [r3, #4]
 1143              	.LVL125:
  60:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
  61:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec =  ((uint32_t) (*(inbuffer + offset)));
 1144              		.loc 8 61 0
 1145 0024 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 1146 0026 9A60     		str	r2, [r3, #8]
  62:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1147              		.loc 8 62 0
 1148 0028 4879     		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 1149 002a 42EA0022 		orr	r2, r2, r0, lsl #8
 1150 002e 9A60     		str	r2, [r3, #8]
  63:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1151              		.loc 8 63 0
 1152 0030 8879     		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 1153 0032 42EA0042 		orr	r2, r2, r0, lsl #16
 1154 0036 9A60     		str	r2, [r3, #8]
  64:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1155              		.loc 8 64 0
 1156 0038 C879     		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 1157 003a 42EA0062 		orr	r2, r2, r0, lsl #24
 1158 003e 9A60     		str	r2, [r3, #8]
 1159              	.LVL126:
  65:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
  66:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec =  ((uint32_t) (*(inbuffer + offset)));
 1160              		.loc 8 66 0
 1161 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 1162 0042 DA60     		str	r2, [r3, #12]
  67:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 1163              		.loc 8 67 0
 1164 0044 487A     		ldrb	r0, [r1, #9]	@ zero_extendqisi2
 1165 0046 42EA0022 		orr	r2, r2, r0, lsl #8
 1166 004a DA60     		str	r2, [r3, #12]
  68:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 1167              		.loc 8 68 0
 1168 004c 887A     		ldrb	r0, [r1, #10]	@ zero_extendqisi2
 1169 004e 42EA0042 		orr	r2, r2, r0, lsl #16
 1170 0052 DA60     		str	r2, [r3, #12]
  69:./lib/ros_lib/std_msgs/Header.h ****       this->stamp.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 1171              		.loc 8 69 0
 1172 0054 C87A     		ldrb	r0, [r1, #11]	@ zero_extendqisi2
 1173 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 1174 005a DA60     		str	r2, [r3, #12]
 1175              	.LVL127:
  70:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
  71:./lib/ros_lib/std_msgs/Header.h ****       uint32_t length_frame_id;
  72:./lib/ros_lib/std_msgs/Header.h ****       memcpy(&length_frame_id, (inbuffer + offset), sizeof(uint32_t));
 1176              		.loc 8 72 0
 1177 005c CA68     		ldr	r2, [r1, #12]	@ unaligned
 1178              	.LVL128:
 1179              	.LBB207:
  73:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
  74:./lib/ros_lib/std_msgs/Header.h ****       for(unsigned int k= offset; k< offset+length_frame_id; ++k){
 1180              		.loc 8 74 0
 1181 005e 02F11000 		add	r0, r2, #16
 1182              	.LVL129:
 1183              	.L71:
 1184              		.loc 8 74 0 is_stmt 0 discriminator 3
 1185 0062 651A     		subs	r5, r4, r1
 1186              	.LVL130:
 1187 0064 A842     		cmp	r0, r5
 1188 0066 04D9     		bls	.L70
  75:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1189              		.loc 8 75 0 is_stmt 1 discriminator 2
 1190 0068 14F8015B 		ldrb	r5, [r4], #1	@ zero_extendqisi2
 1191              	.LVL131:
 1192 006c 04F8025C 		strb	r5, [r4, #-2]
 1193              	.LVL132:
  74:./lib/ros_lib/std_msgs/Header.h ****           inbuffer[k-1]=inbuffer[k];
 1194              		.loc 8 74 0 discriminator 2
 1195 0070 F7E7     		b	.L71
 1196              	.LVL133:
 1197              	.L70:
 1198              	.LBE207:
  76:./lib/ros_lib/std_msgs/Header.h ****       }
  77:./lib/ros_lib/std_msgs/Header.h ****       inbuffer[offset+length_frame_id-1]=0;
 1199              		.loc 8 77 0
 1200 0072 0024     		movs	r4, #0
 1201 0074 0A44     		add	r2, r2, r1
 1202              	.LVL134:
 1203 0076 D473     		strb	r4, [r2, #15]
  78:./lib/ros_lib/std_msgs/Header.h ****       this->frame_id = (char *)(inbuffer + offset-1);
 1204              		.loc 8 78 0
 1205 0078 0F31     		adds	r1, r1, #15
 1206              	.LVL135:
 1207 007a 1961     		str	r1, [r3, #16]
 1208              	.LVL136:
  79:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
  80:./lib/ros_lib/std_msgs/Header.h ****      return offset;
  81:./lib/ros_lib/std_msgs/Header.h ****     }
 1209              		.loc 8 81 0
 1210 007c 30BD     		pop	{r4, r5, pc}
 1211              		.cfi_endproc
 1212              	.LFE1524:
 1213              		.cantunwind
 1214              		.fnend
 1216              		.section	.text._ZN8std_msgs6Header7getTypeEv,"axG",%progbits,_ZN8std_msgs6Header7getTypeEv,comdat
 1217              		.align	1
 1218              		.weak	_ZN8std_msgs6Header7getTypeEv
 1219              		.syntax unified
 1220              		.thumb
 1221              		.thumb_func
 1222              		.fpu softvfp
 1224              	_ZN8std_msgs6Header7getTypeEv:
 1225              		.fnstart
 1226              	.LFB1525:
  82:./lib/ros_lib/std_msgs/Header.h **** 
  83:./lib/ros_lib/std_msgs/Header.h ****     const char * getType(){ return "std_msgs/Header"; };
 1227              		.loc 8 83 0
 1228              		.cfi_startproc
 1229              		@ args = 0, pretend = 0, frame = 0
 1230              		@ frame_needed = 0, uses_anonymous_args = 0
 1231              		@ link register save eliminated.
 1232              	.LVL137:
 1233              		.loc 8 83 0
 1234 0000 0048     		ldr	r0, .L74
 1235              	.LVL138:
 1236 0002 7047     		bx	lr
 1237              	.L75:
 1238              		.align	2
 1239              	.L74:
 1240 0004 00000000 		.word	.LC15
 1241              		.cfi_endproc
 1242              	.LFE1525:
 1243              		.cantunwind
 1244              		.fnend
 1246              		.section	.text._ZN8std_msgs6Header6getMD5Ev,"axG",%progbits,_ZN8std_msgs6Header6getMD5Ev,comdat
 1247              		.align	1
 1248              		.weak	_ZN8std_msgs6Header6getMD5Ev
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu softvfp
 1254              	_ZN8std_msgs6Header6getMD5Ev:
 1255              		.fnstart
 1256              	.LFB1526:
  84:./lib/ros_lib/std_msgs/Header.h ****     const char * getMD5(){ return "2176decaecbce78abc3b96ef049fabed"; };
 1257              		.loc 8 84 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262              	.LVL139:
 1263              		.loc 8 84 0
 1264 0000 0048     		ldr	r0, .L77
 1265              	.LVL140:
 1266 0002 7047     		bx	lr
 1267              	.L78:
 1268              		.align	2
 1269              	.L77:
 1270 0004 00000000 		.word	.LC16
 1271              		.cfi_endproc
 1272              	.LFE1526:
 1273              		.cantunwind
 1274              		.fnend
 1276              		.section	.text._ZN12roberto_msgs10MotorState7getTypeEv,"axG",%progbits,_ZN12roberto_msgs10MotorSta
 1277              		.align	1
 1278              		.weak	_ZN12roberto_msgs10MotorState7getTypeEv
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1282              		.fpu softvfp
 1284              	_ZN12roberto_msgs10MotorState7getTypeEv:
 1285              		.fnstart
 1286              	.LFB1595:
 1287              		.file 9 "./lib/ros_lib/roberto_msgs/MotorState.h"
   1:./lib/ros_lib/roberto_msgs/MotorState.h **** #ifndef _ROS_roberto_msgs_MotorState_h
   2:./lib/ros_lib/roberto_msgs/MotorState.h **** #define _ROS_roberto_msgs_MotorState_h
   3:./lib/ros_lib/roberto_msgs/MotorState.h **** 
   4:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdint.h>
   5:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <string.h>
   6:./lib/ros_lib/roberto_msgs/MotorState.h **** #include <stdlib.h>
   7:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "ros/msg.h"
   8:./lib/ros_lib/roberto_msgs/MotorState.h **** #include "std_msgs/Header.h"
   9:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  10:./lib/ros_lib/roberto_msgs/MotorState.h **** namespace roberto_msgs
  11:./lib/ros_lib/roberto_msgs/MotorState.h **** {
  12:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  13:./lib/ros_lib/roberto_msgs/MotorState.h ****   class MotorState : public ros::Msg
  14:./lib/ros_lib/roberto_msgs/MotorState.h ****   {
  15:./lib/ros_lib/roberto_msgs/MotorState.h ****     public:
  16:./lib/ros_lib/roberto_msgs/MotorState.h ****       std_msgs::Header header;
  17:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_angle;
  18:./lib/ros_lib/roberto_msgs/MotorState.h ****       float heading_velocity;
  19:./lib/ros_lib/roberto_msgs/MotorState.h ****       float speed;
  20:./lib/ros_lib/roberto_msgs/MotorState.h ****       float acceleration;
  21:./lib/ros_lib/roberto_msgs/MotorState.h ****       uint8_t mode;
  22:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_AUTO = 0 };
  23:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_PIVOT = 1 };
  24:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SPIN = 2 };
  25:./lib/ros_lib/roberto_msgs/MotorState.h ****       enum { DRIVE_MODE_SIDEWAYS = 3 };
  26:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  27:./lib/ros_lib/roberto_msgs/MotorState.h ****     MotorState():
  28:./lib/ros_lib/roberto_msgs/MotorState.h ****       header(),
  29:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_angle(0),
  30:./lib/ros_lib/roberto_msgs/MotorState.h ****       heading_velocity(0),
  31:./lib/ros_lib/roberto_msgs/MotorState.h ****       speed(0),
  32:./lib/ros_lib/roberto_msgs/MotorState.h ****       acceleration(0),
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****       mode(0)
  34:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  35:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  36:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int serialize(unsigned char *outbuffer) const
  38:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  39:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.serialize(outbuffer + offset);
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
  46:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  47:./lib/ros_lib/roberto_msgs/MotorState.h ****       return offset;
  48:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  49:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     virtual int deserialize(unsigned char *inbuffer)
  51:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
  52:./lib/ros_lib/roberto_msgs/MotorState.h ****       int offset = 0;
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += this->header.deserialize(inbuffer + offset);
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
  59:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
  60:./lib/ros_lib/roberto_msgs/MotorState.h ****      return offset;
  61:./lib/ros_lib/roberto_msgs/MotorState.h ****     }
  62:./lib/ros_lib/roberto_msgs/MotorState.h **** 
  63:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getType(){ return "roberto_msgs/MotorState"; };
 1288              		.loc 9 63 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              		@ link register save eliminated.
 1293              	.LVL141:
 1294              		.loc 9 63 0
 1295 0000 0048     		ldr	r0, .L80
 1296              	.LVL142:
 1297 0002 7047     		bx	lr
 1298              	.L81:
 1299              		.align	2
 1300              	.L80:
 1301 0004 00000000 		.word	.LC17
 1302              		.cfi_endproc
 1303              	.LFE1595:
 1304              		.cantunwind
 1305              		.fnend
 1307              		.section	.text._ZN12roberto_msgs10MotorState6getMD5Ev,"axG",%progbits,_ZN12roberto_msgs10MotorStat
 1308              		.align	1
 1309              		.weak	_ZN12roberto_msgs10MotorState6getMD5Ev
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu softvfp
 1315              	_ZN12roberto_msgs10MotorState6getMD5Ev:
 1316              		.fnstart
 1317              	.LFB1596:
  64:./lib/ros_lib/roberto_msgs/MotorState.h ****     const char * getMD5(){ return "e8b5d1162b85151c49e02b8224796c0e"; };
 1318              		.loc 9 64 0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 1322              		@ link register save eliminated.
 1323              	.LVL143:
 1324              		.loc 9 64 0
 1325 0000 0048     		ldr	r0, .L83
 1326              	.LVL144:
 1327 0002 7047     		bx	lr
 1328              	.L84:
 1329              		.align	2
 1330              	.L83:
 1331 0004 00000000 		.word	.LC18
 1332              		.cfi_endproc
 1333              	.LFE1596:
 1334              		.cantunwind
 1335              		.fnend
 1337              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv,"axG",%pr
 1338              		.align	1
 1339              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1343              		.fpu softvfp
 1345              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv:
 1346              		.fnstart
 1347              	.LFB1798:
 1348              		.file 10 "./lib/ros_lib/ros/node_handle.h"
   1:./lib/ros_lib/ros/node_handle.h **** /*
   2:./lib/ros_lib/ros/node_handle.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/node_handle.h ****  *
   4:./lib/ros_lib/ros/node_handle.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/node_handle.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/node_handle.h ****  *
   7:./lib/ros_lib/ros/node_handle.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/node_handle.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/node_handle.h ****  * are met:
  10:./lib/ros_lib/ros/node_handle.h ****  *
  11:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/node_handle.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/node_handle.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/node_handle.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/node_handle.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/node_handle.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/node_handle.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/node_handle.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/node_handle.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/node_handle.h ****  *
  21:./lib/ros_lib/ros/node_handle.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/node_handle.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/node_handle.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/node_handle.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/node_handle.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/node_handle.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/node_handle.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/node_handle.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/node_handle.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/node_handle.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/node_handle.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/node_handle.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/node_handle.h ****  */
  34:./lib/ros_lib/ros/node_handle.h **** 
  35:./lib/ros_lib/ros/node_handle.h **** #ifndef ROS_NODE_HANDLE_H_
  36:./lib/ros_lib/ros/node_handle.h **** #define ROS_NODE_HANDLE_H_
  37:./lib/ros_lib/ros/node_handle.h **** 
  38:./lib/ros_lib/ros/node_handle.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/node_handle.h **** 
  40:./lib/ros_lib/ros/node_handle.h **** #include "std_msgs/Time.h"
  41:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/TopicInfo.h"
  42:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/Log.h"
  43:./lib/ros_lib/ros/node_handle.h **** #include "rosserial_msgs/RequestParam.h"
  44:./lib/ros_lib/ros/node_handle.h **** 
  45:./lib/ros_lib/ros/node_handle.h **** #define SYNC_SECONDS        5
  46:./lib/ros_lib/ros/node_handle.h **** 
  47:./lib/ros_lib/ros/node_handle.h **** #define MODE_FIRST_FF       0
  48:./lib/ros_lib/ros/node_handle.h **** /*
  49:./lib/ros_lib/ros/node_handle.h ****  * The second sync byte is a protocol version. It's value is 0xff for the first
  50:./lib/ros_lib/ros/node_handle.h ****  * version of the rosserial protocol (used up to hydro), 0xfe for the second version
  51:./lib/ros_lib/ros/node_handle.h ****  * (introduced in hydro), 0xfd for the next, and so on. Its purpose is to enable
  52:./lib/ros_lib/ros/node_handle.h ****  * detection of mismatched protocol versions (e.g. hydro rosserial_python with groovy
  53:./lib/ros_lib/ros/node_handle.h ****  * rosserial_arduino. It must be changed in both this file and in
  54:./lib/ros_lib/ros/node_handle.h ****  * rosserial_python/src/rosserial_python/SerialClient.py
  55:./lib/ros_lib/ros/node_handle.h ****  */
  56:./lib/ros_lib/ros/node_handle.h **** #define MODE_PROTOCOL_VER   1
  57:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER1		0xff // through groovy
  58:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER2		0xfe // in hydro
  59:./lib/ros_lib/ros/node_handle.h **** #define PROTOCOL_VER 		PROTOCOL_VER2
  60:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_L         2
  61:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_H         3
  62:./lib/ros_lib/ros/node_handle.h **** #define MODE_SIZE_CHECKSUM  4   // checksum for msg size received from size L and H
  63:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_L        5   // waiting for topic id
  64:./lib/ros_lib/ros/node_handle.h **** #define MODE_TOPIC_H        6
  65:./lib/ros_lib/ros/node_handle.h **** #define MODE_MESSAGE        7
  66:./lib/ros_lib/ros/node_handle.h **** #define MODE_MSG_CHECKSUM   8   // checksum for msg and topic id
  67:./lib/ros_lib/ros/node_handle.h **** 
  68:./lib/ros_lib/ros/node_handle.h **** 
  69:./lib/ros_lib/ros/node_handle.h **** #define MSG_TIMEOUT 20  //20 milliseconds to recieve all of message data
  70:./lib/ros_lib/ros/node_handle.h **** 
  71:./lib/ros_lib/ros/node_handle.h **** #include "msg.h"
  72:./lib/ros_lib/ros/node_handle.h **** 
  73:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  74:./lib/ros_lib/ros/node_handle.h **** 
  75:./lib/ros_lib/ros/node_handle.h ****   class NodeHandleBase_{
  76:./lib/ros_lib/ros/node_handle.h ****     public:
  77:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg* msg)=0;
  78:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce()=0;
  79:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected()=0;
  80:./lib/ros_lib/ros/node_handle.h ****     };
  81:./lib/ros_lib/ros/node_handle.h **** }
  82:./lib/ros_lib/ros/node_handle.h **** 
  83:./lib/ros_lib/ros/node_handle.h **** #include "publisher.h"
  84:./lib/ros_lib/ros/node_handle.h **** #include "subscriber.h"
  85:./lib/ros_lib/ros/node_handle.h **** #include "service_server.h"
  86:./lib/ros_lib/ros/node_handle.h **** #include "service_client.h"
  87:./lib/ros_lib/ros/node_handle.h **** 
  88:./lib/ros_lib/ros/node_handle.h **** namespace ros {
  89:./lib/ros_lib/ros/node_handle.h **** 
  90:./lib/ros_lib/ros/node_handle.h ****   using rosserial_msgs::TopicInfo;
  91:./lib/ros_lib/ros/node_handle.h **** 
  92:./lib/ros_lib/ros/node_handle.h ****   /* Node Handle */
  93:./lib/ros_lib/ros/node_handle.h ****   template<class Hardware,
  94:./lib/ros_lib/ros/node_handle.h ****            int MAX_SUBSCRIBERS=25,
  95:./lib/ros_lib/ros/node_handle.h ****            int MAX_PUBLISHERS=25,
  96:./lib/ros_lib/ros/node_handle.h ****            int INPUT_SIZE=512,
  97:./lib/ros_lib/ros/node_handle.h ****            int OUTPUT_SIZE=512>
  98:./lib/ros_lib/ros/node_handle.h ****   class NodeHandle_ : public NodeHandleBase_
  99:./lib/ros_lib/ros/node_handle.h ****   {
 100:./lib/ros_lib/ros/node_handle.h ****     protected:
 101:./lib/ros_lib/ros/node_handle.h ****       Hardware hardware_;
 102:./lib/ros_lib/ros/node_handle.h **** 
 103:./lib/ros_lib/ros/node_handle.h ****       /* time used for syncing */
 104:./lib/ros_lib/ros/node_handle.h ****       uint32_t rt_time;
 105:./lib/ros_lib/ros/node_handle.h **** 
 106:./lib/ros_lib/ros/node_handle.h ****       /* used for computing current time */
 107:./lib/ros_lib/ros/node_handle.h ****       uint32_t sec_offset, nsec_offset;
 108:./lib/ros_lib/ros/node_handle.h **** 
 109:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_in[INPUT_SIZE];
 110:./lib/ros_lib/ros/node_handle.h ****       uint8_t message_out[OUTPUT_SIZE];
 111:./lib/ros_lib/ros/node_handle.h **** 
 112:./lib/ros_lib/ros/node_handle.h ****       Publisher * publishers[MAX_PUBLISHERS];
 113:./lib/ros_lib/ros/node_handle.h ****       Subscriber_ * subscribers[MAX_SUBSCRIBERS];
 114:./lib/ros_lib/ros/node_handle.h **** 
 115:./lib/ros_lib/ros/node_handle.h ****       /*
 116:./lib/ros_lib/ros/node_handle.h ****        * Setup Functions
 117:./lib/ros_lib/ros/node_handle.h ****        */
 118:./lib/ros_lib/ros/node_handle.h ****     public:
 119:./lib/ros_lib/ros/node_handle.h ****       NodeHandle_() : configured_(false) {
 120:./lib/ros_lib/ros/node_handle.h **** 
 121:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_PUBLISHERS; i++)
 122:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 123:./lib/ros_lib/ros/node_handle.h **** 
 124:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< MAX_SUBSCRIBERS; i++)
 125:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 126:./lib/ros_lib/ros/node_handle.h **** 
 127:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< INPUT_SIZE; i++)
 128:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 129:./lib/ros_lib/ros/node_handle.h **** 
 130:./lib/ros_lib/ros/node_handle.h ****         for(unsigned int i=0; i< OUTPUT_SIZE; i++)
 131:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 132:./lib/ros_lib/ros/node_handle.h **** 
 133:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 134:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 135:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats_length = 0;
 136:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.floats = NULL;
 137:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints_length = 0;
 138:./lib/ros_lib/ros/node_handle.h ****         req_param_resp.ints = NULL;
 139:./lib/ros_lib/ros/node_handle.h ****       }
 140:./lib/ros_lib/ros/node_handle.h **** 
 141:./lib/ros_lib/ros/node_handle.h ****       Hardware* getHardware(){
 142:./lib/ros_lib/ros/node_handle.h ****         return &hardware_;
 143:./lib/ros_lib/ros/node_handle.h ****       }
 144:./lib/ros_lib/ros/node_handle.h **** 
 145:./lib/ros_lib/ros/node_handle.h ****       /* Start serial, initialize buffers */
 146:./lib/ros_lib/ros/node_handle.h ****       void initNode(){
 147:./lib/ros_lib/ros/node_handle.h ****         hardware_.init();
 148:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 149:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 150:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 151:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 152:./lib/ros_lib/ros/node_handle.h ****       };
 153:./lib/ros_lib/ros/node_handle.h **** 
 154:./lib/ros_lib/ros/node_handle.h ****       /* Start a named port, which may be network server IP, initialize buffers */
 155:./lib/ros_lib/ros/node_handle.h ****       void initNode(char *portName){
 156:./lib/ros_lib/ros/node_handle.h ****         hardware_.init(portName);
 157:./lib/ros_lib/ros/node_handle.h ****         mode_ = 0;
 158:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 159:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 160:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 161:./lib/ros_lib/ros/node_handle.h ****       };
 162:./lib/ros_lib/ros/node_handle.h **** 
 163:./lib/ros_lib/ros/node_handle.h ****     protected:
 164:./lib/ros_lib/ros/node_handle.h ****       //State machine variables for spinOnce
 165:./lib/ros_lib/ros/node_handle.h ****       int mode_;
 166:./lib/ros_lib/ros/node_handle.h ****       int bytes_;
 167:./lib/ros_lib/ros/node_handle.h ****       int topic_;
 168:./lib/ros_lib/ros/node_handle.h ****       int index_;
 169:./lib/ros_lib/ros/node_handle.h ****       int checksum_;
 170:./lib/ros_lib/ros/node_handle.h **** 
 171:./lib/ros_lib/ros/node_handle.h ****       bool configured_;
 172:./lib/ros_lib/ros/node_handle.h **** 
 173:./lib/ros_lib/ros/node_handle.h ****       /* used for syncing the time */
 174:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_time;
 175:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_sync_receive_time;
 176:./lib/ros_lib/ros/node_handle.h ****       uint32_t last_msg_timeout_time;
 177:./lib/ros_lib/ros/node_handle.h **** 
 178:./lib/ros_lib/ros/node_handle.h ****     public:
 179:./lib/ros_lib/ros/node_handle.h ****       /* This function goes in your loop() function, it handles
 180:./lib/ros_lib/ros/node_handle.h ****        *  serial input and callbacks for subscribers.
 181:./lib/ros_lib/ros/node_handle.h ****        */
 182:./lib/ros_lib/ros/node_handle.h **** 
 183:./lib/ros_lib/ros/node_handle.h **** 
 184:./lib/ros_lib/ros/node_handle.h ****       virtual int spinOnce(){
 185:./lib/ros_lib/ros/node_handle.h **** 
 186:./lib/ros_lib/ros/node_handle.h ****         /* restart if timed out */
 187:./lib/ros_lib/ros/node_handle.h ****         uint32_t c_time = hardware_.time();
 188:./lib/ros_lib/ros/node_handle.h ****         if( (c_time - last_sync_receive_time) > (SYNC_SECONDS*2200) ){
 189:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 190:./lib/ros_lib/ros/node_handle.h ****          }
 191:./lib/ros_lib/ros/node_handle.h **** 
 192:./lib/ros_lib/ros/node_handle.h ****         /* reset if message has timed out */
 193:./lib/ros_lib/ros/node_handle.h ****         if ( mode_ != MODE_FIRST_FF){
 194:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 195:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 196:./lib/ros_lib/ros/node_handle.h ****           }
 197:./lib/ros_lib/ros/node_handle.h ****         }
 198:./lib/ros_lib/ros/node_handle.h ****         /* while available buffer, read data */
 199:./lib/ros_lib/ros/node_handle.h ****         while( true )
 200:./lib/ros_lib/ros/node_handle.h ****         {
 201:./lib/ros_lib/ros/node_handle.h ****           int data = hardware_.read();
 202:./lib/ros_lib/ros/node_handle.h ****           if( data < 0 )
 203:./lib/ros_lib/ros/node_handle.h ****             break;
 204:./lib/ros_lib/ros/node_handle.h ****           checksum_ += data;
 205:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 206:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 207:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 208:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 209:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 210:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 211:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 212:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 213:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 214:./lib/ros_lib/ros/node_handle.h ****             }
 215:./lib/ros_lib/ros/node_handle.h ****             else if( hardware_.time() - c_time > (SYNC_SECONDS)){
 216:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 217:./lib/ros_lib/ros/node_handle.h ****               configured_=false;
 218:./lib/ros_lib/ros/node_handle.h ****               return -2;
 219:./lib/ros_lib/ros/node_handle.h ****             }
 220:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_PROTOCOL_VER ){
 221:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 222:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 223:./lib/ros_lib/ros/node_handle.h ****             }else{
 224:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_FIRST_FF;
 225:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 226:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 227:./lib/ros_lib/ros/node_handle.h ****             }
 228:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_SIZE_L ){   /* bottom half of message size */
 229:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 230:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 231:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 232:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 233:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_H ){   /* top half of message size */
 234:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 235:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 236:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 237:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 238:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 239:./lib/ros_lib/ros/node_handle.h **** 	    else
 240:./lib/ros_lib/ros/node_handle.h **** 	      mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 241:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 242:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 243:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 244:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 245:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 246:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 247:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 248:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 249:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 250:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_MSG_CHECKSUM ){ /* do checksum */
 251:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 252:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 253:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 254:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 255:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 257:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 258:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 259:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 260:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 261:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 262:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 263:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 264:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 265:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 266:./lib/ros_lib/ros/node_handle.h ****               }else{
 267:./lib/ros_lib/ros/node_handle.h ****                 if(subscribers[topic_-100])
 268:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 269:./lib/ros_lib/ros/node_handle.h ****               }
 270:./lib/ros_lib/ros/node_handle.h ****             }
 271:./lib/ros_lib/ros/node_handle.h ****           }
 272:./lib/ros_lib/ros/node_handle.h ****         }
 273:./lib/ros_lib/ros/node_handle.h **** 
 274:./lib/ros_lib/ros/node_handle.h ****         /* occasionally sync time */
 275:./lib/ros_lib/ros/node_handle.h ****         if( configured_ && ((c_time-last_sync_time) > (SYNC_SECONDS*500) )){
 276:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 277:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 278:./lib/ros_lib/ros/node_handle.h ****         }
 279:./lib/ros_lib/ros/node_handle.h **** 
 280:./lib/ros_lib/ros/node_handle.h ****         return 0;
 281:./lib/ros_lib/ros/node_handle.h ****       }
 282:./lib/ros_lib/ros/node_handle.h **** 
 283:./lib/ros_lib/ros/node_handle.h **** 
 284:./lib/ros_lib/ros/node_handle.h ****       /* Are we connected to the PC? */
 285:./lib/ros_lib/ros/node_handle.h ****       virtual bool connected() {
 1349              		.loc 10 285 0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 0
 1352              		@ frame_needed = 0, uses_anonymous_args = 0
 1353              		@ link register save eliminated.
 1354              	.LVL145:
 286:./lib/ros_lib/ros/node_handle.h ****         return configured_;
 287:./lib/ros_lib/ros/node_handle.h ****       };
 1355              		.loc 10 287 0
 1356 0000 90F8F408 		ldrb	r0, [r0, #2292]	@ zero_extendqisi2
 1357              	.LVL146:
 1358 0004 7047     		bx	lr
 1359              		.cfi_endproc
 1360              	.LFE1798:
 1361              		.cantunwind
 1362              		.fnend
 1364              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv,"axG",%progbit
 1365              		.align	1
 1366              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu softvfp
 1372              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:
 1373              		.fnstart
 1374              	.LFB1915:
 1375              		.file 11 "./lib/ros_lib/ros/subscriber.h"
   1:./lib/ros_lib/ros/subscriber.h **** /* 
   2:./lib/ros_lib/ros/subscriber.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/subscriber.h ****  *
   4:./lib/ros_lib/ros/subscriber.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/subscriber.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/subscriber.h ****  *
   7:./lib/ros_lib/ros/subscriber.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/subscriber.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/subscriber.h ****  * are met:
  10:./lib/ros_lib/ros/subscriber.h ****  *
  11:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/subscriber.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/subscriber.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/subscriber.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/subscriber.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/subscriber.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/subscriber.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/subscriber.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/subscriber.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/subscriber.h ****  *
  21:./lib/ros_lib/ros/subscriber.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/subscriber.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/subscriber.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/subscriber.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/subscriber.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/subscriber.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/subscriber.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/subscriber.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/subscriber.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/subscriber.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/subscriber.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/subscriber.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/subscriber.h ****  */
  34:./lib/ros_lib/ros/subscriber.h **** 
  35:./lib/ros_lib/ros/subscriber.h **** #ifndef ROS_SUBSCRIBER_H_
  36:./lib/ros_lib/ros/subscriber.h **** #define ROS_SUBSCRIBER_H_
  37:./lib/ros_lib/ros/subscriber.h **** 
  38:./lib/ros_lib/ros/subscriber.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/subscriber.h **** 
  40:./lib/ros_lib/ros/subscriber.h **** namespace ros {
  41:./lib/ros_lib/ros/subscriber.h **** 
  42:./lib/ros_lib/ros/subscriber.h ****   /* Base class for objects subscribers. */
  43:./lib/ros_lib/ros/subscriber.h ****   class Subscriber_
  44:./lib/ros_lib/ros/subscriber.h ****   {
  45:./lib/ros_lib/ros/subscriber.h ****     public:
  46:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char *data)=0;
  47:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType()=0;
  48:./lib/ros_lib/ros/subscriber.h **** 
  49:./lib/ros_lib/ros/subscriber.h ****       // id_ is set by NodeHandle when we advertise 
  50:./lib/ros_lib/ros/subscriber.h ****       int id_;
  51:./lib/ros_lib/ros/subscriber.h **** 
  52:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType()=0;
  53:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5()=0;
  54:./lib/ros_lib/ros/subscriber.h ****       const char * topic_;
  55:./lib/ros_lib/ros/subscriber.h ****   };
  56:./lib/ros_lib/ros/subscriber.h **** 
  57:./lib/ros_lib/ros/subscriber.h **** 
  58:./lib/ros_lib/ros/subscriber.h ****   /* Actual subscriber, templated on message type. */
  59:./lib/ros_lib/ros/subscriber.h ****   template<typename MsgT>
  60:./lib/ros_lib/ros/subscriber.h ****   class Subscriber: public Subscriber_{
  61:./lib/ros_lib/ros/subscriber.h ****     public:
  62:./lib/ros_lib/ros/subscriber.h ****       typedef void(*CallbackT)(const MsgT&);
  63:./lib/ros_lib/ros/subscriber.h ****       MsgT msg;
  64:./lib/ros_lib/ros/subscriber.h **** 
  65:./lib/ros_lib/ros/subscriber.h ****       Subscriber(const char * topic_name, CallbackT cb, int endpoint=rosserial_msgs::TopicInfo::ID_
  66:./lib/ros_lib/ros/subscriber.h ****         cb_(cb),
  67:./lib/ros_lib/ros/subscriber.h ****         endpoint_(endpoint)
  68:./lib/ros_lib/ros/subscriber.h ****       {
  69:./lib/ros_lib/ros/subscriber.h ****         topic_ = topic_name;
  70:./lib/ros_lib/ros/subscriber.h ****       };
  71:./lib/ros_lib/ros/subscriber.h **** 
  72:./lib/ros_lib/ros/subscriber.h ****       virtual void callback(unsigned char* data){
  73:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
  74:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
  75:./lib/ros_lib/ros/subscriber.h ****       }
  76:./lib/ros_lib/ros/subscriber.h **** 
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgType(){ return this->msg.getType(); }
  78:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
  79:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1376              		.loc 11 79 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL147:
 1382              		.loc 11 79 0
 1383 0000 C06B     		ldr	r0, [r0, #60]
 1384              	.LVL148:
 1385 0002 7047     		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE1915:
 1388              		.cantunwind
 1389              		.fnend
 1391              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv,"axG",%progbits,_ZN
 1392              		.align	1
 1393              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 1394              		.syntax unified
 1395              		.thumb
 1396              		.thumb_func
 1397              		.fpu softvfp
 1399              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:
 1400              		.fnstart
 1401              	.LFB1916:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1402              		.loc 11 77 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 0, uses_anonymous_args = 0
 1406              		@ link register save eliminated.
 1407              	.LVL149:
  77:./lib/ros_lib/ros/subscriber.h ****       virtual const char * getMsgMD5(){ return this->msg.getMD5(); }
 1408              		.loc 11 77 0
 1409 0000 0048     		ldr	r0, .L88
 1410              	.LVL150:
 1411 0002 7047     		bx	lr
 1412              	.L89:
 1413              		.align	2
 1414              	.L88:
 1415 0004 00000000 		.word	.LC17
 1416              		.cfi_endproc
 1417              	.LFE1916:
 1418              		.cantunwind
 1419              		.fnend
 1421              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev,"axG",%progbits,_ZN3r
 1422              		.align	1
 1423              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 1424              		.syntax unified
 1425              		.thumb
 1426              		.thumb_func
 1427              		.fpu softvfp
 1429              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:
 1430              		.fnstart
 1431              	.LFB1917:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1432              		.loc 11 78 0
 1433              		.cfi_startproc
 1434              		@ args = 0, pretend = 0, frame = 0
 1435              		@ frame_needed = 0, uses_anonymous_args = 0
 1436              		@ link register save eliminated.
 1437              	.LVL151:
  78:./lib/ros_lib/ros/subscriber.h ****       virtual int getEndpointType(){ return endpoint_; }
 1438              		.loc 11 78 0
 1439 0000 0048     		ldr	r0, .L91
 1440              	.LVL152:
 1441 0002 7047     		bx	lr
 1442              	.L92:
 1443              		.align	2
 1444              	.L91:
 1445 0004 00000000 		.word	.LC18
 1446              		.cfi_endproc
 1447              	.LFE1917:
 1448              		.cantunwind
 1449              		.fnend
 1451              		.section	.text._ZNK8std_msgs6Header9serializeEPh,"axG",%progbits,_ZNK8std_msgs6Header9serializeEPh
 1452              		.align	1
 1453              		.weak	_ZNK8std_msgs6Header9serializeEPh
 1454              		.syntax unified
 1455              		.thumb
 1456              		.thumb_func
 1457              		.fpu softvfp
 1459              	_ZNK8std_msgs6Header9serializeEPh:
 1460              		.fnstart
 1461              	.LFB1523:
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1462              		.loc 8 27 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              	.LVL153:
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1467              		.loc 8 30 0
 1468 0000 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1469              		.loc 8 27 0
 1470 0002 70B5     		push	{r4, r5, r6, lr}
 1471              	.LCFI6:
 1472              		.cfi_def_cfa_offset 16
 1473              		.cfi_offset 4, -16
 1474              		.cfi_offset 5, -12
 1475              		.cfi_offset 6, -8
 1476              		.cfi_offset 14, -4
  30:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->seq >> (8 * 1)) & 0xFF;
 1477              		.loc 8 30 0
 1478 0004 0B70     		strb	r3, [r1]
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1479              		.loc 8 31 0
 1480 0006 4368     		ldr	r3, [r0, #4]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1481              		.loc 8 27 0
 1482 0008 0546     		mov	r5, r0
  31:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->seq >> (8 * 2)) & 0xFF;
 1483              		.loc 8 31 0
 1484 000a 1B0A     		lsrs	r3, r3, #8
 1485 000c 4B70     		strb	r3, [r1, #1]
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1486              		.loc 8 32 0
 1487 000e C388     		ldrh	r3, [r0, #6]
  27:./lib/ros_lib/std_msgs/Header.h ****     {
 1488              		.loc 8 27 0
 1489 0010 0C46     		mov	r4, r1
  32:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->seq >> (8 * 3)) & 0xFF;
 1490              		.loc 8 32 0
 1491 0012 8B70     		strb	r3, [r1, #2]
  33:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->seq);
 1492              		.loc 8 33 0
 1493 0014 C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1494 0016 CB70     		strb	r3, [r1, #3]
 1495              	.LVL154:
  35:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.sec >> (8 * 1)) & 0xFF;
 1496              		.loc 8 35 0
 1497 0018 8368     		ldr	r3, [r0, #8]
 1498 001a 0B71     		strb	r3, [r1, #4]
  36:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.sec >> (8 * 2)) & 0xFF;
 1499              		.loc 8 36 0
 1500 001c 8368     		ldr	r3, [r0, #8]
 1501 001e 1B0A     		lsrs	r3, r3, #8
 1502 0020 4B71     		strb	r3, [r1, #5]
  37:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.sec >> (8 * 3)) & 0xFF;
 1503              		.loc 8 37 0
 1504 0022 4389     		ldrh	r3, [r0, #10]
 1505 0024 8B71     		strb	r3, [r1, #6]
  38:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.sec);
 1506              		.loc 8 38 0
 1507 0026 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1508 0028 CB71     		strb	r3, [r1, #7]
 1509              	.LVL155:
  40:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 1) = (this->stamp.nsec >> (8 * 1)) & 0xFF;
 1510              		.loc 8 40 0
 1511 002a C368     		ldr	r3, [r0, #12]
 1512 002c 0B72     		strb	r3, [r1, #8]
  41:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 2) = (this->stamp.nsec >> (8 * 2)) & 0xFF;
 1513              		.loc 8 41 0
 1514 002e C368     		ldr	r3, [r0, #12]
 1515 0030 1B0A     		lsrs	r3, r3, #8
 1516 0032 4B72     		strb	r3, [r1, #9]
  42:./lib/ros_lib/std_msgs/Header.h ****       *(outbuffer + offset + 3) = (this->stamp.nsec >> (8 * 3)) & 0xFF;
 1517              		.loc 8 42 0
 1518 0034 C389     		ldrh	r3, [r0, #14]
 1519 0036 8B72     		strb	r3, [r1, #10]
  43:./lib/ros_lib/std_msgs/Header.h ****       offset += sizeof(this->stamp.nsec);
 1520              		.loc 8 43 0
 1521 0038 C37B     		ldrb	r3, [r0, #15]	@ zero_extendqisi2
 1522 003a CB72     		strb	r3, [r1, #11]
 1523              	.LVL156:
  45:./lib/ros_lib/std_msgs/Header.h ****       memcpy(outbuffer + offset, &length_frame_id, sizeof(uint32_t));
 1524              		.loc 8 45 0
 1525 003c 0069     		ldr	r0, [r0, #16]
 1526              	.LVL157:
 1527 003e FFF7FEFF 		bl	strlen
 1528              	.LVL158:
 1529 0042 0646     		mov	r6, r0
 1530              	.LVL159:
  46:./lib/ros_lib/std_msgs/Header.h ****       offset += 4;
 1531              		.loc 8 46 0
 1532 0044 E060     		str	r0, [r4, #12]	@ unaligned
 1533              	.LVL160:
  48:./lib/ros_lib/std_msgs/Header.h ****       offset += length_frame_id;
 1534              		.loc 8 48 0
 1535 0046 0246     		mov	r2, r0
 1536 0048 2969     		ldr	r1, [r5, #16]
 1537 004a 04F11000 		add	r0, r4, #16
 1538              	.LVL161:
 1539 004e FFF7FEFF 		bl	memcpy
 1540              	.LVL162:
  51:./lib/ros_lib/std_msgs/Header.h **** 
 1541              		.loc 8 51 0
 1542 0052 06F11000 		add	r0, r6, #16
 1543              	.LVL163:
 1544 0056 70BD     		pop	{r4, r5, r6, pc}
 1545              		.cfi_endproc
 1546              	.LFE1523:
 1547              		.cantunwind
 1548              		.fnend
 1550              		.section	.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh,"axG",%progbits,_ZNK8std_msgs19Mult
 1551              		.align	1
 1552              		.weak	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1556              		.fpu softvfp
 1558              	_ZNK8std_msgs19MultiArrayDimension9serializeEPh:
 1559              		.fnstart
 1560              	.LFB1488:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1561              		.loc 5 26 0
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 0
 1564              		@ frame_needed = 0, uses_anonymous_args = 0
 1565              	.LVL164:
 1566 0000 70B5     		push	{r4, r5, r6, lr}
 1567              	.LCFI7:
 1568              		.cfi_def_cfa_offset 16
 1569              		.cfi_offset 4, -16
 1570              		.cfi_offset 5, -12
 1571              		.cfi_offset 6, -8
 1572              		.cfi_offset 14, -4
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1573              		.loc 5 26 0
 1574 0002 0546     		mov	r5, r0
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1575              		.loc 5 29 0
 1576 0004 4068     		ldr	r0, [r0, #4]
 1577              	.LVL165:
  26:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 1578              		.loc 5 26 0
 1579 0006 0C46     		mov	r4, r1
  29:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       memcpy(outbuffer + offset, &length_label, sizeof(uint32_t));
 1580              		.loc 5 29 0
 1581 0008 FFF7FEFF 		bl	strlen
 1582              	.LVL166:
 1583 000c 0646     		mov	r6, r0
 1584              	.LVL167:
  30:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += 4;
 1585              		.loc 5 30 0
 1586 000e 2046     		mov	r0, r4
 1587              	.LVL168:
 1588 0010 40F8046B 		str	r6, [r0], #4	@ unaligned
 1589              	.LVL169:
  32:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += length_label;
 1590              		.loc 5 32 0
 1591 0014 6968     		ldr	r1, [r5, #4]
 1592 0016 3246     		mov	r2, r6
 1593 0018 FFF7FEFF 		bl	memcpy
 1594              	.LVL170:
  34:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->size >> (8 * 1)) & 0xFF;
 1595              		.loc 5 34 0
 1596 001c AB68     		ldr	r3, [r5, #8]
 1597 001e A119     		adds	r1, r4, r6
 1598 0020 0B71     		strb	r3, [r1, #4]
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1599              		.loc 5 35 0
 1600 0022 AB68     		ldr	r3, [r5, #8]
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1601              		.loc 5 45 0
 1602 0024 06F10C00 		add	r0, r6, #12
  35:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->size >> (8 * 2)) & 0xFF;
 1603              		.loc 5 35 0
 1604 0028 1B0A     		lsrs	r3, r3, #8
 1605 002a 4B71     		strb	r3, [r1, #5]
  36:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->size >> (8 * 3)) & 0xFF;
 1606              		.loc 5 36 0
 1607 002c 6B89     		ldrh	r3, [r5, #10]
 1608 002e 8B71     		strb	r3, [r1, #6]
  37:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->size);
 1609              		.loc 5 37 0
 1610 0030 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1611 0032 CB71     		strb	r3, [r1, #7]
 1612              	.LVL171:
  39:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 1) = (this->stride >> (8 * 1)) & 0xFF;
 1613              		.loc 5 39 0
 1614 0034 EB68     		ldr	r3, [r5, #12]
 1615 0036 0B72     		strb	r3, [r1, #8]
  40:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 2) = (this->stride >> (8 * 2)) & 0xFF;
 1616              		.loc 5 40 0
 1617 0038 EB68     		ldr	r3, [r5, #12]
 1618 003a 1B0A     		lsrs	r3, r3, #8
 1619 003c 4B72     		strb	r3, [r1, #9]
  41:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       *(outbuffer + offset + 3) = (this->stride >> (8 * 3)) & 0xFF;
 1620              		.loc 5 41 0
 1621 003e EB89     		ldrh	r3, [r5, #14]
 1622 0040 8B72     		strb	r3, [r1, #10]
  42:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****       offset += sizeof(this->stride);
 1623              		.loc 5 42 0
 1624 0042 EB7B     		ldrb	r3, [r5, #15]	@ zero_extendqisi2
 1625 0044 CB72     		strb	r3, [r1, #11]
 1626              	.LVL172:
  45:./lib/ros_lib/std_msgs/MultiArrayDimension.h **** 
 1627              		.loc 5 45 0
 1628 0046 70BD     		pop	{r4, r5, r6, pc}
 1629              		.cfi_endproc
 1630              	.LFE1488:
 1631              		.cantunwind
 1632              		.fnend
 1634              		.section	.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh,"axG",%progbits,_ZNK14rosse
 1635              		.align	1
 1636              		.weak	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1640              		.fpu softvfp
 1642              	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:
 1643              		.fnstart
 1644              	.LFB1409:
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1645              		.loc 4 74 0
 1646              		.cfi_startproc
 1647              		@ args = 0, pretend = 0, frame = 0
 1648              		@ frame_needed = 0, uses_anonymous_args = 0
 1649              	.LVL173:
 1650 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1651              	.LCFI8:
 1652              		.cfi_def_cfa_offset 32
 1653              		.cfi_offset 3, -32
 1654              		.cfi_offset 4, -28
 1655              		.cfi_offset 5, -24
 1656              		.cfi_offset 6, -20
 1657              		.cfi_offset 7, -16
 1658              		.cfi_offset 8, -12
 1659              		.cfi_offset 9, -8
 1660              		.cfi_offset 14, -4
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1661              		.loc 4 77 0
 1662 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1663              		.loc 4 74 0
 1664 0006 0746     		mov	r7, r0
  77:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1665              		.loc 4 77 0
 1666 0008 0B70     		strb	r3, [r1]
 1667              	.LVL174:
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1668              		.loc 4 78 0
 1669 000a 0023     		movs	r3, #0
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1670              		.loc 4 80 0
 1671 000c 1A46     		mov	r2, r3
  74:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 1672              		.loc 4 74 0
 1673 000e 0C46     		mov	r4, r1
  78:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1674              		.loc 4 78 0
 1675 0010 4B70     		strb	r3, [r1, #1]
 1676              	.LVL175:
  79:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1677              		.loc 4 79 0
 1678 0012 8B70     		strb	r3, [r1, #2]
 1679              	.LVL176:
  80:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 1680              		.loc 4 80 0
 1681 0014 CB70     		strb	r3, [r1, #3]
 1682              	.LVL177:
 1683 0016 0431     		adds	r1, r1, #4
 1684              	.LVL178:
 1685              	.L97:
 1686              	.LBB208:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1687              		.loc 4 81 0 discriminator 3
 1688 0018 3D79     		ldrb	r5, [r7, #4]	@ zero_extendqisi2
 1689 001a 501C     		adds	r0, r2, #1
 1690 001c D2B2     		uxtb	r2, r2
 1691 001e AA42     		cmp	r2, r5
 1692 0020 A1EB0403 		sub	r3, r1, r4
 1693              	.LVL179:
 1694 0024 01F10401 		add	r1, r1, #4
 1695 0028 0FDA     		bge	.L96
 1696              	.LBB209:
  86:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 1697              		.loc 4 86 0 discriminator 2
 1698 002a FB68     		ldr	r3, [r7, #12]
 1699              	.LVL180:
 1700 002c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1701              	.LVL181:
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1702              		.loc 4 88 0 discriminator 2
 1703 0030 1A0A     		lsrs	r2, r3, #8
  87:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 1704              		.loc 4 87 0 discriminator 2
 1705 0032 01F8043C 		strb	r3, [r1, #-4]
  88:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 1706              		.loc 4 88 0 discriminator 2
 1707 0036 01F8032C 		strb	r2, [r1, #-3]
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1708              		.loc 4 89 0 discriminator 2
 1709 003a 1A0C     		lsrs	r2, r3, #16
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1710              		.loc 4 90 0 discriminator 2
 1711 003c 1B0E     		lsrs	r3, r3, #24
 1712              	.LVL182:
  89:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 1713              		.loc 4 89 0 discriminator 2
 1714 003e 01F8022C 		strb	r2, [r1, #-2]
  90:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->ints[i]);
 1715              		.loc 4 90 0 discriminator 2
 1716 0042 01F8013C 		strb	r3, [r1, #-1]
 1717              	.LVL183:
 1718              	.LBE209:
  81:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1719              		.loc 4 81 0 discriminator 2
 1720 0046 0246     		mov	r2, r0
 1721 0048 E6E7     		b	.L97
 1722              	.LVL184:
 1723              	.L96:
 1724              	.LBE208:
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1725              		.loc 4 93 0
 1726 004a 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1727              		.loc 4 94 0
 1728 004c E118     		adds	r1, r4, r3
  93:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1729              		.loc 4 93 0
 1730 004e E254     		strb	r2, [r4, r3]
 1731              	.LVL185:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1732              		.loc 4 94 0
 1733 0050 0022     		movs	r2, #0
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1734              		.loc 4 96 0
 1735 0052 0433     		adds	r3, r3, #4
 1736              	.LVL186:
  94:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1737              		.loc 4 94 0
 1738 0054 4A70     		strb	r2, [r1, #1]
 1739              	.LVL187:
  95:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1740              		.loc 4 95 0
 1741 0056 8A70     		strb	r2, [r1, #2]
  96:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 1742              		.loc 4 96 0
 1743 0058 CA70     		strb	r2, [r1, #3]
 1744              	.LVL188:
 1745 005a 2344     		add	r3, r3, r4
 1746              	.LVL189:
 1747              	.L99:
 1748              	.LBB210:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1749              		.loc 4 97 0 discriminator 3
 1750 005c 387C     		ldrb	r0, [r7, #16]	@ zero_extendqisi2
 1751 005e 511C     		adds	r1, r2, #1
 1752 0060 D2B2     		uxtb	r2, r2
 1753 0062 8242     		cmp	r2, r0
 1754 0064 A3EB0406 		sub	r6, r3, r4
 1755              	.LVL190:
 1756 0068 03F10403 		add	r3, r3, #4
 1757 006c 0FDA     		bge	.L98
 1758              	.LBB211:
 102:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 1759              		.loc 4 102 0 discriminator 2
 1760 006e B869     		ldr	r0, [r7, #24]
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1761              		.loc 4 103 0 discriminator 2
 1762 0070 50F82220 		ldr	r2, [r0, r2, lsl #2]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1763              		.loc 4 104 0 discriminator 2
 1764 0074 100A     		lsrs	r0, r2, #8
 103:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 1765              		.loc 4 103 0 discriminator 2
 1766 0076 03F8042C 		strb	r2, [r3, #-4]
 104:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 1767              		.loc 4 104 0 discriminator 2
 1768 007a 03F8030C 		strb	r0, [r3, #-3]
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1769              		.loc 4 105 0 discriminator 2
 1770 007e 100C     		lsrs	r0, r2, #16
 106:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->floats[i]);
 1771              		.loc 4 106 0 discriminator 2
 1772 0080 120E     		lsrs	r2, r2, #24
 1773 0082 03F8012C 		strb	r2, [r3, #-1]
 1774              	.LVL191:
 105:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 1775              		.loc 4 105 0 discriminator 2
 1776 0086 03F8020C 		strb	r0, [r3, #-2]
 1777              	.LBE211:
  97:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 1778              		.loc 4 97 0 discriminator 2
 1779 008a 0A46     		mov	r2, r1
 1780 008c E6E7     		b	.L99
 1781              	.LVL192:
 1782              	.L98:
 1783              	.LBE210:
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1784              		.loc 4 109 0
 1785 008e 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1786              		.loc 4 110 0
 1787 0090 A219     		adds	r2, r4, r6
 109:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1788              		.loc 4 109 0
 1789 0092 A355     		strb	r3, [r4, r6]
 1790              	.LVL193:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1791              		.loc 4 110 0
 1792 0094 0023     		movs	r3, #0
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1793              		.loc 4 112 0
 1794 0096 0436     		adds	r6, r6, #4
 1795              	.LVL194:
 110:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1796              		.loc 4 110 0
 1797 0098 5370     		strb	r3, [r2, #1]
 1798              	.LVL195:
 111:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       *(outbuffer + offset++) = 0;
 1799              		.loc 4 111 0
 1800 009a 9370     		strb	r3, [r2, #2]
 112:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 1801              		.loc 4 112 0
 1802 009c D370     		strb	r3, [r2, #3]
 1803              	.LVL196:
 1804              	.L101:
 1805              	.LBB212:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1806              		.loc 4 113 0 discriminator 3
 1807 009e DDB2     		uxtb	r5, r3
 1808 00a0 03F10109 		add	r9, r3, #1
 1809 00a4 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 1810              	.LVL197:
 1811 00a6 9D42     		cmp	r5, r3
 1812 00a8 11DA     		bge	.L95
 1813              	.LBB213:
 114:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, &length_stringsi, sizeof(uint32_t));
 1814              		.loc 4 114 0 discriminator 2
 1815 00aa 7B6A     		ldr	r3, [r7, #36]
 1816 00ac 53F82500 		ldr	r0, [r3, r5, lsl #2]
 1817 00b0 FFF7FEFF 		bl	strlen
 1818              	.LVL198:
 1819 00b4 8046     		mov	r8, r0
 1820              	.LVL199:
 115:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 1821              		.loc 4 115 0 discriminator 2
 1822 00b6 A051     		str	r0, [r4, r6]	@ unaligned
 1823              	.LVL200:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1824              		.loc 4 117 0 discriminator 2
 1825 00b8 7B6A     		ldr	r3, [r7, #36]
 116:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 1826              		.loc 4 116 0 discriminator 2
 1827 00ba 0436     		adds	r6, r6, #4
 1828              	.LVL201:
 117:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_stringsi;
 1829              		.loc 4 117 0 discriminator 2
 1830 00bc 0246     		mov	r2, r0
 1831 00be 53F82510 		ldr	r1, [r3, r5, lsl #2]
 1832 00c2 A019     		adds	r0, r4, r6
 1833              	.LVL202:
 1834 00c4 FFF7FEFF 		bl	memcpy
 1835              	.LVL203:
 118:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 1836              		.loc 4 118 0 discriminator 2
 1837 00c8 4644     		add	r6, r6, r8
 1838              	.LVL204:
 1839              	.LBE213:
 113:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_stringsi = strlen(this->strings[i]);
 1840              		.loc 4 113 0 discriminator 2
 1841 00ca 4B46     		mov	r3, r9
 1842 00cc E7E7     		b	.L101
 1843              	.LVL205:
 1844              	.L95:
 1845              	.LBE212:
 121:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 1846              		.loc 4 121 0
 1847 00ce 3046     		mov	r0, r6
 1848 00d0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1849              		.cfi_endproc
 1850              	.LFE1409:
 1851              		.cantunwind
 1852              		.fnend
 1854              		.section	.text._ZNK14rosserial_msgs3Log9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs3Log9seri
 1855              		.align	1
 1856              		.weak	_ZNK14rosserial_msgs3Log9serializeEPh
 1857              		.syntax unified
 1858              		.thumb
 1859              		.thumb_func
 1860              		.fpu softvfp
 1862              	_ZNK14rosserial_msgs3Log9serializeEPh:
 1863              		.fnstart
 1864              	.LFB1395:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1865              		.loc 3 29 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL206:
 1870 0000 70B5     		push	{r4, r5, r6, lr}
 1871              	.LCFI9:
 1872              		.cfi_def_cfa_offset 16
 1873              		.cfi_offset 4, -16
 1874              		.cfi_offset 5, -12
 1875              		.cfi_offset 6, -8
 1876              		.cfi_offset 14, -4
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1877              		.loc 3 32 0
 1878 0002 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1879              		.loc 3 29 0
 1880 0004 0646     		mov	r6, r0
  32:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += sizeof(this->level);
 1881              		.loc 3 32 0
 1882 0006 0B70     		strb	r3, [r1]
 1883              	.LVL207:
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1884              		.loc 3 34 0
 1885 0008 8068     		ldr	r0, [r0, #8]
 1886              	.LVL208:
  29:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 1887              		.loc 3 29 0
 1888 000a 0D46     		mov	r5, r1
  34:./lib/ros_lib/rosserial_msgs/Log.h ****       memcpy(outbuffer + offset, &length_msg, sizeof(uint32_t));
 1889              		.loc 3 34 0
 1890 000c FFF7FEFF 		bl	strlen
 1891              	.LVL209:
 1892 0010 0446     		mov	r4, r0
 1893              	.LVL210:
  35:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += 4;
 1894              		.loc 3 35 0
 1895 0012 C5F80100 		str	r0, [r5, #1]	@ unaligned
 1896              	.LVL211:
  37:./lib/ros_lib/rosserial_msgs/Log.h ****       offset += length_msg;
 1897              		.loc 3 37 0
 1898 0016 0246     		mov	r2, r0
 1899 0018 B168     		ldr	r1, [r6, #8]
 1900 001a 681D     		adds	r0, r5, #5
 1901              	.LVL212:
 1902 001c FFF7FEFF 		bl	memcpy
 1903              	.LVL213:
  40:./lib/ros_lib/rosserial_msgs/Log.h **** 
 1904              		.loc 3 40 0
 1905 0020 601D     		adds	r0, r4, #5
 1906              	.LVL214:
 1907 0022 70BD     		pop	{r4, r5, r6, pc}
 1908              		.cfi_endproc
 1909              	.LFE1395:
 1910              		.cantunwind
 1911              		.fnend
 1913              		.section	.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh,"axG",%progbits,_ZNK14rosserial_msgs9To
 1914              		.align	1
 1915              		.weak	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 1916              		.syntax unified
 1917              		.thumb
 1918              		.thumb_func
 1919              		.fpu softvfp
 1921              	_ZNK14rosserial_msgs9TopicInfo9serializeEPh:
 1922              		.fnstart
 1923              	.LFB1388:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1924              		.loc 2 38 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 0
 1927              		@ frame_needed = 0, uses_anonymous_args = 0
 1928              	.LVL215:
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1929              		.loc 2 41 0
 1930 0000 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1931              		.loc 2 38 0
 1932 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1933              	.LCFI10:
 1934              		.cfi_def_cfa_offset 24
 1935              		.cfi_offset 4, -24
 1936              		.cfi_offset 5, -20
 1937              		.cfi_offset 6, -16
 1938              		.cfi_offset 7, -12
 1939              		.cfi_offset 8, -8
 1940              		.cfi_offset 14, -4
  41:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 1941              		.loc 2 41 0
 1942 0006 0B70     		strb	r3, [r1]
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1943              		.loc 2 42 0
 1944 0008 8388     		ldrh	r3, [r0, #4]
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1945              		.loc 2 38 0
 1946 000a 0546     		mov	r5, r0
  42:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->topic_id);
 1947              		.loc 2 42 0
 1948 000c 1B0A     		lsrs	r3, r3, #8
 1949 000e 4B70     		strb	r3, [r1, #1]
 1950              	.LVL216:
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1951              		.loc 2 44 0
 1952 0010 8068     		ldr	r0, [r0, #8]
 1953              	.LVL217:
  38:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 1954              		.loc 2 38 0
 1955 0012 0C46     		mov	r4, r1
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1956              		.loc 2 44 0
 1957 0014 FFF7FEFF 		bl	strlen
 1958              	.LVL218:
  45:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1959              		.loc 2 45 0
 1960 0018 C4F80200 		str	r0, [r4, #2]	@ unaligned
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1961              		.loc 2 47 0
 1962 001c 0246     		mov	r2, r0
 1963 001e A968     		ldr	r1, [r5, #8]
  44:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_topic_name, sizeof(uint32_t));
 1964              		.loc 2 44 0
 1965 0020 0746     		mov	r7, r0
 1966              	.LVL219:
  47:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_topic_name;
 1967              		.loc 2 47 0
 1968 0022 A01D     		adds	r0, r4, #6
 1969              	.LVL220:
 1970 0024 FFF7FEFF 		bl	memcpy
 1971              	.LVL221:
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1972              		.loc 2 49 0
 1973 0028 E868     		ldr	r0, [r5, #12]
 1974 002a FFF7FEFF 		bl	strlen
 1975              	.LVL222:
  48:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_message_type = strlen(this->message_type);
 1976              		.loc 2 48 0
 1977 002e 07F10608 		add	r8, r7, #6
 1978              	.LVL223:
  50:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 1979              		.loc 2 50 0
 1980 0032 44F80800 		str	r0, [r4, r8]	@ unaligned
  51:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->message_type, length_message_type);
 1981              		.loc 2 51 0
 1982 0036 0A37     		adds	r7, r7, #10
 1983              	.LVL224:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1984              		.loc 2 52 0
 1985 0038 0246     		mov	r2, r0
 1986 003a E968     		ldr	r1, [r5, #12]
  49:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_message_type, sizeof(uint32_t));
 1987              		.loc 2 49 0
 1988 003c 0646     		mov	r6, r0
 1989              	.LVL225:
  52:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_message_type;
 1990              		.loc 2 52 0
 1991 003e E019     		adds	r0, r4, r7
 1992              	.LVL226:
 1993 0040 FFF7FEFF 		bl	memcpy
 1994              	.LVL227:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 1995              		.loc 2 54 0
 1996 0044 2869     		ldr	r0, [r5, #16]
 1997 0046 FFF7FEFF 		bl	strlen
 1998              	.LVL228:
  53:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       uint32_t length_md5sum = strlen(this->md5sum);
 1999              		.loc 2 53 0
 2000 004a 3E44     		add	r6, r6, r7
 2001              	.LVL229:
  54:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, &length_md5sum, sizeof(uint32_t));
 2002              		.loc 2 54 0
 2003 004c 0746     		mov	r7, r0
 2004              	.LVL230:
  55:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += 4;
 2005              		.loc 2 55 0
 2006 004e A051     		str	r0, [r4, r6]	@ unaligned
 2007              	.LVL231:
  56:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 2008              		.loc 2 56 0
 2009 0050 0436     		adds	r6, r6, #4
 2010              	.LVL232:
  57:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += length_md5sum;
 2011              		.loc 2 57 0
 2012 0052 0246     		mov	r2, r0
 2013 0054 2969     		ldr	r1, [r5, #16]
 2014 0056 A019     		adds	r0, r4, r6
 2015              	.LVL233:
 2016 0058 FFF7FEFF 		bl	memcpy
 2017              	.LVL234:
  63:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 2018              		.loc 2 63 0
 2019 005c 6B69     		ldr	r3, [r5, #20]
  58:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       union {
 2020              		.loc 2 58 0
 2021 005e 3E44     		add	r6, r6, r7
 2022              	.LVL235:
  64:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 2023              		.loc 2 64 0
 2024 0060 A355     		strb	r3, [r4, r6]
  65:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 2025              		.loc 2 65 0
 2026 0062 1A0A     		lsrs	r2, r3, #8
 2027 0064 3444     		add	r4, r4, r6
 2028              	.LVL236:
 2029 0066 6270     		strb	r2, [r4, #1]
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2030              		.loc 2 66 0
 2031 0068 1A0C     		lsrs	r2, r3, #16
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2032              		.loc 2 67 0
 2033 006a 1B0E     		lsrs	r3, r3, #24
 2034              	.LVL237:
  66:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 2035              		.loc 2 66 0
 2036 006c A270     		strb	r2, [r4, #2]
  67:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****       offset += sizeof(this->buffer_size);
 2037              		.loc 2 67 0
 2038 006e E370     		strb	r3, [r4, #3]
 2039              	.LVL238:
  70:./lib/ros_lib/rosserial_msgs/TopicInfo.h **** 
 2040              		.loc 2 70 0
 2041 0070 301D     		adds	r0, r6, #4
 2042              	.LVL239:
 2043 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2044              		.cfi_endproc
 2045              	.LFE1388:
 2046              		.cantunwind
 2047              		.fnend
 2049              		.section	.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh,"axG",%progbits,_ZN14ross
 2050              		.align	1
 2051              		.weak	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2055              		.fpu softvfp
 2057              	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:
 2058              		.fnstart
 2059              	.LFB1410:
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2060              		.loc 4 123 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064              	.LVL240:
 2065 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2066              	.LCFI11:
 2067              		.cfi_def_cfa_offset 24
 2068              		.cfi_offset 3, -24
 2069              		.cfi_offset 4, -20
 2070              		.cfi_offset 5, -16
 2071              		.cfi_offset 6, -12
 2072              		.cfi_offset 7, -8
 2073              		.cfi_offset 14, -4
 126:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(ints_lengthT > ints_length)
 2074              		.loc 4 126 0
 2075 0002 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 2076              	.LVL241:
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2077              		.loc 4 127 0
 2078 0004 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2079              		.loc 4 123 0
 2080 0006 0446     		mov	r4, r0
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2081              		.loc 4 127 0
 2082 0008 9E42     		cmp	r6, r3
 123:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 2083              		.loc 4 123 0
 2084 000a 0D46     		mov	r5, r1
 127:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 2085              		.loc 4 127 0
 2086 000c 04DD     		ble	.L105
 128:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2087              		.loc 4 128 0
 2088 000e B100     		lsls	r1, r6, #2
 2089              	.LVL242:
 2090 0010 C068     		ldr	r0, [r0, #12]
 2091              	.LVL243:
 2092 0012 FFF7FEFF 		bl	realloc
 2093              	.LVL244:
 2094 0016 E060     		str	r0, [r4, #12]
 2095              	.L105:
 2096              	.LVL245:
 130:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < ints_length; i++){
 2097              		.loc 4 130 0
 2098 0018 0021     		movs	r1, #0
 2099 001a 2671     		strb	r6, [r4, #4]
 2100              	.LVL246:
 2101 001c 2A1D     		adds	r2, r5, #4
 2102              	.LVL247:
 2103              	.L107:
 2104              	.LBB214:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2105              		.loc 4 131 0 discriminator 3
 2106 001e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2107 0020 481C     		adds	r0, r1, #1
 2108 0022 C9B2     		uxtb	r1, r1
 2109 0024 9942     		cmp	r1, r3
 2110 0026 A2EB0506 		sub	r6, r2, r5
 2111              	.LVL248:
 2112 002a 02F10402 		add	r2, r2, #4
 2113 002e 13DA     		bge	.L106
 2114              	.LVL249:
 2115              	.LBB215:
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2116              		.loc 4 139 0 discriminator 2
 2117 0030 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 138:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2118              		.loc 4 138 0 discriminator 2
 2119 0034 12F8036C 		ldrb	r6, [r2, #-3]	@ zero_extendqisi2
 2120              	.LVL250:
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2121              		.loc 4 139 0 discriminator 2
 2122 0038 1B04     		lsls	r3, r3, #16
 2123 003a 43EA0623 		orr	r3, r3, r6, lsl #8
 137:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2124              		.loc 4 137 0 discriminator 2
 2125 003e 12F8046C 		ldrb	r6, [r2, #-4]	@ zero_extendqisi2
 139:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2126              		.loc 4 139 0 discriminator 2
 2127 0042 3343     		orrs	r3, r3, r6
 140:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_ints = u_st_ints.real;
 2128              		.loc 4 140 0 discriminator 2
 2129 0044 12F8016C 		ldrb	r6, [r2, #-1]	@ zero_extendqisi2
 2130 0048 43EA0663 		orr	r3, r3, r6, lsl #24
 2131              	.LVL251:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2132              		.loc 4 143 0 discriminator 2
 2133 004c E668     		ldr	r6, [r4, #12]
 141:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_ints);
 2134              		.loc 4 141 0 discriminator 2
 2135 004e A360     		str	r3, [r4, #8]
 2136              	.LVL252:
 143:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2137              		.loc 4 143 0 discriminator 2
 2138 0050 46F82130 		str	r3, [r6, r1, lsl #2]	@ unaligned
 2139              	.LVL253:
 2140              	.LBE215:
 131:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2141              		.loc 4 131 0 discriminator 2
 2142 0054 0146     		mov	r1, r0
 2143 0056 E2E7     		b	.L107
 2144              	.LVL254:
 2145              	.L106:
 2146              	.LBE214:
 145:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(floats_lengthT > floats_length)
 2147              		.loc 4 145 0
 2148 0058 AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2149              	.LVL255:
 146:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 2150              		.loc 4 146 0
 2151 005a 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2152 005c 9F42     		cmp	r7, r3
 2153 005e 04DD     		ble	.L108
 147:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2154              		.loc 4 147 0
 2155 0060 B900     		lsls	r1, r7, #2
 2156 0062 A069     		ldr	r0, [r4, #24]
 2157 0064 FFF7FEFF 		bl	realloc
 2158              	.LVL256:
 2159 0068 A061     		str	r0, [r4, #24]
 2160              	.L108:
 2161              	.LVL257:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2162              		.loc 4 149 0
 2163 006a 0022     		movs	r2, #0
 148:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       floats_length = floats_lengthT;
 2164              		.loc 4 148 0
 2165 006c 331D     		adds	r3, r6, #4
 2166              	.LVL258:
 149:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < floats_length; i++){
 2167              		.loc 4 149 0
 2168 006e 2774     		strb	r7, [r4, #16]
 2169              	.LVL259:
 2170 0070 2B44     		add	r3, r3, r5
 2171              	.LVL260:
 2172              	.L110:
 2173              	.LBB216:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2174              		.loc 4 150 0 discriminator 3
 2175 0072 D1B2     		uxtb	r1, r2
 2176 0074 501C     		adds	r0, r2, #1
 2177 0076 227C     		ldrb	r2, [r4, #16]	@ zero_extendqisi2
 2178 0078 5E1B     		subs	r6, r3, r5
 2179              	.LVL261:
 2180 007a 9142     		cmp	r1, r2
 2181 007c 03F10403 		add	r3, r3, #4
 2182 0080 13DA     		bge	.L109
 2183              	.LVL262:
 2184              	.LBB217:
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2185              		.loc 4 158 0 discriminator 2
 2186 0082 13F8022C 		ldrb	r2, [r3, #-2]	@ zero_extendqisi2
 2187              	.LVL263:
 157:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2188              		.loc 4 157 0 discriminator 2
 2189 0086 13F8036C 		ldrb	r6, [r3, #-3]	@ zero_extendqisi2
 2190              	.LVL264:
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2191              		.loc 4 158 0 discriminator 2
 2192 008a 1204     		lsls	r2, r2, #16
 2193              	.LVL265:
 2194 008c 42EA0622 		orr	r2, r2, r6, lsl #8
 156:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2195              		.loc 4 156 0 discriminator 2
 2196 0090 13F8046C 		ldrb	r6, [r3, #-4]	@ zero_extendqisi2
 2197              	.LVL266:
 158:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2198              		.loc 4 158 0 discriminator 2
 2199 0094 3243     		orrs	r2, r2, r6
 159:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_floats = u_st_floats.real;
 2200              		.loc 4 159 0 discriminator 2
 2201 0096 13F8016C 		ldrb	r6, [r3, #-1]	@ zero_extendqisi2
 2202 009a 42EA0662 		orr	r2, r2, r6, lsl #24
 2203              	.LVL267:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2204              		.loc 4 162 0 discriminator 2
 2205 009e A669     		ldr	r6, [r4, #24]
 160:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += sizeof(this->st_floats);
 2206              		.loc 4 160 0 discriminator 2
 2207 00a0 6261     		str	r2, [r4, #20]	@ float
 2208              	.LVL268:
 162:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2209              		.loc 4 162 0 discriminator 2
 2210 00a2 46F82120 		str	r2, [r6, r1, lsl #2]	@ unaligned
 2211              	.LVL269:
 2212              	.LBE217:
 150:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       union {
 2213              		.loc 4 150 0 discriminator 2
 2214 00a6 0246     		mov	r2, r0
 2215 00a8 E3E7     		b	.L110
 2216              	.LVL270:
 2217              	.L109:
 2218              	.LBE216:
 164:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       if(strings_lengthT > strings_length)
 2219              		.loc 4 164 0
 2220 00aa AF5D     		ldrb	r7, [r5, r6]	@ zero_extendqisi2
 2221              	.LVL271:
 165:./lib/ros_lib/rosserial_msgs/RequestParam.h ****         this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 2222              		.loc 4 165 0
 2223 00ac 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2224 00ae 9F42     		cmp	r7, r3
 2225 00b0 04DD     		ble	.L111
 166:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 3;
 2226              		.loc 4 166 0
 2227 00b2 B900     		lsls	r1, r7, #2
 2228 00b4 606A     		ldr	r0, [r4, #36]
 2229 00b6 FFF7FEFF 		bl	realloc
 2230              	.LVL272:
 2231 00ba 6062     		str	r0, [r4, #36]
 2232              	.L111:
 168:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for( uint8_t i = 0; i < strings_length; i++){
 2233              		.loc 4 168 0
 2234 00bc 0021     		movs	r1, #0
 2235 00be 2777     		strb	r7, [r4, #28]
 2236              	.LBB218:
 2237              	.LBB219:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2238              		.loc 4 176 0
 2239 00c0 0F46     		mov	r7, r1
 2240              	.LVL273:
 2241              	.LBE219:
 2242              	.LBE218:
 167:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       strings_length = strings_lengthT;
 2243              		.loc 4 167 0
 2244 00c2 301D     		adds	r0, r6, #4
 2245              	.LVL274:
 2246              	.L115:
 2247              	.LBB222:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2248              		.loc 4 169 0 discriminator 1
 2249 00c4 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 2250 00c6 CEB2     		uxtb	r6, r1
 2251 00c8 9E42     		cmp	r6, r3
 2252 00ca 19DA     		bge	.L104
 2253              	.LBB221:
 171:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += 4;
 2254              		.loc 4 171 0
 2255 00cc 55F800E0 		ldr	lr, [r5, r0]	@ unaligned
 2256              	.LVL275:
 172:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 2257              		.loc 4 172 0
 2258 00d0 031D     		adds	r3, r0, #4
 2259              	.LVL276:
 2260 00d2 EA18     		adds	r2, r5, r3
 2261              	.LBB220:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2262              		.loc 4 173 0
 2263 00d4 0EEB0300 		add	r0, lr, r3
 2264              	.LVL277:
 2265              	.L114:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2266              		.loc 4 173 0 is_stmt 0 discriminator 3
 2267 00d8 A2EB050E 		sub	lr, r2, r5
 2268              	.LVL278:
 2269 00dc 7045     		cmp	r0, lr
 2270 00de 04D9     		bls	.L113
 174:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2271              		.loc 4 174 0 is_stmt 1 discriminator 2
 2272 00e0 12F801EB 		ldrb	lr, [r2], #1	@ zero_extendqisi2
 2273              	.LVL279:
 2274 00e4 02F802EC 		strb	lr, [r2, #-2]
 2275              	.LVL280:
 173:./lib/ros_lib/rosserial_msgs/RequestParam.h ****           inbuffer[k-1]=inbuffer[k];
 2276              		.loc 4 173 0 discriminator 2
 2277 00e8 F6E7     		b	.L114
 2278              	.LVL281:
 2279              	.L113:
 2280              	.LBE220:
 176:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       this->st_strings = (char *)(inbuffer + offset-1);
 2281              		.loc 4 176 0 discriminator 2
 2282 00ea 2A18     		adds	r2, r5, r0
 2283 00ec 02F8017C 		strb	r7, [r2, #-1]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2284              		.loc 4 177 0 discriminator 2
 2285 00f0 013B     		subs	r3, r3, #1
 2286              	.LVL282:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2287              		.loc 4 179 0 discriminator 2
 2288 00f2 626A     		ldr	r2, [r4, #36]
 177:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       offset += length_st_strings;
 2289              		.loc 4 177 0 discriminator 2
 2290 00f4 2B44     		add	r3, r3, r5
 2291              	.LVL283:
 2292 00f6 2362     		str	r3, [r4, #32]
 2293 00f8 0131     		adds	r1, r1, #1
 2294              	.LVL284:
 179:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       }
 2295              		.loc 4 179 0 discriminator 2
 2296 00fa 42F82630 		str	r3, [r2, r6, lsl #2]	@ unaligned
 2297              	.LVL285:
 2298              	.LBE221:
 169:./lib/ros_lib/rosserial_msgs/RequestParam.h ****       uint32_t length_st_strings;
 2299              		.loc 4 169 0 discriminator 2
 2300 00fe E1E7     		b	.L115
 2301              	.LVL286:
 2302              	.L104:
 2303              	.LBE222:
 182:./lib/ros_lib/rosserial_msgs/RequestParam.h **** 
 2304              		.loc 4 182 0
 2305 0100 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2306              		.cfi_endproc
 2307              	.LFE1410:
 2308              		.cantunwind
 2309              		.fnend
 2311              		.section	.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh,"axG",%progbits,_ZN8std_msgs16MultiA
 2312              		.align	1
 2313              		.weak	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2317              		.fpu softvfp
 2319              	_ZN8std_msgs16MultiArrayLayout11deserializeEPh:
 2320              		.fnstart
 2321              	.LFB1496:
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2322              		.loc 6 45 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              	.LVL287:
 2327 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2328              	.LCFI12:
 2329              		.cfi_def_cfa_offset 32
 2330              		.cfi_offset 4, -32
 2331              		.cfi_offset 5, -28
 2332              		.cfi_offset 6, -24
 2333              		.cfi_offset 7, -20
 2334              		.cfi_offset 8, -16
 2335              		.cfi_offset 9, -12
 2336              		.cfi_offset 10, -8
 2337              		.cfi_offset 14, -4
  48:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       if(dim_lengthT > dim_length)
 2338              		.loc 6 48 0
 2339 0004 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 2340              	.LVL288:
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2341              		.loc 6 49 0
 2342 0006 0379     		ldrb	r3, [r0, #4]	@ zero_extendqisi2
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2343              		.loc 6 45 0
 2344 0008 0446     		mov	r4, r0
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2345              		.loc 6 49 0
 2346 000a 9D42     		cmp	r5, r3
  45:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 2347              		.loc 6 45 0
 2348 000c 0F46     		mov	r7, r1
  49:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         this->dim = (std_msgs::MultiArrayDimension*)realloc(this->dim, dim_lengthT * sizeof(std_msg
 2349              		.loc 6 49 0
 2350 000e 04DD     		ble	.L118
  50:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += 3;
 2351              		.loc 6 50 0
 2352 0010 2901     		lsls	r1, r5, #4
 2353              	.LVL289:
 2354 0012 8069     		ldr	r0, [r0, #24]
 2355              	.LVL290:
 2356 0014 FFF7FEFF 		bl	realloc
 2357              	.LVL291:
 2358 0018 A061     		str	r0, [r4, #24]
 2359              	.L118:
 2360              	.LVL292:
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2361              		.loc 6 52 0
 2362 001a 0023     		movs	r3, #0
  51:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       dim_length = dim_lengthT;
 2363              		.loc 6 51 0
 2364 001c 0426     		movs	r6, #4
  52:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       for( uint8_t i = 0; i < dim_length; i++){
 2365              		.loc 6 52 0
 2366 001e 2571     		strb	r5, [r4, #4]
 2367              	.LVL293:
 2368              	.LBB223:
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2369              		.loc 6 54 0
 2370 0020 04F10808 		add	r8, r4, #8
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2371              		.loc 6 55 0
 2372 0024 04F1180A 		add	r10, r4, #24
 2373              	.LVL294:
 2374              	.L121:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2375              		.loc 6 53 0 discriminator 3
 2376 0028 DDB2     		uxtb	r5, r3
 2377 002a 03F10109 		add	r9, r3, #1
 2378 002e 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 2379              	.LVL295:
 2380 0030 B919     		adds	r1, r7, r6
 2381 0032 9D42     		cmp	r5, r3
 2382 0034 0FDA     		bge	.L119
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2383              		.loc 6 54 0 discriminator 2
 2384 0036 4046     		mov	r0, r8
 2385 0038 FFF7FEFF 		bl	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 2386              	.LVL296:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2387              		.loc 6 55 0 discriminator 2
 2388 003c 4246     		mov	r2, r8
 2389 003e A369     		ldr	r3, [r4, #24]
  54:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****         memcpy( &(this->dim[i]), &(this->st_dim), sizeof(std_msgs::MultiArrayDimension));
 2390              		.loc 6 54 0 discriminator 2
 2391 0040 0644     		add	r6, r6, r0
 2392              	.LVL297:
  55:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       }
 2393              		.loc 6 55 0 discriminator 2
 2394 0042 03EB0513 		add	r3, r3, r5, lsl #4
 2395              	.L120:
 2396 0046 52F8041B 		ldr	r1, [r2], #4	@ unaligned
 2397 004a 5245     		cmp	r2, r10
 2398 004c 43F8041B 		str	r1, [r3], #4	@ unaligned
 2399 0050 F9D1     		bne	.L120
 2400              	.LVL298:
  53:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += this->st_dim.deserialize(inbuffer + offset);
 2401              		.loc 6 53 0 discriminator 2
 2402 0052 4B46     		mov	r3, r9
 2403 0054 E8E7     		b	.L121
 2404              	.LVL299:
 2405              	.L119:
 2406              	.LBE223:
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2407              		.loc 6 57 0
 2408 0056 BB5D     		ldrb	r3, [r7, r6]	@ zero_extendqisi2
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2409              		.loc 6 63 0
 2410 0058 301D     		adds	r0, r6, #4
  57:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2411              		.loc 6 57 0
 2412 005a E361     		str	r3, [r4, #28]
  58:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2413              		.loc 6 58 0
 2414 005c 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 2415 005e 43EA0223 		orr	r3, r3, r2, lsl #8
 2416 0062 E361     		str	r3, [r4, #28]
  59:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       this->data_offset |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2417              		.loc 6 59 0
 2418 0064 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 2419 0066 43EA0243 		orr	r3, r3, r2, lsl #16
 2420 006a E361     		str	r3, [r4, #28]
  60:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****       offset += sizeof(this->data_offset);
 2421              		.loc 6 60 0
 2422 006c CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 2423 006e 43EA0263 		orr	r3, r3, r2, lsl #24
 2424 0072 E361     		str	r3, [r4, #28]
 2425              	.LVL300:
  63:./lib/ros_lib/std_msgs/MultiArrayLayout.h **** 
 2426              		.loc 6 63 0
 2427 0074 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2428              		.cfi_endproc
 2429              	.LFE1496:
 2430              		.cantunwind
 2431              		.fnend
 2433              		.section	.text._ZN8std_msgs17Float32MultiArray11deserializeEPh,"axG",%progbits,_ZN8std_msgs17Float
 2434              		.align	1
 2435              		.weak	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 2436              		.syntax unified
 2437              		.thumb
 2438              		.thumb_func
 2439              		.fpu softvfp
 2441              	_ZN8std_msgs17Float32MultiArray11deserializeEPh:
 2442              		.fnstart
 2443              	.LFB1503:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2444              		.loc 7 50 0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 0, uses_anonymous_args = 0
 2448              	.LVL301:
 2449 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2450              	.LCFI13:
 2451              		.cfi_def_cfa_offset 24
 2452              		.cfi_offset 3, -24
 2453              		.cfi_offset 4, -20
 2454              		.cfi_offset 5, -16
 2455              		.cfi_offset 6, -12
 2456              		.cfi_offset 7, -8
 2457              		.cfi_offset 14, -4
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2458              		.loc 7 50 0
 2459 0002 0446     		mov	r4, r0
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2460              		.loc 7 53 0
 2461 0004 0430     		adds	r0, r0, #4
 2462              	.LVL302:
  50:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 2463              		.loc 7 50 0
 2464 0006 0D46     		mov	r5, r1
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2465              		.loc 7 53 0
 2466 0008 FFF7FEFF 		bl	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 2467              	.LVL303:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2468              		.loc 7 55 0
 2469 000c 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
  54:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       if(data_lengthT > data_length)
 2470              		.loc 7 54 0
 2471 0010 2F5C     		ldrb	r7, [r5, r0]	@ zero_extendqisi2
  53:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       uint8_t data_lengthT = *(inbuffer + offset++);
 2472              		.loc 7 53 0
 2473 0012 0646     		mov	r6, r0
 2474              	.LVL304:
  55:./lib/ros_lib/std_msgs/Float32MultiArray.h ****         this->data = (float*)realloc(this->data, data_lengthT * sizeof(float));
 2475              		.loc 7 55 0
 2476 0014 9F42     		cmp	r7, r3
 2477 0016 04DD     		ble	.L124
  56:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += 3;
 2478              		.loc 7 56 0
 2479 0018 B900     		lsls	r1, r7, #2
 2480 001a E06A     		ldr	r0, [r4, #44]
 2481              	.LVL305:
 2482 001c FFF7FEFF 		bl	realloc
 2483              	.LVL306:
 2484 0020 E062     		str	r0, [r4, #44]
 2485              	.L124:
 2486              	.LVL307:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2487              		.loc 7 58 0
 2488 0022 0022     		movs	r2, #0
  57:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       data_length = data_lengthT;
 2489              		.loc 7 57 0
 2490 0024 331D     		adds	r3, r6, #4
 2491              	.LVL308:
  58:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       for( uint8_t i = 0; i < data_length; i++){
 2492              		.loc 7 58 0
 2493 0026 84F82470 		strb	r7, [r4, #36]
 2494              	.LVL309:
 2495 002a 2B44     		add	r3, r3, r5
 2496              	.LVL310:
 2497              	.L126:
 2498              	.LBB224:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2499              		.loc 7 59 0 discriminator 3
 2500 002c D1B2     		uxtb	r1, r2
 2501 002e 561C     		adds	r6, r2, #1
 2502 0030 94F82420 		ldrb	r2, [r4, #36]	@ zero_extendqisi2
 2503 0034 581B     		subs	r0, r3, r5
 2504              	.LVL311:
 2505 0036 9142     		cmp	r1, r2
 2506 0038 03F10403 		add	r3, r3, #4
 2507 003c 13DA     		bge	.L123
 2508              	.LVL312:
 2509              	.LBB225:
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2510              		.loc 7 67 0 discriminator 2
 2511 003e 13F8022C 		ldrb	r2, [r3, #-2]	@ zero_extendqisi2
 2512              	.LVL313:
  66:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 2513              		.loc 7 66 0 discriminator 2
 2514 0042 13F8030C 		ldrb	r0, [r3, #-3]	@ zero_extendqisi2
 2515              	.LVL314:
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2516              		.loc 7 67 0 discriminator 2
 2517 0046 1204     		lsls	r2, r2, #16
 2518              	.LVL315:
 2519 0048 42EA0022 		orr	r2, r2, r0, lsl #8
  65:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 2520              		.loc 7 65 0 discriminator 2
 2521 004c 13F8040C 		ldrb	r0, [r3, #-4]	@ zero_extendqisi2
 2522              	.LVL316:
  67:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       u_st_data.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 2523              		.loc 7 67 0 discriminator 2
 2524 0050 0243     		orrs	r2, r2, r0
  68:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       this->st_data = u_st_data.real;
 2525              		.loc 7 68 0 discriminator 2
 2526 0052 13F8010C 		ldrb	r0, [r3, #-1]	@ zero_extendqisi2
 2527 0056 42EA0062 		orr	r2, r2, r0, lsl #24
 2528              	.LVL317:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2529              		.loc 7 71 0 discriminator 2
 2530 005a E06A     		ldr	r0, [r4, #44]
  69:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       offset += sizeof(this->st_data);
 2531              		.loc 7 69 0 discriminator 2
 2532 005c A262     		str	r2, [r4, #40]	@ float
 2533              	.LVL318:
  71:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       }
 2534              		.loc 7 71 0 discriminator 2
 2535 005e 40F82120 		str	r2, [r0, r1, lsl #2]	@ unaligned
 2536              	.LVL319:
 2537              	.LBE225:
  59:./lib/ros_lib/std_msgs/Float32MultiArray.h ****       union {
 2538              		.loc 7 59 0 discriminator 2
 2539 0062 3246     		mov	r2, r6
 2540 0064 E2E7     		b	.L126
 2541              	.LVL320:
 2542              	.L123:
 2543              	.LBE224:
  74:./lib/ros_lib/std_msgs/Float32MultiArray.h **** 
 2544              		.loc 7 74 0
 2545 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2546              		.cfi_endproc
 2547              	.LFE1503:
 2548              		.cantunwind
 2549              		.fnend
 2551              		.global	__aeabi_fcmpeq
 2552              		.global	__aeabi_f2d
 2553              		.global	__aeabi_dmul
 2554              		.global	__aeabi_ddiv
 2555              		.global	__aeabi_d2f
 2556              		.global	__aeabi_fadd
 2557              		.global	__aeabi_fmul
 2558              		.global	__aeabi_fsub
 2559              		.global	__aeabi_fdiv
 2560              		.global	__aeabi_fcmpgt
 2561              		.global	__aeabi_fcmplt
 2562              		.text
 2563              		.align	1
 2564              		.global	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 2565              		.syntax unified
 2566              		.thumb
 2567              		.thumb_func
 2568              		.fpu softvfp
 2570              	_Z8motor_cbRKN12roberto_msgs10MotorStateE:
 2571              		.fnstart
 2572              	.LFB1630:
 2573              		.file 12 "src/main.cpp"
   1:src/main.cpp  **** #include <stm32f10x.h>
   2:src/main.cpp  **** 
   3:src/main.cpp  **** #include <stdio.h>
   4:src/main.cpp  **** #include <math.h>
   5:src/main.cpp  **** 
   6:src/main.cpp  **** #include "motor.h"
   7:src/main.cpp  **** #include "motorSettings.h"
   8:src/main.cpp  **** #include "led.h"
   9:src/main.cpp  **** #include "encoder.h"
  10:src/main.cpp  **** #include "stm32_time.h"
  11:src/main.cpp  **** 
  12:src/main.cpp  **** 
  13:src/main.cpp  **** #include <ros.h>
  14:src/main.cpp  **** #include <std_msgs/MultiArrayDimension.h>
  15:src/main.cpp  **** #include <std_msgs/Float32MultiArray.h>
  16:src/main.cpp  **** #include <std_msgs/Float32.h>
  17:src/main.cpp  **** #include <std_msgs/UInt8.h>
  18:src/main.cpp  **** #include <nav_msgs/Odometry.h>
  19:src/main.cpp  **** #include <sensor_msgs/Joy.h>
  20:src/main.cpp  **** #include <roberto_msgs/MotorState.h>
  21:src/main.cpp  **** #include <tf/tf.h>
  22:src/main.cpp  **** #include <tf/transform_broadcaster.h>
  23:src/main.cpp  **** #include <ros/time.h>
  24:src/main.cpp  **** 
  25:src/main.cpp  **** #define CMDMSGTIMEOUT 500 // ms
  26:src/main.cpp  **** //#define DEBUG
  27:src/main.cpp  **** 
  28:src/main.cpp  **** /* Private function prototypes -----------------------------------------------*/
  29:src/main.cpp  **** #ifdef DEBUG
  30:src/main.cpp  **** extern "C"{
  31:src/main.cpp  ****   extern void initialise_monitor_handles(void);
  32:src/main.cpp  **** }
  33:src/main.cpp  **** #else
  34:src/main.cpp  **** #define printf(...) 
  35:src/main.cpp  **** #endif
  36:src/main.cpp  **** 
  37:src/main.cpp  **** 
  38:src/main.cpp  **** 
  39:src/main.cpp  **** motor *servo_left;
  40:src/main.cpp  **** motor *servo_right;
  41:src/main.cpp  **** motor *front_right;
  42:src/main.cpp  **** motor *front_left;
  43:src/main.cpp  **** motor *rear_right;
  44:src/main.cpp  **** motor *rear_left;
  45:src/main.cpp  **** 
  46:src/main.cpp  **** float d, L;
  47:src/main.cpp  **** 
  48:src/main.cpp  **** float motorCmd[4];
  49:src/main.cpp  **** float spinAngle = 0.0;
  50:src/main.cpp  **** uint8_t currentMode = roberto_msgs::MotorState::DRIVE_MODE_PIVOT;
  51:src/main.cpp  **** uint32_t lastMsg;
  52:src/main.cpp  **** bool initialized = false;
  53:src/main.cpp  **** 
  54:src/main.cpp  **** ros::NodeHandle nh;
  55:src/main.cpp  **** 
  56:src/main.cpp  **** std_msgs::MultiArrayDimension odomDim;
  57:src/main.cpp  **** std_msgs::MultiArrayDimension debugDim;
  58:src/main.cpp  **** 
  59:src/main.cpp  **** __IO bool shuttingDown = false;
  60:src/main.cpp  **** __IO bool waitForServos = false;
  61:src/main.cpp  **** 
  62:src/main.cpp  **** bool spinningAutonomously = false;
  63:src/main.cpp  **** 
  64:src/main.cpp  **** void motor_cb( const roberto_msgs::MotorState& cmd_msg){
 2574              		.loc 12 64 0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 8
 2577              		@ frame_needed = 0, uses_anonymous_args = 0
 2578              	.LVL321:
 2579 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2580              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2581              		.pad #12
 2582              	.LCFI14:
 2583              		.cfi_def_cfa_offset 48
 2584              		.cfi_offset 4, -36
 2585              		.cfi_offset 5, -32
 2586              		.cfi_offset 6, -28
 2587              		.cfi_offset 7, -24
 2588              		.cfi_offset 8, -20
 2589              		.cfi_offset 9, -16
 2590              		.cfi_offset 10, -12
 2591              		.cfi_offset 11, -8
 2592              		.cfi_offset 14, -4
  65:src/main.cpp  ****   if(!initialized)
 2593              		.loc 12 65 0
 2594 0004 924C     		ldr	r4, .L159+16
  64:src/main.cpp  ****   if(!initialized)
 2595              		.loc 12 64 0
 2596 0006 0746     		mov	r7, r0
 2597              		.loc 12 65 0
 2598 0008 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2599 000a 002B     		cmp	r3, #0
 2600 000c 00F0B680 		beq	.L127
 2601              	.LVL322:
 2602              	.LBB236:
 2603              	.LBB237:
  66:src/main.cpp  ****     return;
  67:src/main.cpp  ****   lastMsg = millis();
 2604              		.loc 12 67 0
 2605 0010 FFF7FEFF 		bl	millis
 2606              	.LVL323:
  68:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
  69:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_AUTO){
  70:src/main.cpp  **** 
  71:src/main.cpp  ****   }
  72:src/main.cpp  **** 
  73:src/main.cpp  ****   if(currentMode != intMode){
 2607              		.loc 12 73 0
 2608 0014 8F4B     		ldr	r3, .L159+20
  68:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 2609              		.loc 12 68 0
 2610 0016 97F82880 		ldrb	r8, [r7, #40]	@ zero_extendqisi2
 2611              	.LVL324:
 2612              		.loc 12 73 0
 2613 001a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2614 001c 0093     		str	r3, [sp]
 2615 001e 4245     		cmp	r2, r8
  74:src/main.cpp  ****     waitForServos = true;
 2616              		.loc 12 74 0
 2617 0020 1CBF     		itt	ne
 2618 0022 0123     		movne	r3, #1
 2619 0024 2372     		strbne	r3, [r4, #8]
 2620              	.LBB238:
  75:src/main.cpp  ****   }
  76:src/main.cpp  **** 
  77:src/main.cpp  ****   if(intMode == cmd_msg.DRIVE_MODE_PIVOT){
 2621              		.loc 12 77 0
 2622 0026 B8F1010F 		cmp	r8, #1
 2623              	.LBE238:
  67:src/main.cpp  ****   uint8_t intMode = cmd_msg.mode;
 2624              		.loc 12 67 0
 2625 002a 6060     		str	r0, [r4, #4]
 2626              	.LBB251:
 2627              		.loc 12 77 0
 2628 002c 40F0CA80 		bne	.L130
 2629              	.LVL325:
 2630              	.LBB239:
 2631              	.LBB240:
  78:src/main.cpp  ****     float speedMult[2] = {1,1};
  79:src/main.cpp  ****     float angle[2] = {0, 0};
  80:src/main.cpp  ****     if (cmd_msg.heading_angle != 0){
 2632              		.loc 12 80 0
 2633 0030 D7F81890 		ldr	r9, [r7, #24]	@ float
 2634 0034 0021     		movs	r1, #0
 2635 0036 4846     		mov	r0, r9
 2636 0038 FFF7FEFF 		bl	__aeabi_fcmpeq
 2637              	.LVL326:
 2638 003c 0028     		cmp	r0, #0
 2639 003e 40F0A480 		bne	.L155
 2640              	.LBB241:
  81:src/main.cpp  ****       float R = 0.05/sin(cmd_msg.heading_angle*M_PI/360);
 2641              		.loc 12 81 0
 2642 0042 4846     		mov	r0, r9
 2643 0044 FFF7FEFF 		bl	__aeabi_f2d
 2644              	.LVL327:
 2645 0048 7DA3     		adr	r3, .L159
 2646 004a D3E90023 		ldrd	r2, [r3]
 2647 004e FFF7FEFF 		bl	__aeabi_dmul
 2648              	.LVL328:
 2649 0052 0022     		movs	r2, #0
 2650 0054 804B     		ldr	r3, .L159+24
 2651 0056 FFF7FEFF 		bl	__aeabi_ddiv
 2652              	.LVL329:
 2653 005a FFF7FEFF 		bl	sin
 2654              	.LVL330:
 2655 005e 0246     		mov	r2, r0
 2656 0060 0B46     		mov	r3, r1
 2657 0062 79A1     		adr	r1, .L159+8
 2658 0064 D1E90001 		ldrd	r0, [r1]
 2659 0068 FFF7FEFF 		bl	__aeabi_ddiv
 2660              	.LVL331:
 2661 006c FFF7FEFF 		bl	__aeabi_d2f
 2662              	.LVL332:
  82:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 2663              		.loc 12 82 0
 2664 0070 0146     		mov	r1, r0
 2665 0072 0190     		str	r0, [sp, #4]
 2666 0074 FFF7FEFF 		bl	__aeabi_fadd
 2667              	.LVL333:
 2668 0078 E668     		ldr	r6, [r4, #12]	@ float
 2669 007a 0546     		mov	r5, r0
 2670 007c 4FF07C51 		mov	r1, #1056964608
 2671 0080 3046     		mov	r0, r6
 2672 0082 FFF7FEFF 		bl	__aeabi_fmul
 2673              	.LVL334:
 2674 0086 2169     		ldr	r1, [r4, #16]	@ float
 2675 0088 FFF7FEFF 		bl	__aeabi_fadd
 2676              	.LVL335:
 2677 008c 8346     		mov	fp, r0
 2678 008e 0146     		mov	r1, r0
 2679 0090 2846     		mov	r0, r5
 2680 0092 FFF7FEFF 		bl	__aeabi_fsub
 2681              	.LVL336:
 2682 0096 0146     		mov	r1, r0
 2683 0098 2846     		mov	r0, r5
 2684 009a FFF7FEFF 		bl	__aeabi_fdiv
 2685              	.LVL337:
  83:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 2686              		.loc 12 83 0
 2687 009e 5946     		mov	r1, fp
  82:src/main.cpp  ****       speedMult[0] = (2*R)/(2*R - (L/2 + d));
 2688              		.loc 12 82 0
 2689 00a0 8246     		mov	r10, r0
 2690              	.LVL338:
 2691              		.loc 12 83 0
 2692 00a2 2846     		mov	r0, r5
 2693              	.LVL339:
 2694 00a4 FFF7FEFF 		bl	__aeabi_fadd
 2695              	.LVL340:
 2696 00a8 0146     		mov	r1, r0
 2697 00aa 2846     		mov	r0, r5
 2698 00ac FFF7FEFF 		bl	__aeabi_fdiv
 2699              	.LVL341:
  84:src/main.cpp  ****       //angle[0] = atan(L/(B+R));   // B=L as robot is quadratic
  85:src/main.cpp  ****       angle[0] = cmd_msg.heading_angle + atan(L/(L+R));
 2700              		.loc 12 85 0
 2701 00b0 019B     		ldr	r3, [sp, #4]
 2702 00b2 3146     		mov	r1, r6
  83:src/main.cpp  ****       speedMult[1] = (2*R)/(2*R + (L/2 + d));
 2703              		.loc 12 83 0
 2704 00b4 8346     		mov	fp, r0
 2705              	.LVL342:
 2706              		.loc 12 85 0
 2707 00b6 1846     		mov	r0, r3
 2708              	.LVL343:
 2709 00b8 FFF7FEFF 		bl	__aeabi_fadd
 2710              	.LVL344:
 2711 00bc 0146     		mov	r1, r0
 2712 00be 3046     		mov	r0, r6
 2713 00c0 FFF7FEFF 		bl	__aeabi_fdiv
 2714              	.LVL345:
 2715              	.LBB242:
 2716              	.LBB243:
 2717              		.file 13 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath"
   1:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
   3:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // Copyright (C) 1997-2016 Free Software Foundation, Inc.
   4:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** //
   5:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // any later version.
  10:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  11:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // GNU General Public License for more details.
  15:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  16:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  20:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  25:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** /** @file include/cmath
  26:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *
  29:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  *  as macros in C).
  33:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****  */
  34:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  35:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** //
  36:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** //
  38:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  39:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #pragma GCC system_header
  40:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  41:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #include <bits/c++config.h>
  42:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #include <ext/type_traits.h>
  44:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #include_next <math.h>
  46:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  48:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  49:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #define _GLIBCXX_CMATH 1
  50:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  51:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  52:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef abs
  53:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef div
  54:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef acos
  55:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef asin
  56:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef atan
  57:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef atan2
  58:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef ceil
  59:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef cos
  60:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef cosh
  61:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef exp
  62:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef fabs
  63:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef floor
  64:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef fmod
  65:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef frexp
  66:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef ldexp
  67:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef log
  68:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef log10
  69:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef modf
  70:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef pow
  71:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef sin
  72:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef sinh
  73:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef sqrt
  74:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef tan
  75:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #undef tanh
  76:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  77:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** extern "C++"
  78:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** {
  79:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** {
  81:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  83:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  84:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR double
  85:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   abs(double __x)
  86:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fabs(__x); }
  87:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
  88:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  89:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  90:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  91:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   abs(float __x)
  92:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fabsf(__x); }
  93:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  94:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  95:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   abs(long double __x)
  96:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fabsl(__x); }
  97:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
  98:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
  99:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 100:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 101:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 102:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 103:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     abs(_Tp __x)
 104:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_fabs(__x); }
 105:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 106:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::acos;
 107:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 108:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 109:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 110:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   acos(float __x)
 111:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_acosf(__x); }
 112:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 113:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 114:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   acos(long double __x)
 115:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_acosl(__x); }
 116:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 117:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 118:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 119:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 120:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 121:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 122:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     acos(_Tp __x)
 123:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_acos(__x); }
 124:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 125:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::asin;
 126:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 127:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 128:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 129:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   asin(float __x)
 130:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_asinf(__x); }
 131:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 132:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 133:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   asin(long double __x)
 134:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_asinl(__x); }
 135:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 136:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 137:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 138:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 139:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 140:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 141:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     asin(_Tp __x)
 142:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_asin(__x); }
 143:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 144:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::atan;
 145:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 146:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 147:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 148:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   atan(float __x)
 149:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_atanf(__x); }
 2718              		.loc 13 149 0
 2719 00c4 FFF7FEFF 		bl	atanf
 2720              	.LVL346:
 2721              	.LBE243:
 2722              	.LBE242:
 2723              		.loc 12 85 0
 2724 00c8 0146     		mov	r1, r0
 2725 00ca 4846     		mov	r0, r9
 2726 00cc FFF7FEFF 		bl	__aeabi_fadd
 2727              	.LVL347:
  86:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 2728              		.loc 12 86 0
 2729 00d0 019B     		ldr	r3, [sp, #4]
  85:src/main.cpp  ****       angle[1] = cmd_msg.heading_angle + atan(L/(L-R));
 2730              		.loc 12 85 0
 2731 00d2 0546     		mov	r5, r0
 2732              	.LVL348:
 2733              		.loc 12 86 0
 2734 00d4 1946     		mov	r1, r3
 2735 00d6 3046     		mov	r0, r6
 2736              	.LVL349:
 2737 00d8 FFF7FEFF 		bl	__aeabi_fsub
 2738              	.LVL350:
 2739 00dc 0146     		mov	r1, r0
 2740 00de 3046     		mov	r0, r6
 2741 00e0 FFF7FEFF 		bl	__aeabi_fdiv
 2742              	.LVL351:
 2743              	.LBB244:
 2744              	.LBB245:
 2745              		.loc 13 149 0
 2746 00e4 FFF7FEFF 		bl	atanf
 2747              	.LVL352:
 2748              	.LBE245:
 2749              	.LBE244:
 2750              		.loc 12 86 0
 2751 00e8 0146     		mov	r1, r0
 2752 00ea 4846     		mov	r0, r9
 2753 00ec FFF7FEFF 		bl	__aeabi_fadd
 2754              	.LVL353:
 2755              	.LBE241:
 2756              	.LBE240:
  87:src/main.cpp  ****     }else{
  88:src/main.cpp  ****       angle[0] = 0;
  89:src/main.cpp  ****       angle[1] = 0;
  90:src/main.cpp  ****     }
  91:src/main.cpp  **** 
  92:src/main.cpp  ****     angle[0] = angle[0] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[0] < -MAX_ANGLE_PIVOT? -MAX_AN
 2757              		.loc 12 92 0
 2758 00f0 5A49     		ldr	r1, .L159+28
 2759              	.LBB247:
 2760              	.LBB246:
  86:src/main.cpp  ****     }else{
 2761              		.loc 12 86 0
 2762 00f2 0646     		mov	r6, r0
 2763              	.LVL354:
 2764              	.LBE246:
 2765              	.LBE247:
 2766              		.loc 12 92 0
 2767 00f4 2846     		mov	r0, r5
 2768              	.LVL355:
 2769 00f6 FFF7FEFF 		bl	__aeabi_fcmpgt
 2770              	.LVL356:
 2771 00fa 0028     		cmp	r0, #0
 2772 00fc 41D1     		bne	.L144
 2773 00fe 5849     		ldr	r1, .L159+32
 2774 0100 2846     		mov	r0, r5
 2775 0102 FFF7FEFF 		bl	__aeabi_fcmplt
 2776              	.LVL357:
 2777 0106 0028     		cmp	r0, #0
 2778 0108 3DD1     		bne	.L145
 2779              	.LVL358:
 2780              	.L133:
  93:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 2781              		.loc 12 93 0
 2782 010a 5449     		ldr	r1, .L159+28
 2783 010c 3046     		mov	r0, r6
 2784 010e FFF7FEFF 		bl	__aeabi_fcmpgt
 2785              	.LVL359:
 2786 0112 0028     		cmp	r0, #0
 2787 0114 3FD1     		bne	.L146
 2788 0116 5249     		ldr	r1, .L159+32
 2789 0118 3046     		mov	r0, r6
 2790 011a FFF7FEFF 		bl	__aeabi_fcmplt
 2791              	.LVL360:
 2792 011e 0028     		cmp	r0, #0
 2793 0120 3BD1     		bne	.L147
 2794              	.LVL361:
 2795              	.L131:
  94:src/main.cpp  **** 
  95:src/main.cpp  ****     if(cmd_msg.heading_angle > 0){
 2796              		.loc 12 95 0
 2797 0122 0021     		movs	r1, #0
 2798 0124 4846     		mov	r0, r9
 2799 0126 FFF7FEFF 		bl	__aeabi_fcmpgt
 2800              	.LVL362:
  96:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 2801              		.loc 12 96 0
 2802 012a D4F81490 		ldr	r9, [r4, #20]
 2803 012e 4D49     		ldr	r1, .L159+36
  95:src/main.cpp  ****       servo_left->setReference(angle[0]+135);
 2804              		.loc 12 95 0
 2805 0130 0028     		cmp	r0, #0
 2806 0132 34D0     		beq	.L156
 2807              		.loc 12 96 0
 2808 0134 2846     		mov	r0, r5
 2809 0136 FFF7FEFF 		bl	__aeabi_fadd
 2810              	.LVL363:
 2811 013a D9F80030 		ldr	r3, [r9]
 2812 013e 0146     		mov	r1, r0
 2813 0140 5B69     		ldr	r3, [r3, #20]
 2814 0142 4846     		mov	r0, r9
 2815 0144 9847     		blx	r3
 2816              	.LVL364:
  97:src/main.cpp  ****       servo_right->setReference(-angle[1]+135);
 2817              		.loc 12 97 0
 2818 0146 3146     		mov	r1, r6
 2819 0148 4648     		ldr	r0, .L159+36
 2820 014a FFF7FEFF 		bl	__aeabi_fsub
 2821              	.LVL365:
 2822 014e A569     		ldr	r5, [r4, #24]
 2823 0150 0146     		mov	r1, r0
 2824 0152 2846     		mov	r0, r5
 2825 0154 2B68     		ldr	r3, [r5]
 2826 0156 5B69     		ldr	r3, [r3, #20]
 2827              	.LVL366:
 2828              	.L158:
  98:src/main.cpp  ****     }else{
  99:src/main.cpp  ****       servo_left->setReference(angle[1]+135);
 100:src/main.cpp  ****       servo_right->setReference(-angle[0]+135);
 2829              		.loc 12 100 0
 2830 0158 9847     		blx	r3
 2831              	.LVL367:
 101:src/main.cpp  ****     }
 102:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed*speedMult[0];
 2832              		.loc 12 102 0
 2833 015a 3E6A     		ldr	r6, [r7, #32]	@ float
 2834 015c 5146     		mov	r1, r10
 2835 015e 3046     		mov	r0, r6
 2836 0160 FFF7FEFF 		bl	__aeabi_fmul
 2837              	.LVL368:
 103:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 2838              		.loc 12 103 0
 2839 0164 5946     		mov	r1, fp
 102:src/main.cpp  ****     motorCmd[1] = cmd_msg.speed*speedMult[1];
 2840              		.loc 12 102 0
 2841 0166 0546     		mov	r5, r0
 2842 0168 E061     		str	r0, [r4, #28]	@ float
 2843              		.loc 12 103 0
 2844 016a 3046     		mov	r0, r6
 2845 016c FFF7FEFF 		bl	__aeabi_fmul
 2846              	.LVL369:
 104:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 105:src/main.cpp  ****     motorCmd[3] = cmd_msg.speed*speedMult[0];
 2847              		.loc 12 105 0
 2848 0170 A562     		str	r5, [r4, #40]	@ float
 103:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 2849              		.loc 12 103 0
 2850 0172 2062     		str	r0, [r4, #32]	@ float
 104:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed*speedMult[1];
 2851              		.loc 12 104 0
 2852 0174 6062     		str	r0, [r4, #36]	@ float
 2853              	.L137:
 2854              	.LBE239:
 2855              	.LBE251:
 106:src/main.cpp  **** 
 107:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SPIN){
 108:src/main.cpp  ****     if(spinAngle == 0){
 109:src/main.cpp  ****       if(cmd_msg.heading_angle != 0){
 110:src/main.cpp  ****         spinningAutonomously = true;
 111:src/main.cpp  ****         spinAngle = cmd_msg.heading_angle;
 112:src/main.cpp  ****       }else{
 113:src/main.cpp  ****         spinningAutonomously = false;
 114:src/main.cpp  ****       }
 115:src/main.cpp  ****       servo_left->setReference(90);
 116:src/main.cpp  ****       servo_right->setReference(90);
 117:src/main.cpp  **** 
 118:src/main.cpp  ****       motorCmd[0] = cmd_msg.speed;
 119:src/main.cpp  ****       motorCmd[1] = -cmd_msg.speed;
 120:src/main.cpp  ****       motorCmd[2] = -cmd_msg.speed;
 121:src/main.cpp  ****       motorCmd[3] = cmd_msg.speed;
 122:src/main.cpp  ****     }
 123:src/main.cpp  **** 
 124:src/main.cpp  ****   }else if(intMode == cmd_msg.DRIVE_MODE_SIDEWAYS){
 125:src/main.cpp  ****     servo_left->setReference(45);
 126:src/main.cpp  ****     servo_right->setReference(45);
 127:src/main.cpp  **** 
 128:src/main.cpp  ****     motorCmd[0] = cmd_msg.speed;  //FR
 129:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 130:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 131:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;  //RR
 132:src/main.cpp  ****   }
 133:src/main.cpp  ****   currentMode = intMode;
 2856              		.loc 12 133 0
 2857 0176 009B     		ldr	r3, [sp]
 2858 0178 83F80080 		strb	r8, [r3]
 2859              	.LVL370:
 2860              	.L127:
 2861              	.LBE237:
 2862              	.LBE236:
 134:src/main.cpp  **** }
 2863              		.loc 12 134 0
 2864 017c 03B0     		add	sp, sp, #12
 2865              	.LCFI15:
 2866              		.cfi_remember_state
 2867              		.cfi_def_cfa_offset 36
 2868              		@ sp needed
 2869 017e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2870              	.LVL371:
 2871              	.L144:
 2872              	.LCFI16:
 2873              		.cfi_restore_state
 2874              	.LBB254:
 2875              	.LBB253:
 2876              	.LBB252:
 2877              	.LBB250:
  92:src/main.cpp  ****     angle[1] = angle[1] > MAX_ANGLE_PIVOT? MAX_ANGLE_PIVOT : ( angle[1] < -MAX_ANGLE_PIVOT? -MAX_AN
 2878              		.loc 12 92 0
 2879 0182 364D     		ldr	r5, .L159+28
 2880              	.LVL372:
 2881 0184 C1E7     		b	.L133
 2882              	.LVL373:
 2883              	.L145:
 2884 0186 364D     		ldr	r5, .L159+32
 2885              	.LVL374:
 2886 0188 BFE7     		b	.L133
 2887              	.LVL375:
 2888              	.L155:
  78:src/main.cpp  ****     float angle[2] = {0, 0};
 2889              		.loc 12 78 0
 2890 018a 4FF07E5A 		mov	r10, #1065353216
 2891              	.LBB248:
  88:src/main.cpp  ****       angle[1] = 0;
 2892              		.loc 12 88 0
 2893 018e 0025     		movs	r5, #0
 2894              	.LBE248:
  78:src/main.cpp  ****     float angle[2] = {0, 0};
 2895              		.loc 12 78 0
 2896 0190 D346     		mov	fp, r10
 2897              	.LBB249:
  89:src/main.cpp  ****     }
 2898              		.loc 12 89 0
 2899 0192 2E46     		mov	r6, r5
 2900 0194 C5E7     		b	.L131
 2901              	.LVL376:
 2902              	.L146:
 2903              	.LBE249:
  93:src/main.cpp  **** 
 2904              		.loc 12 93 0
 2905 0196 314E     		ldr	r6, .L159+28
 2906              	.LVL377:
 2907 0198 C3E7     		b	.L131
 2908              	.LVL378:
 2909              	.L147:
 2910 019a 314E     		ldr	r6, .L159+32
 2911              	.LVL379:
 2912 019c C1E7     		b	.L131
 2913              	.LVL380:
 2914              	.L156:
  99:src/main.cpp  ****       servo_right->setReference(-angle[0]+135);
 2915              		.loc 12 99 0
 2916 019e 3046     		mov	r0, r6
 2917 01a0 FFF7FEFF 		bl	__aeabi_fadd
 2918              	.LVL381:
 2919 01a4 D9F80030 		ldr	r3, [r9]
 2920 01a8 0146     		mov	r1, r0
 2921 01aa 5B69     		ldr	r3, [r3, #20]
 2922 01ac 4846     		mov	r0, r9
 2923 01ae 9847     		blx	r3
 2924              	.LVL382:
 100:src/main.cpp  ****     }
 2925              		.loc 12 100 0
 2926 01b0 2946     		mov	r1, r5
 2927 01b2 2C48     		ldr	r0, .L159+36
 2928 01b4 FFF7FEFF 		bl	__aeabi_fsub
 2929              	.LVL383:
 2930 01b8 A669     		ldr	r6, [r4, #24]
 2931              	.LVL384:
 2932 01ba 0146     		mov	r1, r0
 2933 01bc 3368     		ldr	r3, [r6]
 2934 01be 3046     		mov	r0, r6
 2935 01c0 5B69     		ldr	r3, [r3, #20]
 2936 01c2 C9E7     		b	.L158
 2937              	.L130:
 2938              	.LBE250:
 107:src/main.cpp  ****     if(spinAngle == 0){
 2939              		.loc 12 107 0
 2940 01c4 B8F1020F 		cmp	r8, #2
 2941 01c8 25D1     		bne	.L138
 108:src/main.cpp  ****       if(cmd_msg.heading_angle != 0){
 2942              		.loc 12 108 0
 2943 01ca 0021     		movs	r1, #0
 2944 01cc E06A     		ldr	r0, [r4, #44]	@ float
 2945 01ce FFF7FEFF 		bl	__aeabi_fcmpeq
 2946              	.LVL385:
 2947 01d2 0028     		cmp	r0, #0
 2948 01d4 CFD0     		beq	.L137
 109:src/main.cpp  ****         spinningAutonomously = true;
 2949              		.loc 12 109 0
 2950 01d6 BD69     		ldr	r5, [r7, #24]	@ float
 2951 01d8 0021     		movs	r1, #0
 2952 01da 2846     		mov	r0, r5
 2953 01dc FFF7FEFF 		bl	__aeabi_fcmpeq
 2954              	.LVL386:
 2955 01e0 A8B9     		cbnz	r0, .L157
 110:src/main.cpp  ****         spinAngle = cmd_msg.heading_angle;
 2956              		.loc 12 110 0
 2957 01e2 0123     		movs	r3, #1
 111:src/main.cpp  ****       }else{
 2958              		.loc 12 111 0
 2959 01e4 E562     		str	r5, [r4, #44]	@ float
 110:src/main.cpp  ****         spinAngle = cmd_msg.heading_angle;
 2960              		.loc 12 110 0
 2961 01e6 84F83030 		strb	r3, [r4, #48]
 2962              	.L142:
 115:src/main.cpp  ****       servo_right->setReference(90);
 2963              		.loc 12 115 0
 2964 01ea 6069     		ldr	r0, [r4, #20]
 2965 01ec 1E49     		ldr	r1, .L159+40
 2966 01ee 0368     		ldr	r3, [r0]
 2967 01f0 5B69     		ldr	r3, [r3, #20]
 2968 01f2 9847     		blx	r3
 2969              	.LVL387:
 116:src/main.cpp  **** 
 2970              		.loc 12 116 0
 2971 01f4 A069     		ldr	r0, [r4, #24]
 2972 01f6 1C49     		ldr	r1, .L159+40
 2973 01f8 0368     		ldr	r3, [r0]
 2974 01fa 5B69     		ldr	r3, [r3, #20]
 2975 01fc 9847     		blx	r3
 2976              	.LVL388:
 118:src/main.cpp  ****       motorCmd[1] = -cmd_msg.speed;
 2977              		.loc 12 118 0
 2978 01fe 3B6A     		ldr	r3, [r7, #32]	@ float
 119:src/main.cpp  ****       motorCmd[2] = -cmd_msg.speed;
 2979              		.loc 12 119 0
 2980 0200 03F10042 		add	r2, r3, #-2147483648
 118:src/main.cpp  ****       motorCmd[1] = -cmd_msg.speed;
 2981              		.loc 12 118 0
 2982 0204 E361     		str	r3, [r4, #28]	@ float
 119:src/main.cpp  ****       motorCmd[2] = -cmd_msg.speed;
 2983              		.loc 12 119 0
 2984 0206 2262     		str	r2, [r4, #32]	@ float
 120:src/main.cpp  ****       motorCmd[3] = cmd_msg.speed;
 2985              		.loc 12 120 0
 2986 0208 6262     		str	r2, [r4, #36]	@ float
 121:src/main.cpp  ****     }
 2987              		.loc 12 121 0
 2988 020a A362     		str	r3, [r4, #40]	@ float
 2989 020c B3E7     		b	.L137
 2990              	.L157:
 113:src/main.cpp  ****       }
 2991              		.loc 12 113 0
 2992 020e 0023     		movs	r3, #0
 2993 0210 84F83030 		strb	r3, [r4, #48]
 2994 0214 E9E7     		b	.L142
 2995              	.L138:
 124:src/main.cpp  ****     servo_left->setReference(45);
 2996              		.loc 12 124 0
 2997 0216 B8F1030F 		cmp	r8, #3
 2998 021a ACD1     		bne	.L137
 125:src/main.cpp  ****     servo_right->setReference(45);
 2999              		.loc 12 125 0
 3000 021c 6069     		ldr	r0, [r4, #20]
 3001 021e 1349     		ldr	r1, .L159+44
 3002 0220 0368     		ldr	r3, [r0]
 3003 0222 5B69     		ldr	r3, [r3, #20]
 3004 0224 9847     		blx	r3
 3005              	.LVL389:
 126:src/main.cpp  **** 
 3006              		.loc 12 126 0
 3007 0226 A069     		ldr	r0, [r4, #24]
 3008 0228 1049     		ldr	r1, .L159+44
 3009 022a 0368     		ldr	r3, [r0]
 3010 022c 5B69     		ldr	r3, [r3, #20]
 3011 022e 9847     		blx	r3
 3012              	.LVL390:
 128:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 3013              		.loc 12 128 0
 3014 0230 3B6A     		ldr	r3, [r7, #32]	@ float
 129:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 3015              		.loc 12 129 0
 3016 0232 03F10042 		add	r2, r3, #-2147483648
 128:src/main.cpp  ****     motorCmd[1] = -cmd_msg.speed; //FL
 3017              		.loc 12 128 0
 3018 0236 E361     		str	r3, [r4, #28]	@ float
 129:src/main.cpp  ****     motorCmd[2] = cmd_msg.speed; //RL
 3019              		.loc 12 129 0
 3020 0238 2262     		str	r2, [r4, #32]	@ float
 130:src/main.cpp  ****     motorCmd[3] = -cmd_msg.speed;  //RR
 3021              		.loc 12 130 0
 3022 023a 6362     		str	r3, [r4, #36]	@ float
 131:src/main.cpp  ****   }
 3023              		.loc 12 131 0
 3024 023c A262     		str	r2, [r4, #40]	@ float
 3025 023e 9AE7     		b	.L137
 3026              	.L160:
 3027              		.align	3
 3028              	.L159:
 3029 0240 182D4454 		.word	1413754136
 3030 0244 FB210940 		.word	1074340347
 3031 0248 9A999999 		.word	2576980378
 3032 024c 9999A93F 		.word	1068079513
 3033 0250 00000000 		.word	.LANCHOR1
 3034 0254 00000000 		.word	.LANCHOR2
 3035 0258 00807640 		.word	1081507840
 3036 025c 00005041 		.word	1095761920
 3037 0260 000050C1 		.word	-1051721728
 3038 0264 00000743 		.word	1124532224
 3039 0268 0000B442 		.word	1119092736
 3040 026c 00003442 		.word	1110704128
 3041              	.LBE252:
 3042              	.LBE253:
 3043              	.LBE254:
 3044              		.cfi_endproc
 3045              	.LFE1630:
 3046              		.fnend
 3048              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE,"
 3049              		.align	1
 3050              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 3051              		.syntax unified
 3052              		.thumb
 3053              		.thumb_func
 3054              		.fpu softvfp
 3056              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:
 3057              		.fnstart
 3058              	.LFB1873:
 288:./lib/ros_lib/ros/node_handle.h **** 
 289:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 290:./lib/ros_lib/ros/node_handle.h ****        * Time functions
 291:./lib/ros_lib/ros/node_handle.h ****        */
 292:./lib/ros_lib/ros/node_handle.h **** 
 293:./lib/ros_lib/ros/node_handle.h ****       void requestSyncTime()
 294:./lib/ros_lib/ros/node_handle.h ****       {
 295:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 296:./lib/ros_lib/ros/node_handle.h ****         publish(TopicInfo::ID_TIME, &t);
 297:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 298:./lib/ros_lib/ros/node_handle.h ****       }
 299:./lib/ros_lib/ros/node_handle.h **** 
 300:./lib/ros_lib/ros/node_handle.h ****       void syncTime(uint8_t * data)
 301:./lib/ros_lib/ros/node_handle.h ****       {
 302:./lib/ros_lib/ros/node_handle.h ****         std_msgs::Time t;
 303:./lib/ros_lib/ros/node_handle.h ****         uint32_t offset = hardware_.time() - rt_time;
 304:./lib/ros_lib/ros/node_handle.h **** 
 305:./lib/ros_lib/ros/node_handle.h ****         t.deserialize(data);
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 307:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 308:./lib/ros_lib/ros/node_handle.h **** 
 309:./lib/ros_lib/ros/node_handle.h ****         this->setNow(t.data);
 310:./lib/ros_lib/ros/node_handle.h ****         last_sync_receive_time = hardware_.time();
 311:./lib/ros_lib/ros/node_handle.h ****       }
 312:./lib/ros_lib/ros/node_handle.h **** 
 313:./lib/ros_lib/ros/node_handle.h ****       Time now()
 314:./lib/ros_lib/ros/node_handle.h ****       {
 315:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 316:./lib/ros_lib/ros/node_handle.h ****         Time current_time;
 317:./lib/ros_lib/ros/node_handle.h ****         current_time.sec = ms/1000 + sec_offset;
 318:./lib/ros_lib/ros/node_handle.h ****         current_time.nsec = (ms%1000)*1000000UL + nsec_offset;
 319:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(current_time.sec, current_time.nsec);
 320:./lib/ros_lib/ros/node_handle.h ****         return current_time;
 321:./lib/ros_lib/ros/node_handle.h ****       }
 322:./lib/ros_lib/ros/node_handle.h **** 
 323:./lib/ros_lib/ros/node_handle.h ****       void setNow( Time & new_now )
 324:./lib/ros_lib/ros/node_handle.h ****       {
 325:./lib/ros_lib/ros/node_handle.h ****         uint32_t ms = hardware_.time();
 326:./lib/ros_lib/ros/node_handle.h ****         sec_offset = new_now.sec - ms/1000 - 1;
 327:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 328:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 329:./lib/ros_lib/ros/node_handle.h ****       }
 330:./lib/ros_lib/ros/node_handle.h **** 
 331:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 332:./lib/ros_lib/ros/node_handle.h ****        * Topic Management
 333:./lib/ros_lib/ros/node_handle.h ****        */
 334:./lib/ros_lib/ros/node_handle.h **** 
 335:./lib/ros_lib/ros/node_handle.h ****       /* Register a new publisher */
 336:./lib/ros_lib/ros/node_handle.h ****       bool advertise(Publisher & p)
 337:./lib/ros_lib/ros/node_handle.h ****       {
 338:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_PUBLISHERS; i++){
 339:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 340:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 341:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 342:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 343:./lib/ros_lib/ros/node_handle.h ****             return true;
 344:./lib/ros_lib/ros/node_handle.h ****           }
 345:./lib/ros_lib/ros/node_handle.h ****         }
 346:./lib/ros_lib/ros/node_handle.h ****         return false;
 347:./lib/ros_lib/ros/node_handle.h ****       }
 348:./lib/ros_lib/ros/node_handle.h **** 
 349:./lib/ros_lib/ros/node_handle.h ****       /* Register a new subscriber */
 350:./lib/ros_lib/ros/node_handle.h ****       template<typename MsgT>
 351:./lib/ros_lib/ros/node_handle.h ****       bool subscribe(Subscriber< MsgT> & s){
 352:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 353:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 354:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 355:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 356:./lib/ros_lib/ros/node_handle.h ****             return true;
 357:./lib/ros_lib/ros/node_handle.h ****           }
 358:./lib/ros_lib/ros/node_handle.h ****         }
 359:./lib/ros_lib/ros/node_handle.h ****         return false;
 360:./lib/ros_lib/ros/node_handle.h ****       }
 361:./lib/ros_lib/ros/node_handle.h **** 
 362:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Server */
 363:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 364:./lib/ros_lib/ros/node_handle.h ****       bool advertiseService(ServiceServer<MReq,MRes>& srv){
 365:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 366:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 367:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 368:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 369:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 370:./lib/ros_lib/ros/node_handle.h ****             return v;
 371:./lib/ros_lib/ros/node_handle.h ****           }
 372:./lib/ros_lib/ros/node_handle.h ****         }
 373:./lib/ros_lib/ros/node_handle.h ****         return false;
 374:./lib/ros_lib/ros/node_handle.h ****       }
 375:./lib/ros_lib/ros/node_handle.h **** 
 376:./lib/ros_lib/ros/node_handle.h ****       /* Register a new Service Client */
 377:./lib/ros_lib/ros/node_handle.h ****       template<typename MReq, typename MRes>
 378:./lib/ros_lib/ros/node_handle.h ****       bool serviceClient(ServiceClient<MReq, MRes>& srv){
 379:./lib/ros_lib/ros/node_handle.h ****         bool v = advertise(srv.pub);
 380:./lib/ros_lib/ros/node_handle.h ****         for(int i = 0; i < MAX_SUBSCRIBERS; i++){
 381:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 382:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &srv;
 383:./lib/ros_lib/ros/node_handle.h ****             srv.id_ = i+100;
 384:./lib/ros_lib/ros/node_handle.h ****             return v;
 385:./lib/ros_lib/ros/node_handle.h ****           }
 386:./lib/ros_lib/ros/node_handle.h ****         }
 387:./lib/ros_lib/ros/node_handle.h ****         return false;
 388:./lib/ros_lib/ros/node_handle.h ****       }
 389:./lib/ros_lib/ros/node_handle.h **** 
 390:./lib/ros_lib/ros/node_handle.h ****       void negotiateTopics()
 391:./lib/ros_lib/ros/node_handle.h ****       {
 392:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::TopicInfo ti;
 393:./lib/ros_lib/ros/node_handle.h ****         int i;
 394:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_PUBLISHERS; i++)
 395:./lib/ros_lib/ros/node_handle.h ****         {
 396:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] != 0) // non-empty slot
 397:./lib/ros_lib/ros/node_handle.h ****           {
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = publishers[i]->id_;
 399:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 400:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 401:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 402:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 403:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 404:./lib/ros_lib/ros/node_handle.h ****           }
 405:./lib/ros_lib/ros/node_handle.h ****         }
 406:./lib/ros_lib/ros/node_handle.h ****         for(i = 0; i < MAX_SUBSCRIBERS; i++)
 407:./lib/ros_lib/ros/node_handle.h ****         {
 408:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] != 0) // non-empty slot
 409:./lib/ros_lib/ros/node_handle.h ****           {
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_id = subscribers[i]->id_;
 411:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 412:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 413:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 414:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 415:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 416:./lib/ros_lib/ros/node_handle.h ****           }
 417:./lib/ros_lib/ros/node_handle.h ****         }
 418:./lib/ros_lib/ros/node_handle.h ****         configured_ = true;
 419:./lib/ros_lib/ros/node_handle.h ****       }
 420:./lib/ros_lib/ros/node_handle.h **** 
 421:./lib/ros_lib/ros/node_handle.h ****       virtual int publish(int id, const Msg * msg)
 3059              		.loc 10 421 0
 3060              		.cfi_startproc
 3061              		@ args = 0, pretend = 0, frame = 16
 3062              		@ frame_needed = 0, uses_anonymous_args = 0
 3063              	.LVL391:
 3064 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3065              		.save {r4, r5, r6, r7, r8, r9, lr}
 3066              	.LCFI17:
 3067              		.cfi_def_cfa_offset 28
 3068              		.cfi_offset 4, -28
 3069              		.cfi_offset 5, -24
 3070              		.cfi_offset 6, -20
 3071              		.cfi_offset 7, -16
 3072              		.cfi_offset 8, -12
 3073              		.cfi_offset 9, -8
 3074              		.cfi_offset 14, -4
 422:./lib/ros_lib/ros/node_handle.h ****       {
 423:./lib/ros_lib/ros/node_handle.h ****         if(id >= 100 && !configured_)
 3075              		.loc 10 423 0
 3076 0004 6329     		cmp	r1, #99
 421:./lib/ros_lib/ros/node_handle.h ****       {
 3077              		.loc 10 421 0
 3078              		.pad #20
 3079 0006 85B0     		sub	sp, sp, #20
 3080              	.LCFI18:
 3081              		.cfi_def_cfa_offset 48
 421:./lib/ros_lib/ros/node_handle.h ****       {
 3082              		.loc 10 421 0
 3083 0008 0446     		mov	r4, r0
 3084 000a 0D46     		mov	r5, r1
 3085              		.loc 10 423 0
 3086 000c 03DD     		ble	.L162
 3087              		.loc 10 423 0 is_stmt 0 discriminator 1
 3088 000e 90F8F468 		ldrb	r6, [r0, #2292]	@ zero_extendqisi2
 3089 0012 002E     		cmp	r6, #0
 3090 0014 74D0     		beq	.L161
 3091              	.L162:
 424:./lib/ros_lib/ros/node_handle.h ****           return 0;
 425:./lib/ros_lib/ros/node_handle.h **** 
 426:./lib/ros_lib/ros/node_handle.h ****         /* serialize message */
 427:./lib/ros_lib/ros/node_handle.h ****         uint16_t l = msg->serialize(message_out+7);
 3092              		.loc 10 427 0 is_stmt 1
 3093 0016 1368     		ldr	r3, [r2]
 3094 0018 04F21F41 		addw	r1, r4, #1055
 3095              	.LVL392:
 3096 001c 1B68     		ldr	r3, [r3]
 3097 001e 1046     		mov	r0, r2
 3098              	.LVL393:
 3099 0020 9847     		blx	r3
 3100              	.LVL394:
 428:./lib/ros_lib/ros/node_handle.h **** 
 429:./lib/ros_lib/ros/node_handle.h ****         /* setup the header */
 430:./lib/ros_lib/ros/node_handle.h ****         message_out[0] = 0xff;
 3101              		.loc 10 430 0
 3102 0022 FF22     		movs	r2, #255
 3103 0024 84F81824 		strb	r2, [r4, #1048]
 431:./lib/ros_lib/ros/node_handle.h ****         message_out[1] = PROTOCOL_VER;
 3104              		.loc 10 431 0
 3105 0028 FE22     		movs	r2, #254
 427:./lib/ros_lib/ros/node_handle.h **** 
 3106              		.loc 10 427 0
 3107 002a 83B2     		uxth	r3, r0
 3108              	.LVL395:
 3109              		.loc 10 431 0
 3110 002c 84F81924 		strb	r2, [r4, #1049]
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3111              		.loc 10 432 0
 3112 0030 C2B2     		uxtb	r2, r0
 433:./lib/ros_lib/ros/node_handle.h ****         message_out[3] = (uint8_t) ((uint16_t)l>>8);
 3113              		.loc 10 433 0
 3114 0032 C0F30720 		ubfx	r0, r0, #8, #8
 3115 0036 84F81B04 		strb	r0, [r4, #1051]
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[4] = 255 - ((message_out[2] + message_out[3])%256);
 3116              		.loc 10 434 0
 3117 003a 1044     		add	r0, r0, r2
 3118 003c C043     		mvns	r0, r0
 432:./lib/ros_lib/ros/node_handle.h ****         message_out[2] = (uint8_t) ((uint16_t)l&255);
 3119              		.loc 10 432 0
 3120 003e 84F81A24 		strb	r2, [r4, #1050]
 3121              	.LBB277:
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 436:./lib/ros_lib/ros/node_handle.h ****         message_out[6] = (uint8_t) ((int16_t)id>>8);
 437:./lib/ros_lib/ros/node_handle.h **** 
 438:./lib/ros_lib/ros/node_handle.h ****         /* calculate checksum */
 439:./lib/ros_lib/ros/node_handle.h ****         int chk = 0;
 440:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3122              		.loc 10 440 0
 3123 0042 0521     		movs	r1, #5
 3124              	.LBE277:
 439:./lib/ros_lib/ros/node_handle.h ****         for(int i =5; i<l+7; i++)
 3125              		.loc 10 439 0
 3126 0044 0022     		movs	r2, #0
 435:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3127              		.loc 10 435 0
 3128 0046 84F81D54 		strb	r5, [r4, #1053]
 436:./lib/ros_lib/ros/node_handle.h **** 
 3129              		.loc 10 436 0
 3130 004a 45F30725 		sbfx	r5, r5, #8, #8
 3131              	.LVL396:
 434:./lib/ros_lib/ros/node_handle.h ****         message_out[5] = (uint8_t) ((int16_t)id&255);
 3132              		.loc 10 434 0
 3133 004e 84F81C04 		strb	r0, [r4, #1052]
 436:./lib/ros_lib/ros/node_handle.h **** 
 3134              		.loc 10 436 0
 3135 0052 84F81E54 		strb	r5, [r4, #1054]
 3136              	.LVL397:
 3137              	.LBB278:
 3138              		.loc 10 440 0
 3139 0056 981D     		adds	r0, r3, #6
 3140 0058 04F21D45 		addw	r5, r4, #1053
 3141              	.LVL398:
 3142              	.L165:
 3143              		.loc 10 440 0 is_stmt 0 discriminator 3
 3144 005c 8142     		cmp	r1, r0
 3145 005e 04DC     		bgt	.L164
 441:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3146              		.loc 10 441 0 is_stmt 1 discriminator 2
 3147 0060 15F8016B 		ldrb	r6, [r5], #1	@ zero_extendqisi2
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3148              		.loc 10 440 0 discriminator 2
 3149 0064 0131     		adds	r1, r1, #1
 3150              	.LVL399:
 3151              		.loc 10 441 0 discriminator 2
 3152 0066 3244     		add	r2, r2, r6
 3153              	.LVL400:
 440:./lib/ros_lib/ros/node_handle.h ****           chk += message_out[i];
 3154              		.loc 10 440 0 discriminator 2
 3155 0068 F8E7     		b	.L165
 3156              	.L164:
 3157              	.LVL401:
 3158              	.LBE278:
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 443:./lib/ros_lib/ros/node_handle.h ****         message_out[l++] = 255 - (chk%256);
 3159              		.loc 10 443 0
 3160 006a D243     		mvns	r2, r2
 3161              	.LVL402:
 3162 006c 03F10807 		add	r7, r3, #8
 442:./lib/ros_lib/ros/node_handle.h ****         l += 7;
 3163              		.loc 10 442 0
 3164 0070 0733     		adds	r3, r3, #7
 3165              	.LVL403:
 3166              		.loc 10 443 0
 3167 0072 BFB2     		uxth	r7, r7
 3168              	.LVL404:
 3169 0074 9BB2     		uxth	r3, r3
 3170 0076 2344     		add	r3, r3, r4
 444:./lib/ros_lib/ros/node_handle.h **** 
 445:./lib/ros_lib/ros/node_handle.h ****         if( l <= OUTPUT_SIZE ){
 3171              		.loc 10 445 0
 3172 0078 B7F5806F 		cmp	r7, #1024
 443:./lib/ros_lib/ros/node_handle.h **** 
 3173              		.loc 10 443 0
 3174 007c 83F81824 		strb	r2, [r3, #1048]
 3175              		.loc 10 445 0
 3176 0080 3E46     		mov	r6, r7
 3177 0082 2ED8     		bhi	.L166
 3178              	.LBB279:
 3179              	.LBB280:
 3180              		.file 14 "./lib/ros_lib/STM32Hardware.h"
   1:./lib/ros_lib/STM32Hardware.h **** #pragma once
   2:./lib/ros_lib/STM32Hardware.h **** 
   3:./lib/ros_lib/STM32Hardware.h **** #include "UsartWithBuffer.h"
   4:./lib/ros_lib/STM32Hardware.h **** 
   5:./lib/ros_lib/STM32Hardware.h **** class STM32Hardware {
   6:./lib/ros_lib/STM32Hardware.h **** 
   7:./lib/ros_lib/STM32Hardware.h ****   using SERIAL_CLASS = UsartWithBuffer;
   8:./lib/ros_lib/STM32Hardware.h **** 
   9:./lib/ros_lib/STM32Hardware.h ****   public:
  10:./lib/ros_lib/STM32Hardware.h ****     STM32Hardware(SERIAL_CLASS* _com , long baud= 115200){
  11:./lib/ros_lib/STM32Hardware.h ****       com = _com;
  12:./lib/ros_lib/STM32Hardware.h ****       baud_ = baud;
  13:./lib/ros_lib/STM32Hardware.h ****     }
  14:./lib/ros_lib/STM32Hardware.h **** 
  15:./lib/ros_lib/STM32Hardware.h ****     STM32Hardware()
  16:./lib/ros_lib/STM32Hardware.h ****     {
  17:./lib/ros_lib/STM32Hardware.h ****       com = new SERIAL_CLASS(115200);
  18:./lib/ros_lib/STM32Hardware.h ****       baud_ = 115200;
  19:./lib/ros_lib/STM32Hardware.h ****     }
  20:./lib/ros_lib/STM32Hardware.h ****     STM32Hardware(STM32Hardware& h){
  21:./lib/ros_lib/STM32Hardware.h ****       this->baud_ = h.baud_;
  22:./lib/ros_lib/STM32Hardware.h ****     }
  23:./lib/ros_lib/STM32Hardware.h **** 
  24:./lib/ros_lib/STM32Hardware.h ****     void setBaud(long baud){
  25:./lib/ros_lib/STM32Hardware.h ****       this->baud_= baud;
  26:./lib/ros_lib/STM32Hardware.h ****     }
  27:./lib/ros_lib/STM32Hardware.h **** 
  28:./lib/ros_lib/STM32Hardware.h ****     int getBaud(){return baud_;}
  29:./lib/ros_lib/STM32Hardware.h **** 
  30:./lib/ros_lib/STM32Hardware.h ****     void init(){
  31:./lib/ros_lib/STM32Hardware.h ****       //iostream->begin(baud_);
  32:./lib/ros_lib/STM32Hardware.h ****     }
  33:./lib/ros_lib/STM32Hardware.h **** 
  34:./lib/ros_lib/STM32Hardware.h ****     int read(){
  35:./lib/ros_lib/STM32Hardware.h ****       if(com->dataAvailable()){
  36:./lib/ros_lib/STM32Hardware.h ****         return com->getch();
  37:./lib/ros_lib/STM32Hardware.h ****       }
  38:./lib/ros_lib/STM32Hardware.h ****       else{
  39:./lib/ros_lib/STM32Hardware.h ****         return -1;
  40:./lib/ros_lib/STM32Hardware.h ****       }
  41:./lib/ros_lib/STM32Hardware.h ****     }
  42:./lib/ros_lib/STM32Hardware.h **** 
  43:./lib/ros_lib/STM32Hardware.h ****     void write(uint8_t* data, int length){
  44:./lib/ros_lib/STM32Hardware.h ****       for(int i=0; i<length; i++){
 3181              		.loc 14 44 0
 3182 0084 4FF00008 		mov	r8, #0
 3183              	.LBB281:
 3184              	.LBB282:
 3185              		.file 15 "./inc/UsartWithBuffer.h"
   1:./inc/UsartWithBuffer.h **** #pragma once
   2:./inc/UsartWithBuffer.h **** 
   3:./inc/UsartWithBuffer.h **** #include "stm32f10x.h"
   4:./inc/UsartWithBuffer.h **** #include "stm32_time.h"
   5:./inc/UsartWithBuffer.h **** 
   6:./inc/UsartWithBuffer.h **** 
   7:./inc/UsartWithBuffer.h **** const static int UART_BUFSIZE = 1024;
   8:./inc/UsartWithBuffer.h **** /* @brief Receive buffer. */
   9:./inc/UsartWithBuffer.h **** volatile uint8_t RX[UART_BUFSIZE];
  10:./inc/UsartWithBuffer.h **** /* @brief Transmit buffer. */
  11:./inc/UsartWithBuffer.h **** volatile uint8_t TX[UART_BUFSIZE];
  12:./inc/UsartWithBuffer.h **** /* @brief Receive buffer head. */
  13:./inc/UsartWithBuffer.h **** volatile uint16_t RX_Head;
  14:./inc/UsartWithBuffer.h **** /* @brief Receive buffer tail. */
  15:./inc/UsartWithBuffer.h **** volatile uint16_t RX_Tail;
  16:./inc/UsartWithBuffer.h **** /* @brief Transmit buffer head. */
  17:./inc/UsartWithBuffer.h **** volatile uint16_t TX_Head;
  18:./inc/UsartWithBuffer.h **** /* @brief Transmit buffer tail. */
  19:./inc/UsartWithBuffer.h **** volatile uint16_t TX_Tail;
  20:./inc/UsartWithBuffer.h **** 
  21:./inc/UsartWithBuffer.h **** 
  22:./inc/UsartWithBuffer.h **** class UsartWithBuffer {
  23:./inc/UsartWithBuffer.h **** 
  24:./inc/UsartWithBuffer.h **** protected:
  25:./inc/UsartWithBuffer.h **** 
  26:./inc/UsartWithBuffer.h **** 
  27:./inc/UsartWithBuffer.h **** public:
  28:./inc/UsartWithBuffer.h **** 
  29:./inc/UsartWithBuffer.h ****   /*
  30:./inc/UsartWithBuffer.h ****    * Use the constructor base initialiser to set up the USART at 57600
  31:./inc/UsartWithBuffer.h ****    */
  32:./inc/UsartWithBuffer.h **** 
  33:./inc/UsartWithBuffer.h ****   UsartWithBuffer( int _baud = 115200) {
  34:./inc/UsartWithBuffer.h ****     RX_Tail = 0;
  35:./inc/UsartWithBuffer.h ****     RX_Head = 0;
  36:./inc/UsartWithBuffer.h ****     TX_Tail = 0;
  37:./inc/UsartWithBuffer.h ****     TX_Head = 0;
  38:./inc/UsartWithBuffer.h **** 
  39:./inc/UsartWithBuffer.h ****     USART_InitTypeDef usart1_init_struct;
  40:./inc/UsartWithBuffer.h ****     /* Bit configuration structure for GPIOA PIN9 and PIN10 */
  41:./inc/UsartWithBuffer.h ****     GPIO_InitTypeDef gpioa_init_struct;
  42:./inc/UsartWithBuffer.h **** 
  43:./inc/UsartWithBuffer.h ****     /* Enalbe clock for USART1, AFIO and GPIOA */
  44:./inc/UsartWithBuffer.h ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
  45:./inc/UsartWithBuffer.h ****                           
  46:./inc/UsartWithBuffer.h ****     /* GPIOA PIN9 alternative function Tx */
  47:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Pin = GPIO_Pin_9;
  48:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  49:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
  50:./inc/UsartWithBuffer.h ****     GPIO_Init(GPIOA, &gpioa_init_struct);
  51:./inc/UsartWithBuffer.h ****     /* GPIOA PIN9 alternative function Rx */
  52:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Pin = GPIO_Pin_10;
  53:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
  54:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
  55:./inc/UsartWithBuffer.h ****     GPIO_Init(GPIOA, &gpioa_init_struct);
  56:./inc/UsartWithBuffer.h **** 
  57:./inc/UsartWithBuffer.h ****     /* Enable USART1 */
  58:./inc/UsartWithBuffer.h ****     USART_Cmd(USART1, ENABLE);  
  59:./inc/UsartWithBuffer.h ****     /* Baud rate 230400, 8-bit data, One stop bit
  60:./inc/UsartWithBuffer.h ****     * No parity, Do both Rx and Tx, No HW flow control
  61:./inc/UsartWithBuffer.h ****     */
  62:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_BaudRate = _baud;   
  63:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
  64:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_StopBits = USART_StopBits_1;   
  65:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_Parity = USART_Parity_No ;
  66:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
  67:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
  68:./inc/UsartWithBuffer.h ****     /* Configure USART1 */
  69:./inc/UsartWithBuffer.h ****     USART_Init(USART1, &usart1_init_struct);
  70:./inc/UsartWithBuffer.h ****     /* Enable RXNE interrupt */
  71:./inc/UsartWithBuffer.h ****     USART_ITConfig(USART1, USART_IT_TXE, DISABLE);
  72:./inc/UsartWithBuffer.h ****     USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
  73:./inc/UsartWithBuffer.h ****     /* Enable USART1 global interrupt */
  74:./inc/UsartWithBuffer.h ****     NVIC_EnableIRQ(USART1_IRQn);
  75:./inc/UsartWithBuffer.h **** 
  76:./inc/UsartWithBuffer.h ****   }
  77:./inc/UsartWithBuffer.h **** 
  78:./inc/UsartWithBuffer.h ****   bool TXBuffer_Empty()
  79:./inc/UsartWithBuffer.h ****   {
  80:./inc/UsartWithBuffer.h ****     /* Make copies to make sure that volatile access is specified. */
  81:./inc/UsartWithBuffer.h ****     uint16_t tempHead = TX_Head;
  82:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
  83:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
  84:./inc/UsartWithBuffer.h ****     return (tempHead == tempTail);
  85:./inc/UsartWithBuffer.h ****   }
  86:./inc/UsartWithBuffer.h **** 
  87:./inc/UsartWithBuffer.h ****   bool TXBuffer_FreeSpace()
  88:./inc/UsartWithBuffer.h ****   {
  89:./inc/UsartWithBuffer.h ****     /* Make copies to make sure that volatile access is specified. */
  90:./inc/UsartWithBuffer.h ****     uint16_t tempHead = (TX_Head + 1) & (UART_BUFSIZE-1);
 3186              		.loc 15 90 0
 3187 0088 1F4D     		ldr	r5, .L174
 3188              	.LBE282:
 3189              	.LBE281:
 3190              	.LBB284:
 3191              	.LBB285:
  91:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
  92:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
  93:./inc/UsartWithBuffer.h ****     return (tempHead != tempTail);
  94:./inc/UsartWithBuffer.h ****   }
  95:./inc/UsartWithBuffer.h **** 
  96:./inc/UsartWithBuffer.h ****   bool putch(uint8_t data)
  97:./inc/UsartWithBuffer.h ****   {
  98:./inc/UsartWithBuffer.h **** 
  99:./inc/UsartWithBuffer.h ****     uint16_t tempTX_Head;
 100:./inc/UsartWithBuffer.h ****     bool isFree = TXBuffer_FreeSpace();
 101:./inc/UsartWithBuffer.h **** 
 102:./inc/UsartWithBuffer.h ****     if(isFree)
 103:./inc/UsartWithBuffer.h ****     {
 104:./inc/UsartWithBuffer.h ****     	tempTX_Head = TX_Head;
 105:./inc/UsartWithBuffer.h **** 
 106:./inc/UsartWithBuffer.h ****     	__disable_irq();
 107:./inc/UsartWithBuffer.h ****     	TX[tempTX_Head]= data;
 108:./inc/UsartWithBuffer.h ****     	/* Advance buffer head. */
 109:./inc/UsartWithBuffer.h ****     	TX_Head = (tempTX_Head + 1) & (UART_BUFSIZE-1);
 110:./inc/UsartWithBuffer.h ****     	__enable_irq();
 111:./inc/UsartWithBuffer.h **** 
 112:./inc/UsartWithBuffer.h ****     	/* Enable TXE interrupt. */
 113:./inc/UsartWithBuffer.h ****     	USART_ITConfig(USART1,USART_IT_TXE,ENABLE);
 3192              		.loc 15 113 0
 3193 008a DFF88890 		ldr	r9, .L174+12
 3194              	.LBE285:
 3195              	.LBE284:
 3196              	.LBE280:
 3197              	.LBE279:
 446:./lib/ros_lib/ros/node_handle.h ****           hardware_.write(message_out, l);
 3198              		.loc 10 446 0
 3199 008e 04F58364 		add	r4, r4, #1048
 3200              	.LVL405:
 3201              	.L169:
 3202              	.LBB298:
 3203              	.LBB297:
 3204              		.loc 14 44 0
 3205 0092 4745     		cmp	r7, r8
 3206 0094 34DD     		ble	.L161
 3207              	.L171:
 3208              	.LVL406:
 3209              	.LBB294:
 3210              	.LBB283:
  90:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
 3211              		.loc 15 90 0
 3212 0096 6B8E     		ldrh	r3, [r5, #50]
 3213              	.LVL407:
  91:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
 3214              		.loc 15 91 0
 3215 0098 AA8E     		ldrh	r2, [r5, #52]
  90:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
 3216              		.loc 15 90 0
 3217 009a 0133     		adds	r3, r3, #1
 3218              	.LVL408:
  91:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
 3219              		.loc 15 91 0
 3220 009c 92B2     		uxth	r2, r2
 3221              	.LBE283:
 3222              	.LBE294:
  45:./lib/ros_lib/STM32Hardware.h ****         while( !com->TXBuffer_FreeSpace() );
 3223              		.loc 14 45 0
 3224 009e C3F30903 		ubfx	r3, r3, #0, #10
 3225 00a2 9342     		cmp	r3, r2
 3226 00a4 F7D0     		beq	.L171
 3227              	.LVL409:
 3228              	.LBB295:
 3229              	.LBB292:
 3230              	.LBB286:
 3231              	.LBB287:
  90:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
 3232              		.loc 15 90 0
 3233 00a6 6B8E     		ldrh	r3, [r5, #50]
 3234              	.LVL410:
  91:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
 3235              		.loc 15 91 0
 3236 00a8 AA8E     		ldrh	r2, [r5, #52]
  90:./inc/UsartWithBuffer.h ****     uint16_t tempTail = TX_Tail;
 3237              		.loc 15 90 0
 3238 00aa 0133     		adds	r3, r3, #1
 3239              	.LVL411:
  91:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
 3240              		.loc 15 91 0
 3241 00ac 92B2     		uxth	r2, r2
 3242              	.LBE287:
 3243              	.LBE286:
 102:./inc/UsartWithBuffer.h ****     {
 3244              		.loc 15 102 0
 3245 00ae C3F30903 		ubfx	r3, r3, #0, #10
 3246 00b2 9342     		cmp	r3, r2
 3247 00b4 12D0     		beq	.L168
 104:./inc/UsartWithBuffer.h **** 
 3248              		.loc 15 104 0
 3249 00b6 6B8E     		ldrh	r3, [r5, #50]
 3250              	.LBE292:
 3251              	.LBE295:
  46:./lib/ros_lib/STM32Hardware.h ****         com->putch(data[i]);
 3252              		.loc 14 46 0
 3253 00b8 14F80810 		ldrb	r1, [r4, r8]	@ zero_extendqisi2
 3254              	.LBB296:
 3255              	.LBB293:
 104:./inc/UsartWithBuffer.h **** 
 3256              		.loc 15 104 0
 3257 00bc 9BB2     		uxth	r3, r3
 3258              	.LVL412:
 3259              	.LBB288:
 3260              	.LBB289:
 3261              		.file 16 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h"
   1:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**************************************************************************//**
   2:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @file     core_cm3.h
   3:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @version  V1.30
   5:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @date     30. October 2009
   6:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
   7:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @note
   8:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Copyright (C) 2009 ARM Limited. All rights reserved.
   9:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  10:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  11:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * within development tools that are supporting such ARM based processors. 
  14:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  15:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @par
  16:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  22:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
  23:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  24:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __CM3_CORE_H__
  25:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CORE_H__
  26:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  27:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_LintCinfiguration CMSIS CM3 Core Lint Configuration
  28:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  29:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * List of Lint messages which will be suppressed and not shown:
  30:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 10: \n
  31:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     register uint32_t __regBasePri         __asm("basepri"); \n
  32:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Error 10: Expecting ';'
  33:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  34:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 530: \n
  35:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     return(__regBasePri); \n
  36:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 530: Symbol '__regBasePri' (line 264) not initialized
  37:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * . 
  38:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 550: \n
  39:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     __regBasePri = (basePri & 0x1ff); \n
  40:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 550: Symbol '__regBasePri' (line 271) not accessed
  41:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  42:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 754: \n
  43:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     uint32_t RESERVED0[24]; \n
  44:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 754: local structure member '<some, not used in the HAL>' (line 109, file ./cm3_core.h)
  45:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  46:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 750: \n
  47:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     #define __CM3_CORE_H__ \n
  48:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 750: local macro '__CM3_CORE_H__' (line 43, file./cm3_core.h) not referenced
  49:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  50:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 528: \n
  51:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     static __INLINE void NVIC_DisableIRQ(uint32_t IRQn) \n
  52:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Warning 528: Symbol 'NVIC_DisableIRQ(unsigned int)' (line 419, file ./cm3_core.h) not refere
  53:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  54:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *   - Error 751: \n
  55:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     } InterruptType_Type; \n
  56:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *     Info 751: local typedef 'InterruptType_Type' (line 170, file ./cm3_core.h) not referenced
  57:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * .
  58:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note:  To re-enable a Message, insert a space before 'lint' *
  59:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
  60:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  61:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  62:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -save */
  63:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e10  */
  64:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e530 */
  65:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e550 */
  66:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e754 */
  67:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e750 */
  68:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e528 */
  69:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*lint -e751 */
  70:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  71:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  72:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_definitions CM3 Core Definitions
  73:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  74:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - CMSIS version number
  75:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core registers and bitfields
  76:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     - Cortex-M core peripheral base address
  77:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
  78:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
  79:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  80:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
  81:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  extern "C" {
  82:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif 
  83:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  84:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x01)                                                       /*!<
  85:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x30)                                                       /*!<
  86:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  87:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  88:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  89:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  90:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #include <stdint.h>                           /* Include standard types */
  91:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  92:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__ICCARM__)
  93:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #include <intrinsics.h>                     /* IAR Intrinsics   */
  94:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
  95:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  96:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
  97:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifndef __NVIC_PRIO_BITS
  98:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __NVIC_PRIO_BITS    4               /*!< standard definition for NVIC Priority Bits */
  99:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * IO definitions
 106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * define access restrictions to peripheral registers
 108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #ifdef __cplusplus
 111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile                /*!< defines 'read only' permissions      */
 112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define     __I     volatile const          /*!< defines 'read only' permissions      */
 114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __O     volatile                  /*!< defines 'write only' permissions     */
 116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define     __IO    volatile                  /*!< defines 'read / write' permissions   */
 117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                 Register Abstraction
 122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_core_register CMSIS CM3 Core Register
 124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  @{
 125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
 126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_NVIC CMSIS CM3 NVIC
 129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Nested Vectored Interrupt Controller (NVIC)
 130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISER[8];                      /*!< Offset: 0x000  Interrupt Set Enable Register    
 135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[24];                                   
 136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICER[8];                      /*!< Offset: 0x080  Interrupt Clear Enable Register  
 137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RSERVED1[24];                                    
 138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ISPR[8];                      /*!< Offset: 0x100  Interrupt Set Pending Register   
 139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[24];                                   
 140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICPR[8];                      /*!< Offset: 0x180  Interrupt Clear Pending Register 
 141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[24];                                   
 142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IABR[8];                      /*!< Offset: 0x200  Interrupt Active bit Register    
 143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[56];                                   
 144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  IP[240];                      /*!< Offset: 0x300  Interrupt Priority Register (8Bit
 145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[644];                                  
 146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t STIR;                         /*!< Offset: 0xE00  Software Trigger Interrupt Regist
 147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }  NVIC_Type;                                               
 148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_NVIC */
 149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SCB CMSIS CM3 SCB
 152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for System Control Block (SCB)
 153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CPUID;                        /*!< Offset: 0x00  CPU ID Base Register              
 158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ICSR;                         /*!< Offset: 0x04  Interrupt Control State Register  
 159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VTOR;                         /*!< Offset: 0x08  Vector Table Offset Register      
 160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AIRCR;                        /*!< Offset: 0x0C  Application Interrupt / Reset Cont
 161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SCR;                          /*!< Offset: 0x10  System Control Register           
 162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CCR;                          /*!< Offset: 0x14  Configuration Control Register    
 163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint8_t  SHP[12];                      /*!< Offset: 0x18  System Handlers Priority Registers
 164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t SHCSR;                        /*!< Offset: 0x24  System Handler Control and State R
 165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CFSR;                         /*!< Offset: 0x28  Configurable Fault Status Register
 166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t HFSR;                         /*!< Offset: 0x2C  Hard Fault Status Register        
 167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DFSR;                         /*!< Offset: 0x30  Debug Fault Status Register       
 168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t MMFAR;                        /*!< Offset: 0x34  Mem Manage Address Register       
 169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t BFAR;                         /*!< Offset: 0x38  Bus Fault Address Register        
 170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t AFSR;                         /*!< Offset: 0x3C  Auxiliary Fault Status Register   
 171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PFR[2];                       /*!< Offset: 0x40  Processor Feature Register        
 172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t DFR;                          /*!< Offset: 0x48  Debug Feature Register            
 173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ADR;                          /*!< Offset: 0x4C  Auxiliary Feature Register        
 174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t MMFR[4];                      /*!< Offset: 0x50  Memory Model Feature Register     
 175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ISAR[5];                      /*!< Offset: 0x60  ISA Feature Register              
 176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SCB_Type;                                                
 177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB CPUID Register Definitions */
 179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFul << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFul << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFul << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFul << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1ul << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1ul << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1ul << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1ul << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1ul << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1ul << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1ul << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFul << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1ul << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFul << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (0x1FFul << SCB_VTOR_TBLBASE_Pos)              /*!< SCB 
 225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFul << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFul << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFul << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1ul << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7ul << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1ul << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1ul << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1ul << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Control Register Definitions */
 252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1ul << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1ul << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1ul << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1ul << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1ul << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1ul << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1ul << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1ul << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1ul << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1ul << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1ul << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1ul << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1ul << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1ul << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1ul << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1ul << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1ul << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1ul << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1ul << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1ul << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                      
 314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1ul << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1ul << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1ul << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFul << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFul << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFul << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1ul << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1ul << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1ul << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1ul << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1ul << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1ul << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1ul << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1ul << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SCB */
 359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_SysTick CMSIS CM3 SysTick
 362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for SysTick
 363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x00  SysTick Control and Status Registe
 368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LOAD;                         /*!< Offset: 0x04  SysTick Reload Value Register     
 369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t VAL;                          /*!< Offset: 0x08  SysTick Current Value Register    
 370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CALIB;                        /*!< Offset: 0x0C  SysTick Calibration Register      
 371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } SysTick_Type;
 372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1ul << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1ul << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1ul << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1ul << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Reload Register Definitions */
 387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFul << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Current Register Definitions */
 391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* SysTick Calibration Register Definitions */
 395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1ul << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1ul << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFul << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_SysTick */
 404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_ITM CMSIS CM3 ITM
 407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Instrumentation Trace Macrocell (ITM)
 408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  union  
 413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   {
 414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint8_t    u8;                       /*!< Offset:       ITM Stimulus Port 8-bit           
 415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint16_t   u16;                      /*!< Offset:       ITM Stimulus Port 16-bit          
 416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     __O  uint32_t   u32;                      /*!< Offset:       ITM Stimulus Port 32-bit          
 417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   }  PORT [32];                               /*!< Offset: 0x00  ITM Stimulus Port Registers       
 418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0[864];                                 
 419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TER;                          /*!< Offset:       ITM Trace Enable Register         
 420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1[15];                                  
 421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TPR;                          /*!< Offset:       ITM Trace Privilege Register      
 422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED2[15];                                  
 423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t TCR;                          /*!< Offset:       ITM Trace Control Register        
 424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED3[29];                                  
 425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IWR;                          /*!< Offset:       ITM Integration Write Register    
 426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IRR;                          /*!< Offset:       ITM Integration Read Register     
 427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t IMCR;                         /*!< Offset:       ITM Integration Mode Control Regis
 428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED4[43];                                  
 429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LAR;                          /*!< Offset:       ITM Lock Access Register          
 430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t LSR;                          /*!< Offset:       ITM Lock Status Register          
 431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED5[6];                                   
 432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID4;                         /*!< Offset:       ITM Peripheral Identification Regi
 433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID5;                         /*!< Offset:       ITM Peripheral Identification Regi
 434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID6;                         /*!< Offset:       ITM Peripheral Identification Regi
 435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID7;                         /*!< Offset:       ITM Peripheral Identification Regi
 436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID0;                         /*!< Offset:       ITM Peripheral Identification Regi
 437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID1;                         /*!< Offset:       ITM Peripheral Identification Regi
 438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID2;                         /*!< Offset:       ITM Peripheral Identification Regi
 439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t PID3;                         /*!< Offset:       ITM Peripheral Identification Regi
 440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID0;                         /*!< Offset:       ITM Component  Identification Regi
 441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID1;                         /*!< Offset:       ITM Component  Identification Regi
 442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID2;                         /*!< Offset:       ITM Component  Identification Regi
 443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t CID3;                         /*!< Offset:       ITM Component  Identification Regi
 444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } ITM_Type;                                                
 445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFul << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Trace Control Register Definitions */
 451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1ul << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7Ful << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3ul << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1ul << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1ul << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1ul << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1ul << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1ul << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Write Register Definitions */
 476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1ul << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Read Register Definitions */
 480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1ul << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1ul << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ITM Lock Status Register Definitions */
 488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1ul << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1ul << ITM_LSR_Access_Pos)                    /*!< ITM 
 493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_LSR_Present_Msk                (1ul << ITM_LSR_Present_Pos)                   /*!< ITM 
 496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_ITM */
 497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_InterruptType CMSIS CM3 Interrupt Type
 500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Interrupt Type
 501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED0;
 506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t ICTR;                         /*!< Offset: 0x04  Interrupt Control Type Register */
 507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t ACTLR;                        /*!< Offset: 0x08  Auxiliary Control Register      */
 509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else
 510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****        uint32_t RESERVED1;
 511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } InterruptType_Type;
 513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Pos  0                                             /*!< Inte
 516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ICTR_INTLINESNUM_Msk (0x1Ful << InterruptType_ICTR_INTLINESNUM_Pos) /*!< Inte
 517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Auxiliary Control Register Definitions */
 519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Pos     2                                             /*!< Inte
 520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISFOLD_Msk    (1ul << InterruptType_ACTLR_DISFOLD_Pos)       /*!< Inte
 521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Pos  1                                             /*!< Inte
 523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISDEFWBUF_Msk (1ul << InterruptType_ACTLR_DISDEFWBUF_Pos)    /*!< Inte
 524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Pos  0                                             /*!< Inte
 526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType_ACTLR_DISMCYCINT_Msk (1ul << InterruptType_ACTLR_DISMCYCINT_Pos)    /*!< Inte
 527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_InterruptType */
 528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_MPU CMSIS CM3 MPU
 532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Memory Protection Unit (MPU)
 533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __I  uint32_t TYPE;                         /*!< Offset: 0x00  MPU Type Register                 
 538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t CTRL;                         /*!< Offset: 0x04  MPU Control Register              
 539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RNR;                          /*!< Offset: 0x08  MPU Region RNRber Register        
 540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR;                         /*!< Offset: 0x0C  MPU Region Base Address Register  
 541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR;                         /*!< Offset: 0x10  MPU Region Attribute and Size Regi
 542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A1;                      /*!< Offset: 0x14  MPU Alias 1 Region Base Address Re
 543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A1;                      /*!< Offset: 0x18  MPU Alias 1 Region Attribute and S
 544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A2;                      /*!< Offset: 0x1C  MPU Alias 2 Region Base Address Re
 545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A2;                      /*!< Offset: 0x20  MPU Alias 2 Region Attribute and S
 546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RBAR_A3;                      /*!< Offset: 0x24  MPU Alias 3 Region Base Address Re
 547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t RASR_A3;                      /*!< Offset: 0x28  MPU Alias 3 Region Attribute and S
 548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } MPU_Type;                                                
 549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Type Register */
 551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFul << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFul << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1ul << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Control Register */
 561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1ul << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1ul << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1ul << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Number Register */
 571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFul << MPU_RNR_REGION_Pos)                 /*!< MPU 
 573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Base Address Register */
 575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFul << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1ul << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFul << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* MPU Region Attribute and Size Register */
 585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1ul << MPU_RASR_XN_Pos)                       /*!< MPU 
 587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7ul << MPU_RASR_AP_Pos)                       /*!< MPU 
 590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7ul << MPU_RASR_TEX_Pos)                      /*!< MPU 
 593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_S_Msk                     (1ul << MPU_RASR_S_Pos)                        /*!< MPU 
 596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_C_Msk                     (1ul << MPU_RASR_C_Pos)                        /*!< MPU 
 599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_B_Msk                     (1ul << MPU_RASR_B_Pos)                        /*!< MPU 
 602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFul << MPU_RASR_SRD_Pos)                   /*!< MPU 
 605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1Ful << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1Ful << MPU_RASR_ENA_Pos)                  /*!< MPU 
 611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_MPU */
 613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_CoreDebug CMSIS CM3 Core Debug
 617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   memory mapped structure for Core Debug Register
 618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   @{
 619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** typedef struct
 621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DHCSR;                        /*!< Offset: 0x00  Debug Halting Control and Status R
 623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __O  uint32_t DCRSR;                        /*!< Offset: 0x04  Debug Core Register Selector Regis
 624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DCRDR;                        /*!< Offset: 0x08  Debug Core Register Data Register 
 625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __IO uint32_t DEMCR;                        /*!< Offset: 0x0C  Debug Exception and Monitor Contro
 626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** } CoreDebug_Type;
 627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Halting Control and Status Register */
 629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFul << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1ul << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1ul << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1ul << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1ul << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1ul << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1ul << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1ul << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1ul << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1ul << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1ul << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1ul << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Core Register Selector Register */
 666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1ul << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1Ful << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1ul << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1ul << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1ul << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1ul << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1ul << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1ul << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1ul << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1ul << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1ul << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1ul << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1ul << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1ul << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1ul << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_CoreDebug */
 712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCS_BASE            (0xE000E000)                              /*!< System Control Space Bas
 716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM_BASE            (0xE0000000)                              /*!< ITM Base Address        
 717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0)                              /*!< Core Debug Base Address 
 718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010)                      /*!< SysTick Base Address    
 719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100)                      /*!< NVIC Base Address       
 720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00)                      /*!< System Control Block Bas
 721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 723:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 724:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 725:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 726:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 727:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 728:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 729:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1)
 730:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90)                      /*!< Memory Protection Unit  
 731:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 732:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 733:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 734:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@}*/ /* end of group CMSIS_CM3_core_register */
 735:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 736:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 737:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*******************************************************************************
 738:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *                Hardware Abstraction Layer
 739:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  ******************************************************************************/
 740:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 741:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   )
 742:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 743:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 744:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 745:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined ( __ICCARM__ )
 746:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
 747:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
 748:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 749:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __GNUC__  )
 750:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
 751:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
 752:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 753:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif defined   (  __TASKING__  )
 754:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 755:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 756:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 757:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
 758:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 759:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 760:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ###################  Compiler specific Intrinsics  ########################### */
 761:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 762:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if defined ( __CC_ARM   ) /*------------------RealView Compiler -----------------*/
 763:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ARM armcc specific functions */
 764:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 765:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_fault_irq                __enable_fiq
 766:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_fault_irq               __disable_fiq
 767:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 768:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                             __nop
 769:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFI                             __wfi
 770:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __WFE                             __wfe
 771:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __SEV                             __sev
 772:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __ISB()                           __isb(0)
 773:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DSB()                           __dsb(0)
 774:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __DMB()                           __dmb(0)
 775:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __REV                             __rev
 776:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __RBIT                            __rbit
 777:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXB(ptr)                     ((unsigned char ) __ldrex(ptr))
 778:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXH(ptr)                     ((unsigned short) __ldrex(ptr))
 779:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __LDREXW(ptr)                     ((unsigned int  ) __ldrex(ptr))
 780:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 781:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 782:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 783:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 784:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 785:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long long __ldrexd(volatile void *ptr) */
 786:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic int __strexd(unsigned long long val, volatile void *ptr) */
 787:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __enable_irq();     */
 788:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __disable_irq();    */
 789:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 790:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 791:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 792:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
 793:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 794:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
 795:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 796:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
 797:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 798:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
 799:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 800:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 801:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
 802:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 803:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
 804:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 805:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
 806:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
 807:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 808:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
 809:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 810:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 811:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
 812:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 813:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
 814:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 815:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
 816:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
 817:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 818:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
 819:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 820:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 821:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
 822:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 823:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
 824:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 825:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
 826:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
 827:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 828:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
 829:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 830:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 831:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
 832:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 833:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 834:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 835:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 836:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
 837:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 838:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
 839:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 840:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 841:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
 842:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 843:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   value  value to reverse
 844:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         reversed value
 845:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 846:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
 847:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 848:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
 849:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 850:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 851:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (__ARMCC_VERSION < 400000)
 852:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 853:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 854:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 855:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 856:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 857:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 858:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __CLREX(void);
 859:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 860:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 861:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 862:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 863:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 864:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 865:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 866:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 867:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
 868:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 869:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 870:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 871:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 872:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 873:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 874:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 875:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 876:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
 877:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 878:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 879:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 880:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 881:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 882:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 883:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 884:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 885:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PRIMASK(void);
 886:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 887:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 888:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 889:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 890:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   priMask  PriMask
 891:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 892:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 893:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 894:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
 895:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 896:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 897:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 898:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 899:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 900:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 901:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 902:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 903:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
 904:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 905:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 906:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
 907:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 908:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask faultMask value
 909:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 910:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
 911:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 912:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
 913:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 914:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 915:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
 916:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
 917:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
 918:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 919:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
 920:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 921:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
 922:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 923:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 924:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
 925:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 926:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
 927:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 928:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
 929:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 930:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
 931:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 932:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #else  /* (__ARMCC_VERSION >= 400000)  */
 933:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 934:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 935:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Remove the exclusive lock created by ldrex
 936:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 937:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Removes the exclusive lock which is created by ldrex.
 938:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 939:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __CLREX                           __clrex
 940:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 941:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 942:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
 943:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 944:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
 945:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 946:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
 947:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 948:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 949:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 950:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 951:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regBasePri);
 952:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 953:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 954:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 955:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
 956:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 957:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
 958:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 959:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
 960:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 961:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 962:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 963:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regBasePri         __ASM("basepri");
 964:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regBasePri = (basePri & 0xff);
 965:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 966:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 967:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 968:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
 969:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 970:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
 971:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 972:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
 973:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 974:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_PRIMASK(void)
 975:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 976:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 977:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regPriMask);
 978:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 979:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 980:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 981:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
 982:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 983:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
 984:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 985:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
 986:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
 987:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 988:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
 989:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regPriMask         __ASM("primask");
 990:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regPriMask = (priMask);
 991:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
 992:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 993:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
 994:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
 995:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 996:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
 997:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
 998:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
 999:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1000:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_FAULTMASK(void)
1001:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1002:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1003:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regFaultMask);
1004:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1005:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1006:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1007:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1008:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1009:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1010:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1011:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1012:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1013:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
1014:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1015:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
1016:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regFaultMask = (faultMask & 1);
1017:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1018:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1019:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1020:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1021:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1022:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Control value
1023:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1024:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1025:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1026:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t __get_CONTROL(void)
1027:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1028:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1029:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return(__regControl);
1030:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1031:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1032:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1033:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1034:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1035:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1036:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1037:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1038:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1039:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __set_CONTROL(uint32_t control)
1040:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1041:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   register uint32_t __regControl         __ASM("control");
1042:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   __regControl = control;
1043:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1044:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1045:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif /* __ARMCC_VERSION  */ 
1046:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1047:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1048:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1049:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__ICCARM__)) /*------------------ ICC Compiler -------------------*/
1050:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* IAR iccarm specific functions */
1051:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1052:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __enable_irq                              __enable_interrupt        /*!< global Interrupt e
1053:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __disable_irq                             __disable_interrupt       /*!< global Interrupt d
1054:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1055:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM ("cpsie f"); }
1056:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM ("cpsid f"); }
1057:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1058:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #define __NOP                                     __no_operation            /*!< no operation intri
1059:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFI()                     { __ASM ("wfi"); }
1060:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __WFE()                     { __ASM ("wfe"); }
1061:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __SEV()                     { __ASM ("sev"); }
1062:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE  void __CLREX()                   { __ASM ("clrex"); }
1063:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1064:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __ISB(void)                                     */
1065:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DSB(void)                                     */
1066:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __DMB(void)                                     */
1067:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_PRIMASK();                                */
1068:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_PRIMASK();                                */
1069:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __set_FAULTMASK();                              */
1070:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic void __get_FAULTMASK();                              */
1071:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REV(uint32_t value);                      */
1072:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic uint32_t __REVSH(uint32_t value);                    */
1073:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __STREX(unsigned long, unsigned long); */
1074:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* intrinsic unsigned long __LDREX(unsigned long *);              */
1075:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1076:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1077:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1078:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1079:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1080:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1081:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1082:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1083:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1084:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1085:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1086:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1087:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1088:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1089:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1090:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1091:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1092:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1093:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1094:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1095:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1096:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1097:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1098:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1099:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1100:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1101:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1102:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1103:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1104:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1105:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1106:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1107:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1108:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1109:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1110:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1111:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1112:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1113:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1114:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1115:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1116:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1117:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1118:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1119:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1120:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1121:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1122:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1123:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1124:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1125:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1126:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1127:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1128:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1129:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1130:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1131:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1132:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1133:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1134:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1135:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1136:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1137:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1138:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1139:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1140:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1141:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1142:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit values)
1143:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1144:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1145:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1146:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1147:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1148:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1149:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1150:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1151:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1152:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1153:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1154:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1155:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1156:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1157:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1158:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1159:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1160:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1161:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1162:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1163:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1164:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1165:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1166:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1167:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1168:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1169:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1170:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1171:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1172:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1173:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1174:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1175:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1176:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1177:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1178:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1179:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1180:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1181:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1182:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1183:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1184:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1185:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1186:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1187:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1188:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1189:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1190:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1191:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1192:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1193:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1194:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1195:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1196:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1197:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1198:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1199:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1200:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1201:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__GNUC__)) /*------------------ GNU Compiler ---------------------*/
1202:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* GNU gcc specific functions */
1203:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_irq()               { __ASM volatile ("cpsie i"); }
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 3262              		.loc 16 1205 0
 3263              		.syntax unified
 3264              	@ 1205 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 3265 00be 72B6     		cpsid i
 3266              	@ 0 "" 2
 3267              		.thumb
 3268              		.syntax unified
 3269              	.LBE289:
 3270              	.LBE288:
 107:./inc/UsartWithBuffer.h ****     	/* Advance buffer head. */
 3271              		.loc 15 107 0
 3272 00c0 EA18     		adds	r2, r5, r3
 109:./inc/UsartWithBuffer.h ****     	__enable_irq();
 3273              		.loc 15 109 0
 3274 00c2 0133     		adds	r3, r3, #1
 3275              	.LVL413:
 3276 00c4 C3F30903 		ubfx	r3, r3, #0, #10
 3277              	.LVL414:
 107:./inc/UsartWithBuffer.h ****     	/* Advance buffer head. */
 3278              		.loc 15 107 0
 3279 00c8 82F83610 		strb	r1, [r2, #54]
 109:./inc/UsartWithBuffer.h ****     	__enable_irq();
 3280              		.loc 15 109 0
 3281 00cc 6B86     		strh	r3, [r5, #50]	@ movhi
 3282              	.LBB290:
 3283              	.LBB291:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 3284              		.loc 16 1204 0
 3285              		.syntax unified
 3286              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 3287 00ce 62B6     		cpsie i
 3288              	@ 0 "" 2
 3289              		.thumb
 3290              		.syntax unified
 3291              	.LBE291:
 3292              	.LBE290:
 3293              		.loc 15 113 0
 3294 00d0 0122     		movs	r2, #1
 3295 00d2 40F22771 		movw	r1, #1831
 3296 00d6 4846     		mov	r0, r9
 3297 00d8 FFF7FEFF 		bl	USART_ITConfig
 3298              	.LVL415:
 3299              	.L168:
 3300              	.LBE293:
 3301              	.LBE296:
  44:./lib/ros_lib/STM32Hardware.h ****         while( !com->TXBuffer_FreeSpace() );
 3302              		.loc 14 44 0
 3303 00dc 08F10108 		add	r8, r8, #1
 3304              	.LVL416:
 3305 00e0 D7E7     		b	.L169
 3306              	.LVL417:
 3307              	.L166:
 3308              	.LBE297:
 3309              	.LBE298:
 3310              	.LBB299:
 3311              	.LBB300:
 3312              	.LBB301:
 3313              	.LBB302:
 3314              	.LBB303:
 3315              	.LBB304:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3316              		.loc 3 25 0
 3317 00e2 0A4B     		ldr	r3, .L174+4
 3318              	.LBE304:
 3319              	.LBE303:
 3320              	.LBE302:
 447:./lib/ros_lib/ros/node_handle.h ****           return l;
 448:./lib/ros_lib/ros/node_handle.h ****         }else{
 449:./lib/ros_lib/ros/node_handle.h ****           logerror("Message from device dropped: message larger than buffer.");
 450:./lib/ros_lib/ros/node_handle.h ****           return -1;
 451:./lib/ros_lib/ros/node_handle.h ****         }
 452:./lib/ros_lib/ros/node_handle.h ****       }
 453:./lib/ros_lib/ros/node_handle.h **** 
 454:./lib/ros_lib/ros/node_handle.h ****       /********************************************************************
 455:./lib/ros_lib/ros/node_handle.h ****        * Logging
 456:./lib/ros_lib/ros/node_handle.h ****        */
 457:./lib/ros_lib/ros/node_handle.h **** 
 458:./lib/ros_lib/ros/node_handle.h ****     private:
 459:./lib/ros_lib/ros/node_handle.h ****       void log(char byte, const char * msg){
 460:./lib/ros_lib/ros/node_handle.h ****         rosserial_msgs::Log l;
 461:./lib/ros_lib/ros/node_handle.h ****         l.level= byte;
 462:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 463:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3321              		.loc 10 463 0
 3322 00e4 01AA     		add	r2, sp, #4
 3323              	.LVL418:
 3324              	.LBB307:
 3325              	.LBB306:
 3326              	.LBB305:
  25:./lib/ros_lib/rosserial_msgs/Log.h ****     {
 3327              		.loc 3 25 0
 3328 00e6 0193     		str	r3, [sp, #4]
 3329              	.LVL419:
 3330              	.LBE305:
 3331              	.LBE306:
 3332              	.LBE307:
 461:./lib/ros_lib/ros/node_handle.h ****         l.msg = (char*)msg;
 3333              		.loc 10 461 0
 3334 00e8 0323     		movs	r3, #3
 3335 00ea 8DF80830 		strb	r3, [sp, #8]
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3336              		.loc 10 462 0
 3337 00ee 084B     		ldr	r3, .L174+8
 3338              		.loc 10 463 0
 3339 00f0 0721     		movs	r1, #7
 3340              	.LVL420:
 462:./lib/ros_lib/ros/node_handle.h ****         publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 3341              		.loc 10 462 0
 3342 00f2 0393     		str	r3, [sp, #12]
 3343              		.loc 10 463 0
 3344 00f4 2368     		ldr	r3, [r4]
 3345 00f6 2046     		mov	r0, r4
 3346 00f8 1B68     		ldr	r3, [r3]
 3347 00fa 9847     		blx	r3
 3348              	.LVL421:
 3349              	.LBE301:
 3350              	.LBE300:
 3351              	.LBE299:
 450:./lib/ros_lib/ros/node_handle.h ****         }
 3352              		.loc 10 450 0
 3353 00fc 4FF0FF36 		mov	r6, #-1
 3354              	.LVL422:
 3355              	.L161:
 452:./lib/ros_lib/ros/node_handle.h **** 
 3356              		.loc 10 452 0
 3357 0100 3046     		mov	r0, r6
 3358 0102 05B0     		add	sp, sp, #20
 3359              	.LCFI19:
 3360              		.cfi_def_cfa_offset 28
 3361              		@ sp needed
 3362 0104 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3363              	.L175:
 3364              		.align	2
 3365              	.L174:
 3366 0108 00000000 		.word	.LANCHOR1
 3367 010c 08000000 		.word	_ZTVN14rosserial_msgs3LogE+8
 3368 0110 00000000 		.word	.LC19
 3369 0114 00380140 		.word	1073821696
 3370              		.cfi_endproc
 3371              	.LFE1873:
 3372              		.fnend
 3374              		.section	.text._ZN3ros3Msg19serializeAvrFloat64EPhf,"axG",%progbits,_ZN3ros3Msg19serializeAvrFloat
 3375              		.align	1
 3376              		.weak	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3377              		.syntax unified
 3378              		.thumb
 3379              		.thumb_func
 3380              		.fpu softvfp
 3382              	_ZN3ros3Msg19serializeAvrFloat64EPhf:
 3383              		.fnstart
 3384              	.LFB1356:
 3385              		.file 17 "./lib/ros_lib/ros/msg.h"
   1:./lib/ros_lib/ros/msg.h **** /* 
   2:./lib/ros_lib/ros/msg.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/msg.h ****  *
   4:./lib/ros_lib/ros/msg.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/msg.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/msg.h ****  *
   7:./lib/ros_lib/ros/msg.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/msg.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/msg.h ****  * are met:
  10:./lib/ros_lib/ros/msg.h ****  *
  11:./lib/ros_lib/ros/msg.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/msg.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/msg.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/msg.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/msg.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/msg.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/msg.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/msg.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/msg.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/msg.h ****  *
  21:./lib/ros_lib/ros/msg.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/msg.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/msg.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/msg.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/msg.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/msg.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/msg.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/msg.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/msg.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/msg.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/msg.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/msg.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/msg.h ****  */
  34:./lib/ros_lib/ros/msg.h **** 
  35:./lib/ros_lib/ros/msg.h **** #ifndef _ROS_MSG_H_
  36:./lib/ros_lib/ros/msg.h **** #define _ROS_MSG_H_
  37:./lib/ros_lib/ros/msg.h **** 
  38:./lib/ros_lib/ros/msg.h **** #include <stdint.h>
  39:./lib/ros_lib/ros/msg.h **** 
  40:./lib/ros_lib/ros/msg.h **** namespace ros {
  41:./lib/ros_lib/ros/msg.h **** 
  42:./lib/ros_lib/ros/msg.h **** /* Base Message Type */
  43:./lib/ros_lib/ros/msg.h **** class Msg
  44:./lib/ros_lib/ros/msg.h **** {
  45:./lib/ros_lib/ros/msg.h **** public:
  46:./lib/ros_lib/ros/msg.h ****   virtual int serialize(unsigned char *outbuffer) const = 0;
  47:./lib/ros_lib/ros/msg.h ****   virtual int deserialize(unsigned char *data) = 0;
  48:./lib/ros_lib/ros/msg.h ****   virtual const char * getType() = 0;
  49:./lib/ros_lib/ros/msg.h ****   virtual const char * getMD5() = 0;
  50:./lib/ros_lib/ros/msg.h **** 
  51:./lib/ros_lib/ros/msg.h ****   /**
  52:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles promoting a 32bit float to a 64bit
  53:./lib/ros_lib/ros/msg.h ****    *        double, so that AVR can publish messages containing float64
  54:./lib/ros_lib/ros/msg.h ****    *        fields, despite AVV having no native support for double.
  55:./lib/ros_lib/ros/msg.h ****    *
  56:./lib/ros_lib/ros/msg.h ****    * @param[out] outbuffer pointer for buffer to serialize to.
  57:./lib/ros_lib/ros/msg.h ****    * @param[in] f value to serialize.
  58:./lib/ros_lib/ros/msg.h ****    *
  59:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  60:./lib/ros_lib/ros/msg.h ****    *
  61:./lib/ros_lib/ros/msg.h ****    */
  62:./lib/ros_lib/ros/msg.h ****   static int serializeAvrFloat64(unsigned char* outbuffer, const float f)
 3386              		.loc 17 62 0
 3387              		.cfi_startproc
 3388              		@ args = 0, pretend = 0, frame = 0
 3389              		@ frame_needed = 0, uses_anonymous_args = 0
 3390              	.LVL423:
 3391 0000 38B5     		push	{r3, r4, r5, lr}
 3392              	.LCFI20:
 3393              		.cfi_def_cfa_offset 16
 3394              		.cfi_offset 3, -16
 3395              		.cfi_offset 4, -12
 3396              		.cfi_offset 5, -8
 3397              		.cfi_offset 14, -4
  63:./lib/ros_lib/ros/msg.h ****   {
  64:./lib/ros_lib/ros/msg.h ****     const int32_t* val = (int32_t*) &f;
  65:./lib/ros_lib/ros/msg.h ****     int32_t exp = ((*val >> 23) & 255);
 3398              		.loc 17 65 0
 3399 0002 C1F3C754 		ubfx	r4, r1, #23, #8
 3400              	.LVL424:
  62:./lib/ros_lib/ros/msg.h ****   {
 3401              		.loc 17 62 0
 3402 0006 0546     		mov	r5, r0
 3403              		.loc 17 65 0
 3404 0008 0A46     		mov	r2, r1
  62:./lib/ros_lib/ros/msg.h ****   {
 3405              		.loc 17 62 0
 3406 000a 0846     		mov	r0, r1
 3407              	.LVL425:
  66:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3408              		.loc 17 66 0
 3409 000c 0CB1     		cbz	r4, .L177
  67:./lib/ros_lib/ros/msg.h ****     {
  68:./lib/ros_lib/ros/msg.h ****       exp += 1023 - 127;
 3410              		.loc 17 68 0
 3411 000e 04F56074 		add	r4, r4, #896
 3412              	.LVL426:
 3413              	.L177:
  69:./lib/ros_lib/ros/msg.h ****     }
  70:./lib/ros_lib/ros/msg.h **** 
  71:./lib/ros_lib/ros/msg.h ****     int32_t sig = *val;
  72:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3414              		.loc 17 72 0
 3415 0012 0021     		movs	r1, #0
 3416              	.LVL427:
 3417 0014 2970     		strb	r1, [r5]
 3418              	.LVL428:
  73:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3419              		.loc 17 73 0
 3420 0016 6970     		strb	r1, [r5, #1]
 3421              	.LVL429:
  74:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = 0;
 3422              		.loc 17 74 0
 3423 0018 A970     		strb	r1, [r5, #2]
 3424              	.LVL430:
  75:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig << 5) & 0xff;
 3425              		.loc 17 75 0
 3426 001a 5101     		lsls	r1, r2, #5
 3427 001c E970     		strb	r1, [r5, #3]
 3428              	.LVL431:
  76:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 3) & 0xff;
 3429              		.loc 17 76 0
 3430 001e D110     		asrs	r1, r2, #3
 3431 0020 2971     		strb	r1, [r5, #4]
 3432              	.LVL432:
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3433              		.loc 17 77 0
 3434 0022 D112     		asrs	r1, r2, #11
  78:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = ((exp << 4) & 0xF0) | ((sig >> 19) & 0x0F);
 3435              		.loc 17 78 0
 3436 0024 C2F3C342 		ubfx	r2, r2, #19, #4
 3437 0028 42EA0412 		orr	r2, r2, r4, lsl #4
  77:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (sig >> 11) & 0xff;
 3438              		.loc 17 77 0
 3439 002c 6971     		strb	r1, [r5, #5]
 3440              	.LVL433:
 3441              		.loc 17 78 0
 3442 002e AA71     		strb	r2, [r5, #6]
 3443              	.LVL434:
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
  80:./lib/ros_lib/ros/msg.h **** 
  81:./lib/ros_lib/ros/msg.h ****     // Mark negative bit as necessary.
  82:./lib/ros_lib/ros/msg.h ****     if (f < 0)
 3444              		.loc 17 82 0
 3445 0030 0021     		movs	r1, #0
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3446              		.loc 17 79 0
 3447 0032 C4F30714 		ubfx	r4, r4, #4, #8
 3448              	.LVL435:
 3449              		.loc 17 82 0
 3450 0036 FFF7FEFF 		bl	__aeabi_fcmplt
 3451              	.LVL436:
 3452 003a 10B9     		cbnz	r0, .L178
  79:./lib/ros_lib/ros/msg.h ****     *(outbuffer++) = (exp >> 4) & 0x7F;
 3453              		.loc 17 79 0
 3454 003c EC71     		strb	r4, [r5, #7]
 3455              	.L179:
  83:./lib/ros_lib/ros/msg.h ****     {
  84:./lib/ros_lib/ros/msg.h ****       *(outbuffer - 1) |= 0x80;
  85:./lib/ros_lib/ros/msg.h ****     }
  86:./lib/ros_lib/ros/msg.h **** 
  87:./lib/ros_lib/ros/msg.h ****     return 8;
  88:./lib/ros_lib/ros/msg.h ****   }
 3456              		.loc 17 88 0
 3457 003e 0820     		movs	r0, #8
 3458 0040 38BD     		pop	{r3, r4, r5, pc}
 3459              	.LVL437:
 3460              	.L178:
  84:./lib/ros_lib/ros/msg.h ****     }
 3461              		.loc 17 84 0
 3462 0042 64F07F03 		orn	r3, r4, #127
 3463 0046 EB71     		strb	r3, [r5, #7]
 3464 0048 F9E7     		b	.L179
 3465              		.cfi_endproc
 3466              	.LFE1356:
 3467              		.cantunwind
 3468              		.fnend
 3470              		.section	.text._ZNK12roberto_msgs10MotorState9serializeEPh,"axG",%progbits,_ZNK12roberto_msgs10Mot
 3471              		.align	1
 3472              		.weak	_ZNK12roberto_msgs10MotorState9serializeEPh
 3473              		.syntax unified
 3474              		.thumb
 3475              		.thumb_func
 3476              		.fpu softvfp
 3478              	_ZNK12roberto_msgs10MotorState9serializeEPh:
 3479              		.fnstart
 3480              	.LFB1593:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3481              		.loc 9 37 0
 3482              		.cfi_startproc
 3483              		@ args = 0, pretend = 0, frame = 0
 3484              		@ frame_needed = 0, uses_anonymous_args = 0
 3485              	.LVL438:
 3486 0000 70B5     		push	{r4, r5, r6, lr}
 3487              	.LCFI21:
 3488              		.cfi_def_cfa_offset 16
 3489              		.cfi_offset 4, -16
 3490              		.cfi_offset 5, -12
 3491              		.cfi_offset 6, -8
 3492              		.cfi_offset 14, -4
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3493              		.loc 9 37 0
 3494 0002 0546     		mov	r5, r0
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3495              		.loc 9 40 0
 3496 0004 0430     		adds	r0, r0, #4
 3497              	.LVL439:
  37:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3498              		.loc 9 37 0
 3499 0006 0E46     		mov	r6, r1
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3500              		.loc 9 40 0
 3501 0008 FFF7FEFF 		bl	_ZNK8std_msgs6Header9serializeEPh
 3502              	.LVL440:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3503              		.loc 9 41 0
 3504 000c A969     		ldr	r1, [r5, #24]	@ float
  40:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_angle);
 3505              		.loc 9 40 0
 3506 000e 0446     		mov	r4, r0
 3507              	.LVL441:
  41:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->heading_velocity);
 3508              		.loc 9 41 0
 3509 0010 3018     		adds	r0, r6, r0
 3510              	.LVL442:
 3511 0012 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3512              	.LVL443:
 3513 0016 0444     		add	r4, r4, r0
 3514              	.LVL444:
  42:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->speed);
 3515              		.loc 9 42 0
 3516 0018 E969     		ldr	r1, [r5, #28]	@ float
 3517 001a 3019     		adds	r0, r6, r4
 3518 001c FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3519              	.LVL445:
 3520 0020 0444     		add	r4, r4, r0
 3521              	.LVL446:
  43:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += serializeAvrFloat64(outbuffer + offset, this->acceleration);
 3522              		.loc 9 43 0
 3523 0022 296A     		ldr	r1, [r5, #32]	@ float
 3524 0024 3019     		adds	r0, r6, r4
 3525 0026 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3526              	.LVL447:
 3527 002a 0444     		add	r4, r4, r0
 3528              	.LVL448:
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3529              		.loc 9 44 0
 3530 002c 696A     		ldr	r1, [r5, #36]	@ float
 3531 002e 3019     		adds	r0, r6, r4
 3532 0030 FFF7FEFF 		bl	_ZN3ros3Msg19serializeAvrFloat64EPhf
 3533              	.LVL449:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3534              		.loc 9 45 0
 3535 0034 95F82830 		ldrb	r3, [r5, #40]	@ zero_extendqisi2
  44:./lib/ros_lib/roberto_msgs/MotorState.h ****       *(outbuffer + offset + 0) = (this->mode >> (8 * 0)) & 0xFF;
 3536              		.loc 9 44 0
 3537 0038 2044     		add	r0, r0, r4
 3538              	.LVL450:
  45:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3539              		.loc 9 45 0
 3540 003a 3354     		strb	r3, [r6, r0]
 3541              	.LVL451:
  48:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3542              		.loc 9 48 0
 3543 003c 0130     		adds	r0, r0, #1
 3544              	.LVL452:
 3545 003e 70BD     		pop	{r4, r5, r6, pc}
 3546              		.cfi_endproc
 3547              	.LFE1593:
 3548              		.cantunwind
 3549              		.fnend
 3551              		.section	.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf,"axG",%progbits,_ZN3ros3Msg21deserializeAv
 3552              		.align	1
 3553              		.weak	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3554              		.syntax unified
 3555              		.thumb
 3556              		.thumb_func
 3557              		.fpu softvfp
 3559              	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf:
 3560              		.fnstart
 3561              	.LFB1357:
  89:./lib/ros_lib/ros/msg.h **** 
  90:./lib/ros_lib/ros/msg.h ****   /**
  91:./lib/ros_lib/ros/msg.h ****    * @brief This tricky function handles demoting a 64bit double to a
  92:./lib/ros_lib/ros/msg.h ****    *        32bit float, so that AVR can understand messages containing
  93:./lib/ros_lib/ros/msg.h ****    *        float64 fields, despite AVR having no native support for double.
  94:./lib/ros_lib/ros/msg.h ****    *
  95:./lib/ros_lib/ros/msg.h ****    * @param[in] inbuffer pointer for buffer to deserialize from.
  96:./lib/ros_lib/ros/msg.h ****    * @param[out] f pointer to place the deserialized value in.
  97:./lib/ros_lib/ros/msg.h ****    *
  98:./lib/ros_lib/ros/msg.h ****    * @return number of bytes to advance the buffer pointer.
  99:./lib/ros_lib/ros/msg.h ****    */
 100:./lib/ros_lib/ros/msg.h ****   static int deserializeAvrFloat64(const unsigned char* inbuffer, float* f)
 3562              		.loc 17 100 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              	.LVL453:
 3567 0000 10B5     		push	{r4, lr}
 3568              	.LCFI22:
 3569              		.cfi_def_cfa_offset 8
 3570              		.cfi_offset 4, -8
 3571              		.cfi_offset 14, -4
 3572 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 3573 0004 5B09     		lsrs	r3, r3, #5
 101:./lib/ros_lib/ros/msg.h ****   {
 102:./lib/ros_lib/ros/msg.h ****     uint32_t* val = (uint32_t*)f;
 103:./lib/ros_lib/ros/msg.h ****     inbuffer += 3;
 104:./lib/ros_lib/ros/msg.h **** 
 105:./lib/ros_lib/ros/msg.h ****     // Copy truncated mantissa.
 106:./lib/ros_lib/ros/msg.h ****     *val = ((uint32_t)(*(inbuffer++)) >> 5 & 0x07);
 3574              		.loc 17 106 0
 3575 0006 0B60     		str	r3, [r1]
 3576              	.LVL454:
 107:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 3;
 3577              		.loc 17 107 0
 3578 0008 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2
 3579 000a 43EAC203 		orr	r3, r3, r2, lsl #3
 3580 000e 0B60     		str	r3, [r1]
 3581              	.LVL455:
 108:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0xff) << 11;
 3582              		.loc 17 108 0
 3583 0010 4279     		ldrb	r2, [r0, #5]	@ zero_extendqisi2
 3584 0012 43EAC222 		orr	r2, r3, r2, lsl #11
 3585 0016 0A60     		str	r2, [r1]
 109:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*inbuffer) & 0x0f) << 19;
 3586              		.loc 17 109 0
 3587 0018 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 3588 001a DB04     		lsls	r3, r3, #19
 3589 001c 03F4F003 		and	r3, r3, #7864320
 3590 0020 1343     		orrs	r3, r3, r2
 3591 0022 0B60     		str	r3, [r1]
 3592              	.LVL456:
 110:./lib/ros_lib/ros/msg.h **** 
 111:./lib/ros_lib/ros/msg.h ****     // Copy truncated exponent.
 112:./lib/ros_lib/ros/msg.h ****     uint32_t exp = ((uint32_t)(*(inbuffer++)) & 0xf0)>>4;
 113:./lib/ros_lib/ros/msg.h ****     exp |= ((uint32_t)(*inbuffer) & 0x7f) << 4;
 3593              		.loc 17 113 0
 3594 0024 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 3595 0026 8479     		ldrb	r4, [r0, #6]	@ zero_extendqisi2
 3596 0028 1201     		lsls	r2, r2, #4
 3597 002a 02F4FE62 		and	r2, r2, #2032
 3598              	.LVL457:
 114:./lib/ros_lib/ros/msg.h ****     if (exp != 0)
 3599              		.loc 17 114 0
 3600 002e 52EA1412 		orrs	r2, r2, r4, lsr #4
 3601              	.LVL458:
 115:./lib/ros_lib/ros/msg.h ****     {
 116:./lib/ros_lib/ros/msg.h ****       *val |= ((exp) - 1023 + 127) << 23;
 3602              		.loc 17 116 0
 3603 0032 1EBF     		ittt	ne
 3604 0034 A2F56072 		subne	r2, r2, #896
 3605              	.LVL459:
 3606 0038 43EAC253 		orrne	r3, r3, r2, lsl #23
 3607 003c 0B60     		strne	r3, [r1]
 3608              	.LVL460:
 117:./lib/ros_lib/ros/msg.h ****     }  
 118:./lib/ros_lib/ros/msg.h **** 
 119:./lib/ros_lib/ros/msg.h ****     // Copy negative sign.
 120:./lib/ros_lib/ros/msg.h ****     *val |= ((uint32_t)(*(inbuffer++)) & 0x80) << 24;
 3609              		.loc 17 120 0
 3610 003e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 3611 0040 0A68     		ldr	r2, [r1]
 3612 0042 1B06     		lsls	r3, r3, #24
 3613 0044 03F00043 		and	r3, r3, #-2147483648
 3614 0048 1343     		orrs	r3, r3, r2
 3615 004a 0B60     		str	r3, [r1]
 121:./lib/ros_lib/ros/msg.h **** 
 122:./lib/ros_lib/ros/msg.h ****     return 8;
 123:./lib/ros_lib/ros/msg.h ****   }
 3616              		.loc 17 123 0
 3617 004c 0820     		movs	r0, #8
 3618              	.LVL461:
 3619 004e 10BD     		pop	{r4, pc}
 3620              		.cfi_endproc
 3621              	.LFE1357:
 3622              		.cantunwind
 3623              		.fnend
 3625              		.section	.text._ZN12roberto_msgs10MotorState11deserializeEPh,"axG",%progbits,_ZN12roberto_msgs10Mo
 3626              		.align	1
 3627              		.weak	_ZN12roberto_msgs10MotorState11deserializeEPh
 3628              		.syntax unified
 3629              		.thumb
 3630              		.thumb_func
 3631              		.fpu softvfp
 3633              	_ZN12roberto_msgs10MotorState11deserializeEPh:
 3634              		.fnstart
 3635              	.LFB1594:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3636              		.loc 9 50 0
 3637              		.cfi_startproc
 3638              		@ args = 0, pretend = 0, frame = 0
 3639              		@ frame_needed = 0, uses_anonymous_args = 0
 3640              	.LVL462:
 3641 0000 70B5     		push	{r4, r5, r6, lr}
 3642              	.LCFI23:
 3643              		.cfi_def_cfa_offset 16
 3644              		.cfi_offset 4, -16
 3645              		.cfi_offset 5, -12
 3646              		.cfi_offset 6, -8
 3647              		.cfi_offset 14, -4
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3648              		.loc 9 50 0
 3649 0002 0546     		mov	r5, r0
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3650              		.loc 9 53 0
 3651 0004 0430     		adds	r0, r0, #4
 3652              	.LVL463:
  50:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 3653              		.loc 9 50 0
 3654 0006 0E46     		mov	r6, r1
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3655              		.loc 9 53 0
 3656 0008 FFF7FEFF 		bl	_ZN8std_msgs6Header11deserializeEPh
 3657              	.LVL464:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3658              		.loc 9 54 0
 3659 000c 05F11801 		add	r1, r5, #24
  53:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_angle));
 3660              		.loc 9 53 0
 3661 0010 0446     		mov	r4, r0
 3662              	.LVL465:
  54:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->heading_velocity));
 3663              		.loc 9 54 0
 3664 0012 3018     		adds	r0, r6, r0
 3665              	.LVL466:
 3666 0014 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3667              	.LVL467:
 3668 0018 0444     		add	r4, r4, r0
 3669              	.LVL468:
  55:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->speed));
 3670              		.loc 9 55 0
 3671 001a 05F11C01 		add	r1, r5, #28
 3672 001e 3019     		adds	r0, r6, r4
 3673 0020 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3674              	.LVL469:
 3675 0024 0444     		add	r4, r4, r0
 3676              	.LVL470:
  56:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += deserializeAvrFloat64(inbuffer + offset, &(this->acceleration));
 3677              		.loc 9 56 0
 3678 0026 05F12001 		add	r1, r5, #32
 3679 002a 3019     		adds	r0, r6, r4
 3680 002c FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3681              	.LVL471:
 3682 0030 0444     		add	r4, r4, r0
 3683              	.LVL472:
  57:./lib/ros_lib/roberto_msgs/MotorState.h ****       this->mode =  ((uint8_t) (*(inbuffer + offset)));
 3684              		.loc 9 57 0
 3685 0032 05F12401 		add	r1, r5, #36
 3686 0036 3019     		adds	r0, r6, r4
 3687 0038 FFF7FEFF 		bl	_ZN3ros3Msg21deserializeAvrFloat64EPKhPf
 3688              	.LVL473:
 3689 003c 2044     		add	r0, r0, r4
 3690              	.LVL474:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3691              		.loc 9 58 0
 3692 003e 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3693              		.loc 9 61 0
 3694 0040 0130     		adds	r0, r0, #1
 3695              	.LVL475:
  58:./lib/ros_lib/roberto_msgs/MotorState.h ****       offset += sizeof(this->mode);
 3696              		.loc 9 58 0
 3697 0042 85F82830 		strb	r3, [r5, #40]
 3698              	.LVL476:
  61:./lib/ros_lib/roberto_msgs/MotorState.h **** 
 3699              		.loc 9 61 0
 3700 0046 70BD     		pop	{r4, r5, r6, pc}
 3701              		.cfi_endproc
 3702              	.LFE1594:
 3703              		.cantunwind
 3704              		.fnend
 3706              		.section	.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh,"axG",%progbits,_ZN3r
 3707              		.align	1
 3708              		.weak	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 3709              		.syntax unified
 3710              		.thumb
 3711              		.thumb_func
 3712              		.fpu softvfp
 3714              	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:
 3715              		.fnstart
 3716              	.LFB1914:
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3717              		.loc 11 72 0
 3718              		.cfi_startproc
 3719              		@ args = 0, pretend = 0, frame = 0
 3720              		@ frame_needed = 0, uses_anonymous_args = 0
 3721              	.LVL477:
 3722 0000 70B5     		push	{r4, r5, r6, lr}
 3723              	.LCFI24:
 3724              		.cfi_def_cfa_offset 16
 3725              		.cfi_offset 4, -16
 3726              		.cfi_offset 5, -12
 3727              		.cfi_offset 6, -8
 3728              		.cfi_offset 14, -4
  72:./lib/ros_lib/ros/subscriber.h ****         msg.deserialize(data);
 3729              		.loc 11 72 0
 3730 0002 0546     		mov	r5, r0
  73:./lib/ros_lib/ros/subscriber.h ****         this->cb_(msg);
 3731              		.loc 11 73 0
 3732 0004 00F10C04 		add	r4, r0, #12
 3733 0008 2046     		mov	r0, r4
 3734              	.LVL478:
 3735 000a FFF7FEFF 		bl	_ZN12roberto_msgs10MotorState11deserializeEPh
 3736              	.LVL479:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3737              		.loc 11 74 0
 3738 000e AB6B     		ldr	r3, [r5, #56]
 3739 0010 2046     		mov	r0, r4
  75:./lib/ros_lib/ros/subscriber.h **** 
 3740              		.loc 11 75 0
 3741 0012 BDE87040 		pop	{r4, r5, r6, lr}
 3742              	.LCFI25:
 3743              		.cfi_restore 14
 3744              		.cfi_restore 6
 3745              		.cfi_restore 5
 3746              		.cfi_restore 4
 3747              		.cfi_def_cfa_offset 0
 3748              	.LVL480:
  74:./lib/ros_lib/ros/subscriber.h ****       }
 3749              		.loc 11 74 0
 3750 0016 1847     		bx	r3	@ indirect register sibling call
 3751              	.LVL481:
 3752              		.cfi_endproc
 3753              	.LFE1914:
 3754              		.cantunwind
 3755              		.fnend
 3757              		.section	.text._ZN3ros9Publisher7publishEPKNS_3MsgE,"axG",%progbits,_ZN3ros9Publisher7publishEPKNS
 3758              		.align	1
 3759              		.weak	_ZN3ros9Publisher7publishEPKNS_3MsgE
 3760              		.syntax unified
 3761              		.thumb
 3762              		.thumb_func
 3763              		.fpu softvfp
 3765              	_ZN3ros9Publisher7publishEPKNS_3MsgE:
 3766              		.fnstart
 3767              	.LFB1416:
 3768              		.file 18 "./lib/ros_lib/ros/publisher.h"
   1:./lib/ros_lib/ros/publisher.h **** /* 
   2:./lib/ros_lib/ros/publisher.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/publisher.h ****  *
   4:./lib/ros_lib/ros/publisher.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/publisher.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/publisher.h ****  *
   7:./lib/ros_lib/ros/publisher.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/publisher.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/publisher.h ****  * are met:
  10:./lib/ros_lib/ros/publisher.h ****  *
  11:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/publisher.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/publisher.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/publisher.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/publisher.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/publisher.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/publisher.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/publisher.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/publisher.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/publisher.h ****  *
  21:./lib/ros_lib/ros/publisher.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/publisher.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/publisher.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/publisher.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/publisher.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/publisher.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/publisher.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/publisher.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/publisher.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/publisher.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/publisher.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/publisher.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/publisher.h ****  */
  34:./lib/ros_lib/ros/publisher.h **** 
  35:./lib/ros_lib/ros/publisher.h **** #ifndef _ROS_PUBLISHER_H_
  36:./lib/ros_lib/ros/publisher.h **** #define _ROS_PUBLISHER_H_
  37:./lib/ros_lib/ros/publisher.h **** 
  38:./lib/ros_lib/ros/publisher.h **** #include "rosserial_msgs/TopicInfo.h"
  39:./lib/ros_lib/ros/publisher.h **** #include "node_handle.h"
  40:./lib/ros_lib/ros/publisher.h **** 
  41:./lib/ros_lib/ros/publisher.h **** namespace ros {
  42:./lib/ros_lib/ros/publisher.h **** 
  43:./lib/ros_lib/ros/publisher.h ****   /* Generic Publisher */
  44:./lib/ros_lib/ros/publisher.h ****   class Publisher
  45:./lib/ros_lib/ros/publisher.h ****   {
  46:./lib/ros_lib/ros/publisher.h ****     public:
  47:./lib/ros_lib/ros/publisher.h ****       Publisher( const char * topic_name, Msg * msg, int endpoint=rosserial_msgs::TopicInfo::ID_PUB
  48:./lib/ros_lib/ros/publisher.h ****         topic_(topic_name), 
  49:./lib/ros_lib/ros/publisher.h ****         msg_(msg),
  50:./lib/ros_lib/ros/publisher.h ****         endpoint_(endpoint) {};
  51:./lib/ros_lib/ros/publisher.h **** 
  52:./lib/ros_lib/ros/publisher.h ****       int publish( const Msg * msg ) { return nh_->publish(id_, msg); };
 3769              		.loc 18 52 0
 3770              		.cfi_startproc
 3771              		@ args = 0, pretend = 0, frame = 0
 3772              		@ frame_needed = 0, uses_anonymous_args = 0
 3773              		@ link register save eliminated.
 3774              	.LVL482:
 3775 0000 C368     		ldr	r3, [r0, #12]
 3776 0002 10B4     		push	{r4}
 3777              	.LCFI26:
 3778              		.cfi_def_cfa_offset 4
 3779              		.cfi_offset 4, -4
 3780              		.loc 18 52 0
 3781 0004 1A68     		ldr	r2, [r3]
 3782 0006 1468     		ldr	r4, [r2]
 3783 0008 0A46     		mov	r2, r1
 3784 000a 8168     		ldr	r1, [r0, #8]
 3785              	.LVL483:
 3786 000c 1846     		mov	r0, r3
 3787              	.LVL484:
 3788 000e 2346     		mov	r3, r4
 3789 0010 10BC     		pop	{r4}
 3790              	.LCFI27:
 3791              		.cfi_restore 4
 3792              		.cfi_def_cfa_offset 0
 3793 0012 1847     		bx	r3
 3794              	.LVL485:
 3795              		.cfi_endproc
 3796              	.LFE1416:
 3797              		.cantunwind
 3798              		.fnend
 3800              		.section	.text._ZN15UsartWithBufferC2Ei,"axG",%progbits,_ZN15UsartWithBufferC5Ei,comdat
 3801              		.align	1
 3802              		.weak	_ZN15UsartWithBufferC2Ei
 3803              		.syntax unified
 3804              		.thumb
 3805              		.thumb_func
 3806              		.fpu softvfp
 3808              	_ZN15UsartWithBufferC2Ei:
 3809              		.fnstart
 3810              	.LFB1461:
  33:./inc/UsartWithBuffer.h ****     RX_Tail = 0;
 3811              		.loc 15 33 0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 24
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              	.LVL486:
 3816 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3817              		.save {r4, r5, r6, r7, r8, lr}
 3818              	.LCFI28:
 3819              		.cfi_def_cfa_offset 24
 3820              		.cfi_offset 4, -24
 3821              		.cfi_offset 5, -20
 3822              		.cfi_offset 6, -16
 3823              		.cfi_offset 7, -12
 3824              		.cfi_offset 8, -8
 3825              		.cfi_offset 14, -4
 3826              	.LBB308:
  34:./inc/UsartWithBuffer.h ****     RX_Head = 0;
 3827              		.loc 15 34 0
 3828 0004 0024     		movs	r4, #0
 3829 0006 2B4B     		ldr	r3, .L193
 3830              	.LBE308:
  33:./inc/UsartWithBuffer.h ****     RX_Tail = 0;
 3831              		.loc 15 33 0
 3832              		.pad #24
 3833 0008 86B0     		sub	sp, sp, #24
 3834              	.LCFI29:
 3835              		.cfi_def_cfa_offset 48
  33:./inc/UsartWithBuffer.h ****     RX_Tail = 0;
 3836              		.loc 15 33 0
 3837 000a 0746     		mov	r7, r0
 3838 000c 8846     		mov	r8, r1
 3839              	.LBB313:
  44:./inc/UsartWithBuffer.h ****                           
 3840              		.loc 15 44 0
 3841 000e 4FF48040 		mov	r0, #16384
 3842              	.LVL487:
 3843 0012 0121     		movs	r1, #1
 3844              	.LVL488:
  34:./inc/UsartWithBuffer.h ****     RX_Head = 0;
 3845              		.loc 15 34 0
 3846 0014 A3F83644 		strh	r4, [r3, #1078]	@ movhi
  35:./inc/UsartWithBuffer.h ****     TX_Tail = 0;
 3847              		.loc 15 35 0
 3848 0018 A3F83844 		strh	r4, [r3, #1080]	@ movhi
  36:./inc/UsartWithBuffer.h ****     TX_Head = 0;
 3849              		.loc 15 36 0
 3850 001c 9C86     		strh	r4, [r3, #52]	@ movhi
  37:./inc/UsartWithBuffer.h **** 
 3851              		.loc 15 37 0
 3852 001e 5C86     		strh	r4, [r3, #50]	@ movhi
  44:./inc/UsartWithBuffer.h ****                           
 3853              		.loc 15 44 0
 3854 0020 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 3855              	.LVL489:
  47:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3856              		.loc 15 47 0
 3857 0024 4FF40073 		mov	r3, #512
  48:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3858              		.loc 15 48 0
 3859 0028 0326     		movs	r6, #3
  47:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3860              		.loc 15 47 0
 3861 002a ADF80430 		strh	r3, [sp, #4]	@ movhi
  49:./inc/UsartWithBuffer.h ****     GPIO_Init(GPIOA, &gpioa_init_struct);
 3862              		.loc 15 49 0
 3863 002e 1823     		movs	r3, #24
  50:./inc/UsartWithBuffer.h ****     /* GPIOA PIN9 alternative function Rx */
 3864              		.loc 15 50 0
 3865 0030 214D     		ldr	r5, .L193+4
 3866 0032 01A9     		add	r1, sp, #4
 3867 0034 2846     		mov	r0, r5
  49:./inc/UsartWithBuffer.h ****     GPIO_Init(GPIOA, &gpioa_init_struct);
 3868              		.loc 15 49 0
 3869 0036 8DF80730 		strb	r3, [sp, #7]
  48:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Mode = GPIO_Mode_AF_PP;
 3870              		.loc 15 48 0
 3871 003a 8DF80660 		strb	r6, [sp, #6]
  50:./inc/UsartWithBuffer.h ****     /* GPIOA PIN9 alternative function Rx */
 3872              		.loc 15 50 0
 3873 003e FFF7FEFF 		bl	GPIO_Init
 3874              	.LVL490:
  52:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Speed = GPIO_Speed_50MHz;
 3875              		.loc 15 52 0
 3876 0042 4FF48063 		mov	r3, #1024
 3877 0046 ADF80430 		strh	r3, [sp, #4]	@ movhi
  54:./inc/UsartWithBuffer.h ****     GPIO_Init(GPIOA, &gpioa_init_struct);
 3878              		.loc 15 54 0
 3879 004a 0423     		movs	r3, #4
  55:./inc/UsartWithBuffer.h **** 
 3880              		.loc 15 55 0
 3881 004c 2846     		mov	r0, r5
 3882 004e 0DEB0301 		add	r1, sp, r3
  58:./inc/UsartWithBuffer.h ****     /* Baud rate 230400, 8-bit data, One stop bit
 3883              		.loc 15 58 0
 3884 0052 05F54055 		add	r5, r5, #12288
  54:./inc/UsartWithBuffer.h ****     GPIO_Init(GPIOA, &gpioa_init_struct);
 3885              		.loc 15 54 0
 3886 0056 8DF80730 		strb	r3, [sp, #7]
  53:./inc/UsartWithBuffer.h ****     gpioa_init_struct.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 3887              		.loc 15 53 0
 3888 005a 8DF80660 		strb	r6, [sp, #6]
  55:./inc/UsartWithBuffer.h **** 
 3889              		.loc 15 55 0
 3890 005e FFF7FEFF 		bl	GPIO_Init
 3891              	.LVL491:
  58:./inc/UsartWithBuffer.h ****     /* Baud rate 230400, 8-bit data, One stop bit
 3892              		.loc 15 58 0
 3893 0062 2846     		mov	r0, r5
 3894 0064 0121     		movs	r1, #1
 3895 0066 FFF7FEFF 		bl	USART_Cmd
 3896              	.LVL492:
  66:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3897              		.loc 15 66 0
 3898 006a 0C23     		movs	r3, #12
  69:./inc/UsartWithBuffer.h ****     /* Enable RXNE interrupt */
 3899              		.loc 15 69 0
 3900 006c 02A9     		add	r1, sp, #8
 3901 006e 2846     		mov	r0, r5
  66:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 3902              		.loc 15 66 0
 3903 0070 ADF81230 		strh	r3, [sp, #18]	@ movhi
  62:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_WordLength = USART_WordLength_8b;  
 3904              		.loc 15 62 0
 3905 0074 CDF80880 		str	r8, [sp, #8]
  63:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_StopBits = USART_StopBits_1;   
 3906              		.loc 15 63 0
 3907 0078 ADF80C40 		strh	r4, [sp, #12]	@ movhi
  64:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_Parity = USART_Parity_No ;
 3908              		.loc 15 64 0
 3909 007c ADF80E40 		strh	r4, [sp, #14]	@ movhi
  65:./inc/UsartWithBuffer.h ****     usart1_init_struct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 3910              		.loc 15 65 0
 3911 0080 ADF81040 		strh	r4, [sp, #16]	@ movhi
  67:./inc/UsartWithBuffer.h ****     /* Configure USART1 */
 3912              		.loc 15 67 0
 3913 0084 ADF81440 		strh	r4, [sp, #20]	@ movhi
  69:./inc/UsartWithBuffer.h ****     /* Enable RXNE interrupt */
 3914              		.loc 15 69 0
 3915 0088 FFF7FEFF 		bl	USART_Init
 3916              	.LVL493:
  71:./inc/UsartWithBuffer.h ****     USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
 3917              		.loc 15 71 0
 3918 008c 2246     		mov	r2, r4
 3919 008e 2846     		mov	r0, r5
 3920 0090 40F22771 		movw	r1, #1831
 3921 0094 FFF7FEFF 		bl	USART_ITConfig
 3922              	.LVL494:
  72:./inc/UsartWithBuffer.h ****     /* Enable USART1 global interrupt */
 3923              		.loc 15 72 0
 3924 0098 2846     		mov	r0, r5
 3925 009a 0122     		movs	r2, #1
 3926 009c 40F22551 		movw	r1, #1317
 3927 00a0 FFF7FEFF 		bl	USART_ITConfig
 3928              	.LVL495:
 3929              	.LBB309:
 3930              	.LBB310:
1206:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1207:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __enable_fault_irq()         { __ASM volatile ("cpsie f"); }
1208:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_fault_irq()        { __ASM volatile ("cpsid f"); }
1209:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1210:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __NOP()                      { __ASM volatile ("nop"); }
1211:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFI()                      { __ASM volatile ("wfi"); }
1212:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __WFE()                      { __ASM volatile ("wfe"); }
1213:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __SEV()                      { __ASM volatile ("sev"); }
1214:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __ISB()                      { __ASM volatile ("isb"); }
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DSB()                      { __ASM volatile ("dsb"); }
1216:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
1217:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __CLREX()                    { __ASM volatile ("clrex"); }
1218:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1219:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1220:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1221:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Process Stack Pointer
1222:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1223:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return ProcessStackPointer
1224:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1225:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the actual process stack pointer
1226:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1227:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_PSP(void);
1228:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1229:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1230:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Process Stack Pointer
1231:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1232:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfProcStack  Process Stack Pointer
1233:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1234:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value ProcessStackPointer to the MSP 
1235:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (process stack pointer) Cortex processor register
1236:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1237:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PSP(uint32_t topOfProcStack);
1238:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1239:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1240:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Main Stack Pointer
1241:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1242:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return Main Stack Pointer
1243:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1244:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the current value of the MSP (main stack pointer)
1245:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Cortex processor register
1246:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1247:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_MSP(void);
1248:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1249:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1250:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Main Stack Pointer
1251:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1252:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  topOfMainStack  Main Stack Pointer
1253:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1254:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Assign the value mainStackPointer to the MSP 
1255:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * (main stack pointer) Cortex processor register
1256:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1257:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_MSP(uint32_t topOfMainStack);
1258:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1259:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1260:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Base Priority value
1261:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1262:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return BasePriority
1263:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1264:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the base priority register
1265:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1266:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_BASEPRI(void);
1267:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1268:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1269:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Base Priority value
1270:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1271:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  basePri  BasePriority
1272:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1273:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the base priority register
1274:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1275:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_BASEPRI(uint32_t basePri);
1276:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1277:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1278:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Priority Mask value
1279:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1280:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return PriMask
1281:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1282:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return state of the priority mask bit from the priority mask register
1283:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1284:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t  __get_PRIMASK(void);
1285:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1286:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1287:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Mask value
1288:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1289:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priMask  PriMask
1290:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1291:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority mask bit in the priority mask register
1292:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1293:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_PRIMASK(uint32_t priMask);
1294:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1295:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1296:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Fault Mask value
1297:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1298:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return FaultMask
1299:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1300:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the fault mask register
1301:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1302:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_FAULTMASK(void);
1303:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1304:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1305:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Fault Mask value
1306:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1307:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  faultMask  faultMask value
1308:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1309:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the fault mask register
1310:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1311:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_FAULTMASK(uint32_t faultMask);
1312:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1313:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1314:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Return the Control Register value
1315:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** * 
1316:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** *  @return Control value
1317:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1318:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Return the content of the control register
1319:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1320:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __get_CONTROL(void);
1321:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1322:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1323:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Control Register value
1324:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1325:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  control  Control value
1326:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1327:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the control register
1328:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1329:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern void __set_CONTROL(uint32_t control);
1330:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1331:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1332:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in integer value
1333:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1334:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1335:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1336:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1337:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in integer value
1338:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1339:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV(uint32_t value);
1340:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1341:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1342:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in unsigned short value
1343:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1344:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1345:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1346:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1347:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in unsigned short value
1348:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1349:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __REV16(uint16_t value);
1350:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1351:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1352:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse byte order in signed short value with sign extension to integer
1353:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1354:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1355:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1356:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1357:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse byte order in signed short value with sign extension to integer
1358:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1359:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern int32_t __REVSH(int16_t value);
1360:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1361:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1362:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Reverse bit order of value
1363:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1364:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to reverse
1365:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        reversed value
1366:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1367:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Reverse bit order of value
1368:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1369:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __RBIT(uint32_t value);
1370:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1371:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1372:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (8 bit)
1373:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1374:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1375:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1376:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1377:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 8 bit value
1378:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1379:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint8_t __LDREXB(uint8_t *addr);
1380:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1381:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1382:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (16 bit)
1383:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1384:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1385:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1386:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1387:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 16 bit values
1388:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1389:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint16_t __LDREXH(uint16_t *addr);
1390:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1391:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1392:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  LDR Exclusive (32 bit)
1393:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1394:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1395:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        value of (*address)
1396:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1397:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive LDR command for 32 bit values
1398:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1399:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __LDREXW(uint32_t *addr);
1400:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1401:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1402:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (8 bit)
1403:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1404:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1405:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1406:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1407:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1408:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 8 bit values
1409:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1410:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXB(uint8_t value, uint8_t *addr);
1411:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1412:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1413:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (16 bit)
1414:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1415:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1416:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1417:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1418:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1419:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 16 bit values
1420:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1421:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXH(uint16_t value, uint16_t *addr);
1422:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1423:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1424:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  STR Exclusive (32 bit)
1425:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1426:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  value  value to store
1427:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  *addr  address pointer
1428:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return        successful / failed
1429:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1430:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Exclusive STR command for 32 bit values
1431:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1432:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** extern uint32_t __STREXW(uint32_t value, uint32_t *addr);
1433:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1434:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1435:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #elif (defined (__TASKING__)) /*------------------ TASKING Compiler ---------------------*/
1436:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* TASKING carm specific functions */
1437:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1438:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*
1439:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The CMSIS functions have been implemented as intrinsics in the compiler.
1440:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Please use "carm -?i" to get an up to date list of all instrinsics,
1441:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Including the CMSIS ones.
1442:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1443:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1444:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1445:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1446:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1447:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /** @addtogroup CMSIS_CM3_Core_FunctionInterface CMSIS CM3 Core Function Interface
1448:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   Core  Function Interface containing:
1449:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core NVIC Functions
1450:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core SysTick Functions
1451:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   - Core Reset Functions
1452:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** */
1453:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /*@{*/
1454:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1455:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1456:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1457:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1458:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the Priority Grouping in NVIC Interrupt Controller
1459:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1460:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup is priority grouping field
1461:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1462:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority grouping field using the required unlock sequence.
1463:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The parameter priority_grouping is assigned to the field 
1464:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * SCB->AIRCR [10:8] PRIGROUP field. Only values from 0..7 are used.
1465:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1466:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1467:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1468:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1469:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1470:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t reg_value;
1471:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
1472:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1473:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1474:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1475:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   reg_value  =  (reg_value                       |
1476:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) | 
1477:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1478:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR =  reg_value;
1479:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1480:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1481:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1482:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Get the Priority Grouping from NVIC Interrupt Controller
1483:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1484:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return priority grouping field 
1485:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1486:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Get the priority grouping from NVIC Interrupt Controller.
1487:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1488:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1489:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1490:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1491:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1492:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1493:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1494:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1495:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Enable Interrupt in NVIC Interrupt Controller
1496:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1497:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to enable
1498:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1499:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Enable a device specific interupt in the NVIC interrupt controller.
1500:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1501:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1502:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1503:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1504:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 3931              		.loc 16 1504 0
 3932 00a4 2022     		movs	r2, #32
 3933              	.LBE310:
 3934              	.LBE309:
 3935              	.LBE313:
  76:./inc/UsartWithBuffer.h **** 
 3936              		.loc 15 76 0
 3937 00a6 3846     		mov	r0, r7
 3938              	.LBB314:
 3939              	.LBB312:
 3940              	.LBB311:
 3941              		.loc 16 1504 0
 3942 00a8 044B     		ldr	r3, .L193+8
 3943 00aa 5A60     		str	r2, [r3, #4]
 3944              	.LVL496:
 3945              	.LBE311:
 3946              	.LBE312:
 3947              	.LBE314:
  76:./inc/UsartWithBuffer.h **** 
 3948              		.loc 15 76 0
 3949 00ac 06B0     		add	sp, sp, #24
 3950              	.LCFI30:
 3951              		.cfi_def_cfa_offset 24
 3952              		@ sp needed
 3953 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3954              	.LVL497:
 3955              	.L194:
 3956 00b2 00BF     		.align	2
 3957              	.L193:
 3958 00b4 00000000 		.word	.LANCHOR1
 3959 00b8 00080140 		.word	1073809408
 3960 00bc 00E100E0 		.word	-536813312
 3961              		.cfi_endproc
 3962              	.LFE1461:
 3963              		.fnend
 3965              		.weak	_ZN15UsartWithBufferC1Ei
 3966              		.thumb_set _ZN15UsartWithBufferC1Ei,_ZN15UsartWithBufferC2Ei
 3967              		.text
 3968              		.align	1
 3969              		.global	USART1_IRQHandler
 3970              		.syntax unified
 3971              		.thumb
 3972              		.thumb_func
 3973              		.fpu softvfp
 3975              	USART1_IRQHandler:
 3976              		.fnstart
 3977              	.LFB1469:
 114:./inc/UsartWithBuffer.h ****     }
 115:./inc/UsartWithBuffer.h ****     return isFree;
 116:./inc/UsartWithBuffer.h ****   }
 117:./inc/UsartWithBuffer.h **** 
 118:./inc/UsartWithBuffer.h ****   /* Send a string */
 119:./inc/UsartWithBuffer.h ****   void puts(char *s)
 120:./inc/UsartWithBuffer.h ****   {
 121:./inc/UsartWithBuffer.h ****     while (*s) putch(*s++);
 122:./inc/UsartWithBuffer.h ****   }
 123:./inc/UsartWithBuffer.h **** 
 124:./inc/UsartWithBuffer.h ****   bool dataAvailable(){
 125:./inc/UsartWithBuffer.h ****     uint16_t tempHead = RX_Head;
 126:./inc/UsartWithBuffer.h ****     uint16_t tempTail = RX_Tail;
 127:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
 128:./inc/UsartWithBuffer.h ****     return (tempHead != tempTail);
 129:./inc/UsartWithBuffer.h ****   }
 130:./inc/UsartWithBuffer.h **** 
 131:./inc/UsartWithBuffer.h ****   uint8_t getch(){
 132:./inc/UsartWithBuffer.h ****     uint8_t ans;
 133:./inc/UsartWithBuffer.h **** 
 134:./inc/UsartWithBuffer.h ****     __disable_irq();
 135:./inc/UsartWithBuffer.h ****     ans = (RX[RX_Tail]);
 136:./inc/UsartWithBuffer.h ****     /* Advance buffer tail. */
 137:./inc/UsartWithBuffer.h ****     RX_Tail = (RX_Tail + 1) & (UART_BUFSIZE-1);
 138:./inc/UsartWithBuffer.h ****     __enable_irq();
 139:./inc/UsartWithBuffer.h **** 
 140:./inc/UsartWithBuffer.h ****     return ans;
 141:./inc/UsartWithBuffer.h ****   }
 142:./inc/UsartWithBuffer.h **** 
 143:./inc/UsartWithBuffer.h **** };
 144:./inc/UsartWithBuffer.h **** 
 145:./inc/UsartWithBuffer.h **** 
 146:./inc/UsartWithBuffer.h **** extern "C"{
 147:./inc/UsartWithBuffer.h ****   void USART1_IRQHandler(void){
 3978              		.loc 15 147 0
 3979              		.cfi_startproc
 3980              		@ args = 0, pretend = 0, frame = 0
 3981              		@ frame_needed = 0, uses_anonymous_args = 0
 3982 0270 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3983              		.save {r3, r4, r5, r6, r7, lr}
 3984              	.LCFI31:
 3985              		.cfi_def_cfa_offset 24
 3986              		.cfi_offset 3, -24
 3987              		.cfi_offset 4, -20
 3988              		.cfi_offset 5, -16
 3989              		.cfi_offset 6, -12
 3990              		.cfi_offset 7, -8
 3991              		.cfi_offset 14, -4
 3992              	.LBB315:
 148:./inc/UsartWithBuffer.h ****     if(USART_GetITStatus(USART1, USART_IT_RXNE) != RESET){
 3993              		.loc 15 148 0
 3994 0272 40F22551 		movw	r1, #1317
 3995 0276 2748     		ldr	r0, .L206
 3996 0278 FFF7FEFF 		bl	USART_GetITStatus
 3997              	.LVL498:
 3998 027c C8B1     		cbz	r0, .L196
 3999              	.LBB316:
 149:./inc/UsartWithBuffer.h ****       /* Advance buffer head. */
 150:./inc/UsartWithBuffer.h ****       uint16_t tempRX_Head = (RX_Head + 1) & (UART_BUFSIZE-1);
 4000              		.loc 15 150 0
 4001 027e 264D     		ldr	r5, .L206+4
 151:./inc/UsartWithBuffer.h **** 
 152:./inc/UsartWithBuffer.h ****       /* Check for overflow. */
 153:./inc/UsartWithBuffer.h ****       uint16_t tempRX_Tail = RX_Tail;
 154:./inc/UsartWithBuffer.h ****       uint8_t data = (uint8_t)USART_ReceiveData(USART1);
 4002              		.loc 15 154 0
 4003 0280 2448     		ldr	r0, .L206
 150:./inc/UsartWithBuffer.h **** 
 4004              		.loc 15 150 0
 4005 0282 B5F83844 		ldrh	r4, [r5, #1080]
 153:./inc/UsartWithBuffer.h ****       uint8_t data = (uint8_t)USART_ReceiveData(USART1);
 4006              		.loc 15 153 0
 4007 0286 B5F83664 		ldrh	r6, [r5, #1078]
 4008              		.loc 15 154 0
 4009 028a FFF7FEFF 		bl	USART_ReceiveData
 4010              	.LVL499:
 150:./inc/UsartWithBuffer.h **** 
 4011              		.loc 15 150 0
 4012 028e 0134     		adds	r4, r4, #1
 4013 0290 C4F30904 		ubfx	r4, r4, #0, #10
 4014              	.LVL500:
 153:./inc/UsartWithBuffer.h ****       uint8_t data = (uint8_t)USART_ReceiveData(USART1);
 4015              		.loc 15 153 0
 4016 0294 B6B2     		uxth	r6, r6
 4017              	.LVL501:
 4018              		.loc 15 154 0
 4019 0296 C7B2     		uxtb	r7, r0
 4020              	.LVL502:
 155:./inc/UsartWithBuffer.h ****       USART_ClearITPendingBit(USART1,USART_IT_RXNE);
 4021              		.loc 15 155 0
 4022 0298 40F22551 		movw	r1, #1317
 4023 029c 1D48     		ldr	r0, .L206
 4024 029e FFF7FEFF 		bl	USART_ClearITPendingBit
 4025              	.LVL503:
 156:./inc/UsartWithBuffer.h ****       if (tempRX_Head == tempRX_Tail) {
 4026              		.loc 15 156 0
 4027 02a2 B442     		cmp	r4, r6
 4028 02a4 1AD1     		bne	.L197
 157:./inc/UsartWithBuffer.h ****         /* Disable the Receive interrupt */
 158:./inc/UsartWithBuffer.h ****         USART_ITConfig(USART1,USART_IT_RXNE,DISABLE);
 4029              		.loc 15 158 0
 4030 02a6 0022     		movs	r2, #0
 4031 02a8 40F22551 		movw	r1, #1317
 4032 02ac 1948     		ldr	r0, .L206
 4033 02ae FFF7FEFF 		bl	USART_ITConfig
 4034              	.LVL504:
 4035              	.L196:
 4036              	.LBE316:
 4037              	.LBE315:
 4038              	.LBB318:
 159:./inc/UsartWithBuffer.h ****       }else{
 160:./inc/UsartWithBuffer.h ****         RX[RX_Head] = data;
 161:./inc/UsartWithBuffer.h ****         RX_Head = tempRX_Head;
 162:./inc/UsartWithBuffer.h ****       }
 163:./inc/UsartWithBuffer.h **** 
 164:./inc/UsartWithBuffer.h ****     }
 165:./inc/UsartWithBuffer.h ****     if(USART_GetITStatus(USART1, USART_IT_TXE) != RESET){
 4039              		.loc 15 165 0
 4040 02b2 40F22771 		movw	r1, #1831
 4041 02b6 1748     		ldr	r0, .L206
 4042 02b8 FFF7FEFF 		bl	USART_GetITStatus
 4043              	.LVL505:
 4044 02bc 48B3     		cbz	r0, .L195
 4045              	.LBB319:
 166:./inc/UsartWithBuffer.h **** 
 167:./inc/UsartWithBuffer.h ****       /* Check if all data is transmitted. */
 168:./inc/UsartWithBuffer.h ****       uint16_t tempTX_Tail = TX_Tail;
 4046              		.loc 15 168 0
 4047 02be 164C     		ldr	r4, .L206+4
 4048 02c0 A28E     		ldrh	r2, [r4, #52]
 4049              	.LBB320:
 169:./inc/UsartWithBuffer.h ****       if (TX_Head == tempTX_Tail){
 4050              		.loc 15 169 0
 4051 02c2 638E     		ldrh	r3, [r4, #50]
 4052              	.LBE320:
 168:./inc/UsartWithBuffer.h ****       if (TX_Head == tempTX_Tail){
 4053              		.loc 15 168 0
 4054 02c4 92B2     		uxth	r2, r2
 4055              	.LVL506:
 4056              	.LBB322:
 4057              		.loc 15 169 0
 4058 02c6 9BB2     		uxth	r3, r3
 4059 02c8 9A42     		cmp	r2, r3
 4060 02ca 10D1     		bne	.L199
 4061              	.LBE322:
 4062              	.LBE319:
 4063              	.LBE318:
 170:./inc/UsartWithBuffer.h ****         /* Overflow MAX size Situation */
 171:./inc/UsartWithBuffer.h ****         /* Disable the Transmit interrupt */
 172:./inc/UsartWithBuffer.h ****         USART_ITConfig(USART1,USART_IT_TXE,DISABLE);
 173:./inc/UsartWithBuffer.h ****       }else{
 174:./inc/UsartWithBuffer.h ****         /* Start transmitting. */
 175:./inc/UsartWithBuffer.h ****         uint8_t data = TX[TX_Tail];
 176:./inc/UsartWithBuffer.h ****         USART_SendData(USART1, data);
 177:./inc/UsartWithBuffer.h ****         USART_ClearITPendingBit(USART1, USART_IT_TXE);
 178:./inc/UsartWithBuffer.h **** 
 179:./inc/UsartWithBuffer.h ****         /* Advance buffer tail. */
 180:./inc/UsartWithBuffer.h ****         TX_Tail = (TX_Tail + 1) & (UART_BUFSIZE-1);
 181:./inc/UsartWithBuffer.h ****       }
 182:./inc/UsartWithBuffer.h ****     }
 183:./inc/UsartWithBuffer.h ****   }   
 4064              		.loc 15 183 0
 4065 02cc BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 4066              	.LCFI32:
 4067              		.cfi_remember_state
 4068              		.cfi_restore 14
 4069              		.cfi_restore 7
 4070              		.cfi_restore 6
 4071              		.cfi_restore 5
 4072              		.cfi_restore 4
 4073              		.cfi_restore 3
 4074              		.cfi_def_cfa_offset 0
 4075              	.LBB327:
 4076              	.LBB325:
 4077              	.LBB323:
 172:./inc/UsartWithBuffer.h ****       }else{
 4078              		.loc 15 172 0
 4079 02d0 0022     		movs	r2, #0
 4080              	.LVL507:
 4081 02d2 40F22771 		movw	r1, #1831
 4082 02d6 0F48     		ldr	r0, .L206
 4083 02d8 FFF7FEBF 		b	USART_ITConfig
 4084              	.LVL508:
 4085              	.L197:
 4086              	.LCFI33:
 4087              		.cfi_restore_state
 4088              	.LBE323:
 4089              	.LBE325:
 4090              	.LBE327:
 4091              	.LBB328:
 4092              	.LBB317:
 160:./inc/UsartWithBuffer.h ****         RX_Head = tempRX_Head;
 4093              		.loc 15 160 0
 4094 02dc B5F83834 		ldrh	r3, [r5, #1080]
 4095 02e0 9BB2     		uxth	r3, r3
 4096 02e2 2B44     		add	r3, r3, r5
 4097 02e4 83F83A74 		strb	r7, [r3, #1082]
 161:./inc/UsartWithBuffer.h ****       }
 4098              		.loc 15 161 0
 4099 02e8 A5F83844 		strh	r4, [r5, #1080]	@ movhi
 4100 02ec E1E7     		b	.L196
 4101              	.LVL509:
 4102              	.L199:
 4103              	.LBE317:
 4104              	.LBE328:
 4105              	.LBB329:
 4106              	.LBB326:
 4107              	.LBB324:
 4108              	.LBB321:
 175:./inc/UsartWithBuffer.h ****         USART_SendData(USART1, data);
 4109              		.loc 15 175 0
 4110 02ee A38E     		ldrh	r3, [r4, #52]
 176:./inc/UsartWithBuffer.h ****         USART_ClearITPendingBit(USART1, USART_IT_TXE);
 4111              		.loc 15 176 0
 4112 02f0 0848     		ldr	r0, .L206
 175:./inc/UsartWithBuffer.h ****         USART_SendData(USART1, data);
 4113              		.loc 15 175 0
 4114 02f2 9BB2     		uxth	r3, r3
 4115 02f4 2344     		add	r3, r3, r4
 4116 02f6 93F83610 		ldrb	r1, [r3, #54]	@ zero_extendqisi2
 4117              	.LVL510:
 176:./inc/UsartWithBuffer.h ****         USART_ClearITPendingBit(USART1, USART_IT_TXE);
 4118              		.loc 15 176 0
 4119 02fa FFF7FEFF 		bl	USART_SendData
 4120              	.LVL511:
 177:./inc/UsartWithBuffer.h **** 
 4121              		.loc 15 177 0
 4122 02fe 40F22771 		movw	r1, #1831
 4123 0302 0448     		ldr	r0, .L206
 4124 0304 FFF7FEFF 		bl	USART_ClearITPendingBit
 4125              	.LVL512:
 180:./inc/UsartWithBuffer.h ****       }
 4126              		.loc 15 180 0
 4127 0308 A38E     		ldrh	r3, [r4, #52]
 4128 030a 0133     		adds	r3, r3, #1
 4129 030c C3F30903 		ubfx	r3, r3, #0, #10
 4130 0310 A386     		strh	r3, [r4, #52]	@ movhi
 4131              	.L195:
 4132 0312 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4133              	.L207:
 4134              		.align	2
 4135              	.L206:
 4136 0314 00380140 		.word	1073821696
 4137 0318 00000000 		.word	.LANCHOR1
 4138              	.LBE321:
 4139              	.LBE324:
 4140              	.LBE326:
 4141              	.LBE329:
 4142              		.cfi_endproc
 4143              	.LFE1469:
 4144              		.fnend
 4146              		.align	1
 4147              		.global	EXTI2_IRQHandler
 4148              		.syntax unified
 4149              		.thumb
 4150              		.thumb_func
 4151              		.fpu softvfp
 4153              	EXTI2_IRQHandler:
 4154              		.fnstart
 4155              	.LFB1633:
 135:src/main.cpp  **** 
 136:src/main.cpp  **** 
 137:src/main.cpp  **** ros::Subscriber<roberto_msgs::MotorState> motor_sub("cmd_vel", &motor_cb);
 138:src/main.cpp  **** 
 139:src/main.cpp  **** std_msgs::Float32MultiArray debug_msg;
 140:src/main.cpp  **** ros::Publisher debug_pub("debug", &debug_msg);
 141:src/main.cpp  **** 
 142:src/main.cpp  **** std_msgs::Float32MultiArray odom_msg;
 143:src/main.cpp  **** ros::Publisher odom_pub("odom_vel", &odom_msg);
 144:src/main.cpp  **** 
 145:src/main.cpp  **** int main(){
 146:src/main.cpp  ****   #ifdef DEBUG
 147:src/main.cpp  ****   initialise_monitor_handles(); /* initialize handles */
 148:src/main.cpp  ****   #endif
 149:src/main.cpp  ****   /* System Clocks Configuration */
 150:src/main.cpp  ****   RCC_Configuration();
 151:src/main.cpp  ****   SysTick_Init();
 152:src/main.cpp  **** 
 153:src/main.cpp  ****   GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);
 154:src/main.cpp  ****   I2C1_Init();
 155:src/main.cpp  ****   DEBUG_Init();
 156:src/main.cpp  ****   SHUTDOWN_Init();
 157:src/main.cpp  ****   LED_Init();
 158:src/main.cpp  **** 
 159:src/main.cpp  ****   
 160:src/main.cpp  **** 
 161:src/main.cpp  **** 
 162:src/main.cpp  ****   nh.initNode();
 163:src/main.cpp  **** 
 164:src/main.cpp  **** 
 165:src/main.cpp  ****   nh.subscribe(motor_sub);
 166:src/main.cpp  ****   nh.advertise(odom_pub);
 167:src/main.cpp  ****   nh.advertise(debug_pub);
 168:src/main.cpp  **** 
 169:src/main.cpp  ****   /*while(!nh.connected()){
 170:src/main.cpp  ****     nh.spinOnce();
 171:src/main.cpp  ****   }*/
 172:src/main.cpp  **** 
 173:src/main.cpp  ****   shuttingDown = false;
 174:src/main.cpp  **** 
 175:src/main.cpp  ****   
 176:src/main.cpp  ****   float FF;
 177:src/main.cpp  ****   //if(!nh.getParam("serial_node/FF", &FF, 1)){
 178:src/main.cpp  ****     FF = 1600;
 179:src/main.cpp  ****   //}
 180:src/main.cpp  ****   float KP;
 181:src/main.cpp  ****   //if(!nh.getParam("serial_node/KP", &KP, 1)){
 182:src/main.cpp  ****     KP = 6000;
 183:src/main.cpp  ****   //}
 184:src/main.cpp  ****   float KI;
 185:src/main.cpp  ****   //if(!nh.getParam("serial_node/KI", &KI, 1)){
 186:src/main.cpp  ****     KI = 4000;
 187:src/main.cpp  ****   //}
 188:src/main.cpp  ****   float KD;
 189:src/main.cpp  ****   //if(!nh.getParam("serial_node/KD", &KD, 1)){
 190:src/main.cpp  ****     KD = 40;
 191:src/main.cpp  ****   //}
 192:src/main.cpp  **** 
 193:src/main.cpp  **** 
 194:src/main.cpp  ****   float integralSaturation;
 195:src/main.cpp  ****   //if(!nh.getParam("serial_node/integralSaturation", &integralSaturation, 1)){
 196:src/main.cpp  ****     integralSaturation = 10;
 197:src/main.cpp  ****   //}
 198:src/main.cpp  ****   float wheelRadius;
 199:src/main.cpp  ****   //if(!nh.getParam("serial_node/wheelRadius", &wheelRadius, 1)){
 200:src/main.cpp  ****     wheelRadius = 0.04;
 201:src/main.cpp  ****   //}
 202:src/main.cpp  **** 
 203:src/main.cpp  ****   //if(!nh.getParam("serial_node/widthBetweenMotorPivotPoints", &L, 1)){
 204:src/main.cpp  ****     L = 0.17;
 205:src/main.cpp  ****   //}
 206:src/main.cpp  **** 
 207:src/main.cpp  ****   //if(!nh.getParam("serial_node/motorPivotPointToWheel", &d, 1)){
 208:src/main.cpp  ****     d = 0.045;
 209:src/main.cpp  ****   //}
 210:src/main.cpp  **** 
 211:src/main.cpp  ****   delay(1000);
 212:src/main.cpp  **** 
 213:src/main.cpp  **** 
 214:src/main.cpp  ****   motorSettings SL(MOTOR_TYPE_SERVO, "servo_left", TIM4, 4);
 215:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 216:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 217:src/main.cpp  ****   SL.m_ServoLimitMax = 1425;
 218:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 219:src/main.cpp  **** 
 220:src/main.cpp  ****   motorSettings SR(MOTOR_TYPE_SERVO, "servo_right", TIM4, 3);
 221:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 222:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 223:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 224:src/main.cpp  ****   SR.m_ServoLimitMin = 1825;
 225:src/main.cpp  **** 
 226:src/main.cpp  ****   motorSettings FR(MOTOR_TYPE_DC_MOTOR, "front_right", TIM1, 1);
 227:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 228:src/main.cpp  ****               GPIO_Pin_15, GPIOC, GPIO_Pin_0, GPIOA,
 229:src/main.cpp  ****               GPIO_Pin_8, GPIOA);
 230:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 231:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 232:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 233:src/main.cpp  **** 
 234:src/main.cpp  ****   motorSettings FL(MOTOR_TYPE_DC_MOTOR, "front_left", TIM3, 4);
 235:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 236:src/main.cpp  ****               GPIO_Pin_4, GPIOA,GPIO_Pin_10,GPIOB,
 237:src/main.cpp  ****               GPIO_Pin_1, GPIOB);
 238:src/main.cpp  ****   FL.encoderAddr = (0x10);
 239:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 240:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 241:src/main.cpp  **** 
 242:src/main.cpp  ****   motorSettings RL(MOTOR_TYPE_DC_MOTOR, "rear_left", TIM2, 4);
 243:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 244:src/main.cpp  ****     GPIO_Pin_13, GPIOB, GPIO_Pin_14, GPIOB,
 245:src/main.cpp  ****     GPIO_Pin_3, GPIOA);
 246:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 247:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 248:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 249:src/main.cpp  **** 
 250:src/main.cpp  ****   motorSettings RR(MOTOR_TYPE_DC_MOTOR, "rear_right", TIM1, 4);
 251:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 252:src/main.cpp  ****               GPIO_Pin_15, GPIOA, GPIO_Pin_3, GPIOB,
 253:src/main.cpp  ****               GPIO_Pin_11, GPIOA);
 254:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 255:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 256:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 257:src/main.cpp  **** 
 258:src/main.cpp  ****   //char error[60];
 259:src/main.cpp  ****   servo_left = motor::createMotor(&SL);
 260:src/main.cpp  ****   if(!servo_left->motorInit()){
 261:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 262:src/main.cpp  ****     //nh.logerror(error);
 263:src/main.cpp  ****   }
 264:src/main.cpp  **** 
 265:src/main.cpp  ****   servo_right = motor::createMotor(&SR);
 266:src/main.cpp  ****   if(!servo_right->motorInit()){
 267:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 268:src/main.cpp  ****     //nh.logerror(error);
 269:src/main.cpp  ****   }
 270:src/main.cpp  **** 
 271:src/main.cpp  ****   front_left = motor::createMotor(&FL);
 272:src/main.cpp  ****   if(!front_left->motorInit()){
 273:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 274:src/main.cpp  ****     //nh.logerror(error);
 275:src/main.cpp  ****   }
 276:src/main.cpp  **** 
 277:src/main.cpp  ****   front_right = motor::createMotor(&FR);
 278:src/main.cpp  ****   if(!front_right->motorInit()){
 279:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 280:src/main.cpp  ****     //nh.logerror(error);
 281:src/main.cpp  ****   }
 282:src/main.cpp  **** 
 283:src/main.cpp  ****   rear_left = motor::createMotor(&RL);
 284:src/main.cpp  ****   if(!rear_left->motorInit()){
 285:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 286:src/main.cpp  ****     //nh.logerror(error);
 287:src/main.cpp  ****   }
 288:src/main.cpp  **** 
 289:src/main.cpp  ****   rear_right = motor::createMotor(&RR);
 290:src/main.cpp  ****   if(!rear_right->motorInit()){
 291:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 292:src/main.cpp  ****     //nh.logerror(error);
 293:src/main.cpp  ****   }
 294:src/main.cpp  **** 
 295:src/main.cpp  ****   odom_msg.data = new float[3];
 296:src/main.cpp  ****   odom_msg.layout.dim_length = 1;
 297:src/main.cpp  ****   odom_msg.layout.dim = &odomDim;
 298:src/main.cpp  ****   odom_msg.layout.dim[0].size = 3;
 299:src/main.cpp  ****   odom_msg.layout.dim[0].stride = 3;
 300:src/main.cpp  ****   odom_msg.data_length = 3;
 301:src/main.cpp  **** 
 302:src/main.cpp  ****   debug_msg.data = new float[6];
 303:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 304:src/main.cpp  ****   debug_msg.layout.dim = &debugDim;
 305:src/main.cpp  ****   debug_msg.layout.dim[0].size = 6;
 306:src/main.cpp  ****   debug_msg.layout.dim[0].stride = 6;
 307:src/main.cpp  ****   debug_msg.data_length = 6;
 308:src/main.cpp  ****   
 309:src/main.cpp  ****   
 310:src/main.cpp  **** 
 311:src/main.cpp  ****   servo_left->setReference(135);
 312:src/main.cpp  ****   servo_right->setReference(135);
 313:src/main.cpp  ****   front_right->setReference(0);
 314:src/main.cpp  ****   front_left->setReference(0);
 315:src/main.cpp  ****   rear_right->setReference(0);
 316:src/main.cpp  ****   rear_left->setReference(0);
 317:src/main.cpp  **** 
 318:src/main.cpp  ****   int cnt = 0;
 319:src/main.cpp  ****   bool connected = false;
 320:src/main.cpp  **** 
 321:src/main.cpp  ****   uint32_t start_time;
 322:src/main.cpp  ****   uint32_t dt = 20;
 323:src/main.cpp  ****   float dt_s = ((int)dt*0.001f);
 324:src/main.cpp  **** 
 325:src/main.cpp  ****   //debug_toggle();
 326:src/main.cpp  **** 
 327:src/main.cpp  **** 
 328:src/main.cpp  ****   // Initialize the servos one by one in order not to kill the ODroid
 329:src/main.cpp  ****   while(cnt < 100){
 330:src/main.cpp  ****     start_time = millis();
 331:src/main.cpp  ****     if(cnt < 50)
 332:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 333:src/main.cpp  ****     else
 334:src/main.cpp  ****       servo_right->update(dt_s, connected, true);
 335:src/main.cpp  ****     while( millis() - start_time < dt);
 336:src/main.cpp  ****     cnt++;
 337:src/main.cpp  ****   }
 338:src/main.cpp  **** 
 339:src/main.cpp  ****   led_set(255);
 340:src/main.cpp  **** 
 341:src/main.cpp  ****   cnt = 0;
 342:src/main.cpp  **** 
 343:src/main.cpp  **** 
 344:src/main.cpp  ****   float l = sqrt(pow((L/2),2)*2);
 345:src/main.cpp  **** 
 346:src/main.cpp  ****   //{fr, fl, rl, rr};
 347:src/main.cpp  ****   float alpha[4] = {-M_PI/4, M_PI/4, 3*M_PI/4, -3*M_PI/4};
 348:src/main.cpp  ****   uint32_t elapsed;
 349:src/main.cpp  ****   initialized = true;
 350:src/main.cpp  **** 
 351:src/main.cpp  **** 
 352:src/main.cpp  ****   while (1){
 353:src/main.cpp  ****     start_time = millis();
 354:src/main.cpp  **** 
 355:src/main.cpp  ****     /*if(shuttingDown){
 356:src/main.cpp  ****       connected = false;
 357:src/main.cpp  ****       // TODO: Advertise shutdown??
 358:src/main.cpp  ****     }else{*/
 359:src/main.cpp  ****     if(cnt++%50 == 0)
 360:src/main.cpp  ****       debug_toggle();
 361:src/main.cpp  ****     connected = nh.connected();
 362:src/main.cpp  ****     //}
 363:src/main.cpp  **** 
 364:src/main.cpp  ****     float sl = servo_left->update(dt_s, connected, true);
 365:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 366:src/main.cpp  **** 
 367:src/main.cpp  ****     debug_msg.data[0] = (float)sl;
 368:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 369:src/main.cpp  **** 
 370:src/main.cpp  ****     bool enable = true;
 371:src/main.cpp  **** 
 372:src/main.cpp  ****     if((waitForServos && ((int)sr == (int)servo_right->getReference() && (int)sl == (int)servo_left
 373:src/main.cpp  ****       waitForServos = false;
 374:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 375:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 376:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 377:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 378:src/main.cpp  ****       delay(2);
 379:src/main.cpp  ****     }else{
 380:src/main.cpp  ****       enable = false;
 381:src/main.cpp  ****       front_right->setReference(0);
 382:src/main.cpp  ****       front_left->setReference(0);
 383:src/main.cpp  ****       rear_left->setReference(0);
 384:src/main.cpp  ****       rear_right->setReference(0);
 385:src/main.cpp  ****     }
 386:src/main.cpp  ****     
 387:src/main.cpp  ****     float fr = front_right->update(dt_s, connected, enable);
 388:src/main.cpp  ****     //udelay(500);
 389:src/main.cpp  ****     float fl = front_left->update(dt_s, connected, enable);
 390:src/main.cpp  ****     //udelay(500);
 391:src/main.cpp  ****     float rl = rear_left->update(dt_s, connected, enable);
 392:src/main.cpp  ****     //udelay(500);
 393:src/main.cpp  ****     float rr = rear_right->update(dt_s, connected, enable);
 394:src/main.cpp  ****     //udelay(1000);
 395:src/main.cpp  **** 
 396:src/main.cpp  **** 
 397:src/main.cpp  **** 
 398:src/main.cpp  ****     debug_msg.data[2] = fr;
 399:src/main.cpp  ****     debug_msg.data[3] = fl;
 400:src/main.cpp  ****     debug_msg.data[4] = rl;
 401:src/main.cpp  ****     debug_msg.data[5] = rr;
 402:src/main.cpp  **** 
 403:src/main.cpp  ****     float speeds[4] = {fr, fl, rl, rr};
 404:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 405:src/main.cpp  **** 
 406:src/main.cpp  ****     int i;
 407:src/main.cpp  ****     float x_dot = 0;
 408:src/main.cpp  ****     float y_dot = 0;
 409:src/main.cpp  ****     float theta_dot = 0;
 410:src/main.cpp  ****     for(i = 0; i < 4; i++){
 411:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 412:src/main.cpp  ****       
 413:src/main.cpp  ****       float wheelAngle = alpha[i]+angles[i];
 414:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 415:src/main.cpp  ****       y_dot -= sin(wheelAngle)*speeds[i];
 416:src/main.cpp  ****       
 417:src/main.cpp  ****       float motorAngle = wheelAngle;
 418:src/main.cpp  ****       if(i==2 || i==3){
 419:src/main.cpp  ****         motorAngle += M_PI;
 420:src/main.cpp  ****       }
 421:src/main.cpp  ****       float deltaX = -(l*sin(alpha[i]) + d*sin(motorAngle));
 422:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 423:src/main.cpp  **** 
 424:src/main.cpp  ****       float deltaNorm = sqrt(deltaX*deltaX + deltaY*deltaY);
 425:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 426:src/main.cpp  ****       float deltaYNorm = deltaY/deltaNorm;
 427:src/main.cpp  **** 
 428:src/main.cpp  ****       float wAngle = wheelAngle+M_PI/2;
 429:src/main.cpp  ****       float wX = cos(wAngle);
 430:src/main.cpp  ****       float wY = sin(wAngle);
 431:src/main.cpp  **** 
 432:src/main.cpp  ****       theta_dot += (((deltaXNorm*wX + deltaYNorm*wY)*wX)/deltaNorm)*speeds[i];
 433:src/main.cpp  ****     }
 434:src/main.cpp  ****     x_dot /= 4;
 435:src/main.cpp  ****     y_dot /= 4;
 436:src/main.cpp  ****     theta_dot /= 4;
 437:src/main.cpp  **** 
 438:src/main.cpp  ****     // Magic constant
 439:src/main.cpp  ****     /*theta_dot = theta_dot*1.7;
 440:src/main.cpp  **** 
 441:src/main.cpp  ****     if(currentMode == roberto_msgs::MotorState::DRIVE_MODE_SPIN && spinningAutonomously && !waitFor
 442:src/main.cpp  ****       if(spinAngle > 0){
 443:src/main.cpp  ****         lastMsg = start_time;
 444:src/main.cpp  ****         spinAngle -= (abs(theta_dot)*180/M_PI) * dt_s;
 445:src/main.cpp  ****       }else{
 446:src/main.cpp  ****         spinAngle = 0;
 447:src/main.cpp  ****         motorCmd[0] = 0.0;
 448:src/main.cpp  ****         motorCmd[1] = 0.0;
 449:src/main.cpp  ****         motorCmd[2] = 0.0;
 450:src/main.cpp  ****         motorCmd[3] = 0.0;
 451:src/main.cpp  ****       }
 452:src/main.cpp  ****     }*/
 453:src/main.cpp  **** 
 454:src/main.cpp  **** 
 455:src/main.cpp  **** 
 456:src/main.cpp  ****     odom_msg.data[0] = x_dot;
 457:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 458:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 459:src/main.cpp  ****     //odom_msg.data[3] = spinAngle;
 460:src/main.cpp  **** 
 461:src/main.cpp  ****     //reader(odom_msg);
 462:src/main.cpp  ****     //if(odom_msg.data[0] != NULL && odom_msg.data[1] != NULL && odom_msg.data[2] != NULL)
 463:src/main.cpp  ****     odom_pub.publish(&odom_msg);
 464:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 465:src/main.cpp  **** 
 466:src/main.cpp  ****     nh.spinOnce();
 467:src/main.cpp  **** 
 468:src/main.cpp  ****     elapsed = millis() - start_time;
 469:src/main.cpp  ****     if(elapsed > dt){
 470:src/main.cpp  ****       //char elapsed_msg[18];
 471:src/main.cpp  ****       //sprintf(elapsed_msg, "SLOW! %u", elapsed);
 472:src/main.cpp  ****       //nh.logerror(elapsed_msg);
 473:src/main.cpp  ****     }else{
 474:src/main.cpp  ****       /*char elapsed_msg2[8];
 475:src/main.cpp  ****       sprintf(elapsed_msg2, "%u", elapsed);
 476:src/main.cpp  ****       nh.logerror(elapsed_msg2);*/
 477:src/main.cpp  ****       while( (millis() - start_time) < dt){}
 478:src/main.cpp  ****     }
 479:src/main.cpp  ****   }
 480:src/main.cpp  ****   //delete odom_msg.data;
 481:src/main.cpp  ****   return 0;
 482:src/main.cpp  **** }
 483:src/main.cpp  **** 
 484:src/main.cpp  **** extern "C" void EXTI2_IRQHandler(void){
 4156              		.loc 12 484 0
 4157              		.cfi_startproc
 4158              		@ args = 0, pretend = 0, frame = 0
 4159              		@ frame_needed = 0, uses_anonymous_args = 0
 4160 031c 08B5     		push	{r3, lr}
 4161              		.save {r3, lr}
 4162              	.LCFI34:
 4163              		.cfi_def_cfa_offset 8
 4164              		.cfi_offset 3, -8
 4165              		.cfi_offset 14, -4
 485:src/main.cpp  ****   if(EXTI_GetITStatus(EXTI_Line2) != RESET){
 4166              		.loc 12 485 0
 4167 031e 0420     		movs	r0, #4
 4168 0320 FFF7FEFF 		bl	EXTI_GetITStatus
 4169              	.LVL513:
 4170 0324 40B1     		cbz	r0, .L208
 486:src/main.cpp  ****     shuttingDown = true;
 4171              		.loc 12 486 0
 4172 0326 0122     		movs	r2, #1
 4173 0328 044B     		ldr	r3, .L210
 487:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 4174              		.loc 12 487 0
 4175 032a 0420     		movs	r0, #4
 486:src/main.cpp  ****     shuttingDown = true;
 4176              		.loc 12 486 0
 4177 032c 83F83A28 		strb	r2, [r3, #2106]
 488:src/main.cpp  ****   }
 489:src/main.cpp  **** }
 4178              		.loc 12 489 0
 4179 0330 BDE80840 		pop	{r3, lr}
 4180              	.LCFI35:
 4181              		.cfi_remember_state
 4182              		.cfi_restore 14
 4183              		.cfi_restore 3
 4184              		.cfi_def_cfa_offset 0
 487:src/main.cpp  ****     EXTI_ClearITPendingBit(EXTI_Line2);
 4185              		.loc 12 487 0
 4186 0334 FFF7FEBF 		b	EXTI_ClearITPendingBit
 4187              	.LVL514:
 4188              	.L208:
 4189              	.LCFI36:
 4190              		.cfi_restore_state
 4191 0338 08BD     		pop	{r3, pc}
 4192              	.L211:
 4193 033a 00BF     		.align	2
 4194              	.L210:
 4195 033c 00000000 		.word	.LANCHOR1
 4196              		.cfi_endproc
 4197              	.LFE1633:
 4198              		.fnend
 4200              		.align	1
 4201              		.global	HardFault_Handler
 4202              		.syntax unified
 4203              		.thumb
 4204              		.thumb_func
 4205              		.fpu softvfp
 4207              	HardFault_Handler:
 4208              		.fnstart
 4209              	.LFB1634:
 490:src/main.cpp  **** 
 491:src/main.cpp  **** 
 492:src/main.cpp  **** extern "C" __attribute__((naked)) void HardFault_Handler(void){
 4210              		.loc 12 492 0
 4211              		.cfi_startproc
 4212              		@ Naked Function: prologue and epilogue provided by programmer.
 4213              		@ args = 0, pretend = 0, frame = 0
 4214              		@ frame_needed = 0, uses_anonymous_args = 0
 493:src/main.cpp  ****         /*
 494:src/main.cpp  ****          * Get the appropriate stack pointer, depending on our mode,
 495:src/main.cpp  ****          * and use it as the parameter to the C handler. This function
 496:src/main.cpp  ****          * will never return
 497:src/main.cpp  ****          */
 498:src/main.cpp  **** 
 499:src/main.cpp  **** 
 500:src/main.cpp  ****         __asm(  ".syntax unified\n"
 501:src/main.cpp  ****                         "MOVS   R0, #4  \n"
 502:src/main.cpp  ****                         "MOV    R1, LR  \n"
 503:src/main.cpp  ****                         "TST    R0, R1  \n"
 504:src/main.cpp  ****                         "BEQ    _MSP    \n"
 505:src/main.cpp  ****                         "MRS    R0, PSP \n"
 506:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 507:src/main.cpp  ****                 "_MSP:  \n"
 508:src/main.cpp  ****                         "MRS    R0, MSP \n"
 509:src/main.cpp  ****                         "B      hard_fault_handler_c      \n"
 510:src/main.cpp  ****                 ".syntax divided\n") ;
 4215              		.loc 12 510 0
 4216              		.syntax unified
 4217              	@ 510 "src/main.cpp" 1
 4218              		.syntax unified
 4219 0340 0420     	MOVS   R0, #4  
 4220 0342 7146     	MOV    R1, LR  
 4221 0344 0842     	TST    R0, R1  
 4222 0346 03D0     	BEQ    _MSP    
 4223 0348 EFF30980 	MRS    R0, PSP 
 4224 034c FFF7FEBF 	B      hard_fault_handler_c      
 4225              	_MSP:  
 4226 0350 EFF30880 	MRS    R0, MSP 
 4227 0354 FFF7FEBF 	B      hard_fault_handler_c      
 4228              	.syntax divided
 4229              	
 4230              	@ 0 "" 2
 511:src/main.cpp  **** }
 4231              		.loc 12 511 0
 4232              		.thumb
 4233              		.syntax unified
 4234              		.cfi_endproc
 4235              	.LFE1634:
 4236              		.cantunwind
 4237              		.fnend
 4239              		.align	1
 4240              		.global	hard_fault_handler_c
 4241              		.syntax unified
 4242              		.thumb
 4243              		.thumb_func
 4244              		.fpu softvfp
 4246              	hard_fault_handler_c:
 4247              		.fnstart
 4248              	.LFB1635:
 512:src/main.cpp  **** 
 513:src/main.cpp  **** 
 514:src/main.cpp  **** extern "C" void hard_fault_handler_c (unsigned int * hardfault_args)
 515:src/main.cpp  **** {
 4249              		.loc 12 515 0
 4250              		.cfi_startproc
 4251              		@ args = 0, pretend = 0, frame = 0
 4252              		@ frame_needed = 0, uses_anonymous_args = 0
 4253              	.LVL515:
 4254 0358 08B5     		push	{r3, lr}
 4255              		.save {r3, lr}
 4256              	.LCFI37:
 4257              		.cfi_def_cfa_offset 8
 4258              		.cfi_offset 3, -8
 4259              		.cfi_offset 14, -4
 516:src/main.cpp  ****   RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2 | RCC_APB1Periph_TIM3 | RCC_APB1Periph_TIM4, DISABLE);
 4260              		.loc 12 516 0
 4261 035a 0021     		movs	r1, #0
 4262 035c 0720     		movs	r0, #7
 4263              	.LVL516:
 4264 035e FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 4265              	.LVL517:
 517:src/main.cpp  ****   RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, DISABLE);
 4266              		.loc 12 517 0
 4267 0362 0021     		movs	r1, #0
 4268 0364 4FF40060 		mov	r0, #2048
 4269 0368 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 4270              	.LVL518:
 4271              	.LBB334:
 4272              	.LBB335:
1505:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1506:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1507:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1508:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Disable the interrupt line for external interrupt specified
1509:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1510:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn   The positive number of the external interrupt to disable
1511:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1512:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Disable a device specific interupt in the NVIC interrupt controller.
1513:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1514:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1515:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1516:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1517:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1518:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1519:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1520:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1521:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the interrupt pending bit for a device specific interrupt source
1522:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1523:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the device specifc interrupt
1524:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt pending, 0 = interrupt not pending
1525:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1526:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the pending register in NVIC and return 1 if its status is pending, 
1527:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0
1528:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1529:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1530:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1531:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1532:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1533:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1534:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1535:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the pending bit for an external interrupt
1536:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * 
1537:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for set pending
1538:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1539:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the pending bit for the specified interrupt.
1540:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1541:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1542:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1543:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1544:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1545:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1546:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1547:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1548:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Clear the pending bit for an external interrupt
1549:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1550:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for clear pending
1551:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1552:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Clear the pending bit for the specified interrupt. 
1553:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The interrupt number cannot be a negative value.
1554:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1555:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1556:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1557:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1558:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1559:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1560:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1561:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the active bit for an external interrupt
1562:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1563:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn    The number of the interrupt for read active bit
1564:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return         1 = interrupt active, 0 = interrupt not active
1565:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1566:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the active register in NVIC and returns 1 if its status is active, 
1567:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * otherwise it returns 0.
1568:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1569:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1570:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1571:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1572:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1573:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1574:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1575:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Set the priority for an interrupt
1576:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1577:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for set priority
1578:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  priority  The priority to set
1579:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1580:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Set the priority for the specified interrupt. The interrupt 
1581:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1582:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1583:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1584:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1585:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1586:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1587:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1588:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1589:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1590:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   else {
1591:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1592:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1593:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1594:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1595:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Read the priority for an interrupt
1596:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1597:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  IRQn      The number of the interrupt for get priority
1598:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return           The priority for the interrupt
1599:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1600:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Read the priority for the specified interrupt. The interrupt 
1601:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * number can be positive to specify an external (device specific) 
1602:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * interrupt, or negative to specify an internal (core) interrupt.
1603:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1604:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The returned priority value is automatically aligned to the implemented
1605:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits of the microcontroller.
1606:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1607:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Note: The priority cannot be set for every core interrupt.
1608:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1609:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1610:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1611:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1612:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if(IRQn < 0) {
1613:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1614:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   else {
1615:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1616:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1617:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1618:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1619:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1620:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Encode the priority for an interrupt
1621:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1622:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup    The used priority group
1623:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PreemptPriority  The preemptive priority value (starting from 0)
1624:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  SubPriority      The sub priority value (starting from 0)
1625:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return                  The encoded priority for the interrupt
1626:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1627:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Encode the priority for an interrupt with the given priority group,
1628:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * preemptive priority value and sub priority value.
1629:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1630:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1631:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1632:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The returned priority value can be used for NVIC_SetPriority(...) function
1633:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1634:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1635:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1636:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1637:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PreemptPriorityBits;
1638:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t SubPriorityBits;
1639:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1640:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1641:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1642:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  
1643:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return (
1644:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1645:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1646:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****          );
1647:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1648:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1649:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1650:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1651:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Decode the priority of an interrupt
1652:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1653:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  Priority           The priority for the interrupt
1654:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  PriorityGroup      The used priority group
1655:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  pPreemptPriority   The preemptive priority value (starting from 0)
1656:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param  pSubPriority       The sub priority value (starting from 0)
1657:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1658:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Decode an interrupt priority value with the given priority group to 
1659:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * preemptive priority value and sub priority value.
1660:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * In case of a conflict between priority grouping and available
1661:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1662:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1663:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * The priority value can be retrieved with NVIC_GetPriority(...) function
1664:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1665:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1666:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1667:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1668:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t PreemptPriorityBits;
1669:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   uint32_t SubPriorityBits;
1670:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1671:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1672:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1673:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   
1674:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1675:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1676:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1677:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1678:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1679:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1680:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##################################    SysTick function  ########################################
1681:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1682:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #if (!defined (__Vendor_SysTickConfig)) || (__Vendor_SysTickConfig == 0)
1683:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1684:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1685:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Initialize and start the SysTick counter and its interrupt.
1686:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1687:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @param   ticks   number of ticks between two interrupts
1688:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @return  1 = failed, 0 = successful
1689:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1690:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Initialise the system tick timer and its interrupt and start the
1691:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * system tick timer / counter in free running mode to generate 
1692:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * periodical interrupts.
1693:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1694:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1695:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** { 
1696:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
1697:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                                                                
1698:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
1699:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
1700:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
1701:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk | 
1702:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                    SysTick_CTRL_TICKINT_Msk   | 
1703:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                    SysTick_CTRL_ENABLE_Msk;                    /* Enable SysTick IRQ and SysTick Ti
1704:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   return (0);                                                  /* Function successful */
1705:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** }
1706:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1707:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** #endif
1708:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1709:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1710:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1711:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1712:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /* ##################################    Reset function  ##########################################
1713:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
1714:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** /**
1715:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * @brief  Initiate a system reset request.
1716:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  *
1717:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  * Initiate a system reset request to reset the MCU
1718:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****  */
1719:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void NVIC_SystemReset(void)
1720:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** {
1721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      | 
1722:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) | 
 4273              		.loc 16 1722 0
 4274 036c 0449     		ldr	r1, .L215
 4275 036e 054B     		ldr	r3, .L215+4
 4276 0370 CA68     		ldr	r2, [r1, #12]
 4277 0372 02F4E062 		and	r2, r2, #1792
 4278 0376 1343     		orrs	r3, r3, r2
1721:./lib/CMSIS/CM3/CoreSupport/core_cm3.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) | 
 4279              		.loc 16 1721 0
 4280 0378 CB60     		str	r3, [r1, #12]
 4281              	.LBB336:
 4282              	.LBB337:
1215:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __DMB()                      { __ASM volatile ("dmb"); }
 4283              		.loc 16 1215 0
 4284              		.syntax unified
 4285              	@ 1215 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 4286 037a BFF34F8F 		dsb
 4287              	@ 0 "" 2
 4288              		.thumb
 4289              		.syntax unified
 4290              	.L214:
 4291 037e FEE7     		b	.L214
 4292              	.L216:
 4293              		.align	2
 4294              	.L215:
 4295 0380 00ED00E0 		.word	-536810240
 4296 0384 0400FA05 		.word	100270084
 4297              	.LBE337:
 4298              	.LBE336:
 4299              	.LBE335:
 4300              	.LBE334:
 4301              		.cfi_endproc
 4302              	.LFE1635:
 4303              		.fnend
 4305              		.align	1
 4306              		.global	_Z13assert_failedPhm
 4307              		.syntax unified
 4308              		.thumb
 4309              		.thumb_func
 4310              		.fpu softvfp
 4312              	_Z13assert_failedPhm:
 4313              		.fnstart
 4314              	.LFB1636:
 518:src/main.cpp  ****  
 519:src/main.cpp  ****   unsigned int stacked_r0 = ((unsigned long) hardfault_args[0]);
 520:src/main.cpp  ****   unsigned int stacked_r1 = ((unsigned long) hardfault_args[1]);
 521:src/main.cpp  ****   unsigned int stacked_r2 = ((unsigned long) hardfault_args[2]);
 522:src/main.cpp  ****   unsigned int stacked_r3 = ((unsigned long) hardfault_args[3]);
 523:src/main.cpp  ****  
 524:src/main.cpp  ****   unsigned int stacked_r12 = ((unsigned long) hardfault_args[4]);
 525:src/main.cpp  ****   unsigned int stacked_lr = ((unsigned long) hardfault_args[5]);
 526:src/main.cpp  ****   unsigned int stacked_pc = ((unsigned long) hardfault_args[6]);
 527:src/main.cpp  ****   unsigned int stacked_psr = ((unsigned long) hardfault_args[7]);
 528:src/main.cpp  ****  
 529:src/main.cpp  ****   printf ("\n\n[Hard fault handler - all numbers in hex]\n");
 530:src/main.cpp  ****   printf ("R0 = %x\n", stacked_r0);
 531:src/main.cpp  ****   printf ("R1 = %x\n", stacked_r1);
 532:src/main.cpp  ****   printf ("R2 = %x\n", stacked_r2);
 533:src/main.cpp  ****   printf ("R3 = %x\n", stacked_r3);
 534:src/main.cpp  ****   printf ("R12 = %x\n", stacked_r12);
 535:src/main.cpp  ****   printf ("LR [R14] = %x  subroutine call return address\n", stacked_lr);
 536:src/main.cpp  ****   printf ("PC [R15] = %x  program counter\n", stacked_pc);
 537:src/main.cpp  ****   printf ("PSR = %x\n", stacked_psr);
 538:src/main.cpp  ****   printf ("BFAR = %x\n", (*((volatile unsigned long *)(0xE000ED38))));
 539:src/main.cpp  ****   printf ("CFSR = %x\n", (*((volatile unsigned long *)(0xE000ED28))));
 540:src/main.cpp  ****   printf ("HFSR = %x\n", (*((volatile unsigned long *)(0xE000ED2C))));
 541:src/main.cpp  ****   printf ("DFSR = %x\n", (*((volatile unsigned long *)(0xE000ED30))));
 542:src/main.cpp  ****   printf ("AFSR = %x\n", (*((volatile unsigned long *)(0xE000ED3C))));
 543:src/main.cpp  ****   printf ("SCB_SHCSR = %x\n", SCB->SHCSR);
 544:src/main.cpp  ****   
 545:src/main.cpp  ****   NVIC_SystemReset();
 546:src/main.cpp  **** }
 547:src/main.cpp  **** 
 548:src/main.cpp  **** 
 549:src/main.cpp  **** void assert_failed(uint8_t* file, uint32_t line){
 4315              		.loc 12 549 0
 4316              		.cfi_startproc
 4317              		@ Volatile: function does not return.
 4318              		@ args = 0, pretend = 0, frame = 0
 4319              		@ frame_needed = 0, uses_anonymous_args = 0
 4320              		@ link register save eliminated.
 4321              	.LVL519:
 4322              	.L218:
 4323 0388 FEE7     		b	.L218
 4324              		.cfi_endproc
 4325              	.LFE1636:
 4326              		.cantunwind
 4327              		.fnend
 4329              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv,"a
 4330              		.align	1
 4331              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 4332              		.syntax unified
 4333              		.thumb
 4334              		.thumb_func
 4335              		.fpu softvfp
 4337              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:
 4338              		.fnstart
 4339              	.LFB1844:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4340              		.loc 10 293 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 16
 4343              		@ frame_needed = 0, uses_anonymous_args = 0
 4344              	.LVL520:
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4345              		.loc 10 293 0
 4346 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 4347              		.save {r4, lr}
 4348              		.pad #16
 4349              	.LCFI38:
 4350              		.cfi_def_cfa_offset 24
 4351              		.cfi_offset 4, -8
 4352              		.cfi_offset 14, -4
 4353              	.LVL521:
 4354              	.LBB338:
 4355              	.LBB339:
 4356              	.LBB340:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4357              		.loc 1 19 0
 4358 0002 084B     		ldr	r3, .L220
 4359              	.LBE340:
 4360              	.LBE339:
 4361              	.LBE338:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4362              		.loc 10 296 0
 4363 0004 01AA     		add	r2, sp, #4
 4364              	.LVL522:
 4365              	.LBB346:
 4366              	.LBB345:
 4367              	.LBB344:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4368              		.loc 1 19 0
 4369 0006 0193     		str	r3, [sp, #4]
 4370              	.LVL523:
 4371              	.LBB341:
 4372              	.LBB342:
 4373              	.LBB343:
 4374              		.file 19 "./lib/ros_lib/ros/time.h"
   1:./lib/ros_lib/ros/time.h **** /*
   2:./lib/ros_lib/ros/time.h ****  * Software License Agreement (BSD License)
   3:./lib/ros_lib/ros/time.h ****  *
   4:./lib/ros_lib/ros/time.h ****  * Copyright (c) 2011, Willow Garage, Inc.
   5:./lib/ros_lib/ros/time.h ****  * All rights reserved.
   6:./lib/ros_lib/ros/time.h ****  *
   7:./lib/ros_lib/ros/time.h ****  * Redistribution and use in source and binary forms, with or without
   8:./lib/ros_lib/ros/time.h ****  * modification, are permitted provided that the following conditions
   9:./lib/ros_lib/ros/time.h ****  * are met:
  10:./lib/ros_lib/ros/time.h ****  *
  11:./lib/ros_lib/ros/time.h ****  *  * Redistributions of source code must retain the above copyright
  12:./lib/ros_lib/ros/time.h ****  *    notice, this list of conditions and the following disclaimer.
  13:./lib/ros_lib/ros/time.h ****  *  * Redistributions in binary form must reproduce the above
  14:./lib/ros_lib/ros/time.h ****  *    copyright notice, this list of conditions and the following
  15:./lib/ros_lib/ros/time.h ****  *    disclaimer in the documentation and/or other materials provided
  16:./lib/ros_lib/ros/time.h ****  *    with the distribution.
  17:./lib/ros_lib/ros/time.h ****  *  * Neither the name of Willow Garage, Inc. nor the names of its
  18:./lib/ros_lib/ros/time.h ****  *    contributors may be used to endorse or promote prducts derived
  19:./lib/ros_lib/ros/time.h ****  *    from this software without specific prior written permission.
  20:./lib/ros_lib/ros/time.h ****  *
  21:./lib/ros_lib/ros/time.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  22:./lib/ros_lib/ros/time.h ****  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  23:./lib/ros_lib/ros/time.h ****  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  24:./lib/ros_lib/ros/time.h ****  * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  25:./lib/ros_lib/ros/time.h ****  * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  26:./lib/ros_lib/ros/time.h ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  27:./lib/ros_lib/ros/time.h ****  * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  28:./lib/ros_lib/ros/time.h ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:./lib/ros_lib/ros/time.h ****  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  30:./lib/ros_lib/ros/time.h ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  31:./lib/ros_lib/ros/time.h ****  * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  32:./lib/ros_lib/ros/time.h ****  * POSSIBILITY OF SUCH DAMAGE.
  33:./lib/ros_lib/ros/time.h ****  */
  34:./lib/ros_lib/ros/time.h **** 
  35:./lib/ros_lib/ros/time.h **** #ifndef ROS_TIME_H_
  36:./lib/ros_lib/ros/time.h **** #define ROS_TIME_H_
  37:./lib/ros_lib/ros/time.h **** 
  38:./lib/ros_lib/ros/time.h **** #include <math.h>
  39:./lib/ros_lib/ros/time.h **** #include <stdint.h>
  40:./lib/ros_lib/ros/time.h **** 
  41:./lib/ros_lib/ros/time.h **** #include "ros/duration.h"
  42:./lib/ros_lib/ros/time.h **** 
  43:./lib/ros_lib/ros/time.h **** namespace ros
  44:./lib/ros_lib/ros/time.h **** {
  45:./lib/ros_lib/ros/time.h ****   void normalizeSecNSec(uint32_t &sec, uint32_t &nsec);
  46:./lib/ros_lib/ros/time.h **** 
  47:./lib/ros_lib/ros/time.h ****   class Time
  48:./lib/ros_lib/ros/time.h ****   {
  49:./lib/ros_lib/ros/time.h ****     public:
  50:./lib/ros_lib/ros/time.h ****       uint32_t sec, nsec;
  51:./lib/ros_lib/ros/time.h **** 
  52:./lib/ros_lib/ros/time.h ****       Time() : sec(0), nsec(0) {}
 4375              		.loc 19 52 0
 4376 0008 0023     		movs	r3, #0
 4377 000a 0293     		str	r3, [sp, #8]
 4378 000c 0393     		str	r3, [sp, #12]
 4379              	.LVL524:
 4380              	.LBE343:
 4381              	.LBE342:
 4382              	.LBE341:
 4383              	.LBE344:
 4384              	.LBE345:
 4385              	.LBE346:
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4386              		.loc 10 296 0
 4387 000e 0368     		ldr	r3, [r0]
 4388 0010 0A21     		movs	r1, #10
 4389 0012 1B68     		ldr	r3, [r3]
 293:./lib/ros_lib/ros/node_handle.h ****       {
 4390              		.loc 10 293 0
 4391 0014 0446     		mov	r4, r0
 296:./lib/ros_lib/ros/node_handle.h ****         rt_time = hardware_.time();
 4392              		.loc 10 296 0
 4393 0016 9847     		blx	r3
 4394              	.LVL525:
 4395              	.LBB347:
 4396              	.LBB348:
  47:./lib/ros_lib/STM32Hardware.h ****       }
  48:./lib/ros_lib/STM32Hardware.h ****     }
  49:./lib/ros_lib/STM32Hardware.h **** 
  50:./lib/ros_lib/STM32Hardware.h ****     unsigned long time(){return millis();}
 4397              		.loc 14 50 0
 4398 0018 FFF7FEFF 		bl	millis
 4399              	.LVL526:
 4400              	.LBE348:
 4401              	.LBE347:
 297:./lib/ros_lib/ros/node_handle.h ****       }
 4402              		.loc 10 297 0
 4403 001c E060     		str	r0, [r4, #12]
 298:./lib/ros_lib/ros/node_handle.h **** 
 4404              		.loc 10 298 0
 4405 001e 04B0     		add	sp, sp, #16
 4406              	.LCFI39:
 4407              		.cfi_def_cfa_offset 8
 4408              		@ sp needed
 4409 0020 10BD     		pop	{r4, pc}
 4410              	.LVL527:
 4411              	.L221:
 4412 0022 00BF     		.align	2
 4413              	.L220:
 4414 0024 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4415              		.cfi_endproc
 4416              	.LFE1844:
 4417              		.fnend
 4419              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv,"a
 4420              		.align	1
 4421              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 4422              		.syntax unified
 4423              		.thumb
 4424              		.thumb_func
 4425              		.fpu softvfp
 4427              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:
 4428              		.fnstart
 4429              	.LFB1845:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4430              		.loc 10 390 0
 4431              		.cfi_startproc
 4432              		@ args = 0, pretend = 0, frame = 24
 4433              		@ frame_needed = 0, uses_anonymous_args = 0
 4434              	.LVL528:
 4435              	.LBB353:
 4436              	.LBB354:
 4437              	.LBB355:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4438              		.loc 2 34 0
 4439 0000 0022     		movs	r2, #0
 4440              	.LBE355:
 4441              	.LBE354:
 4442              	.LBE353:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4443              		.loc 10 390 0
 4444 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4445              		.save {r4, r5, r6, r7, r8, lr}
 4446              	.LCFI40:
 4447              		.cfi_def_cfa_offset 24
 4448              		.cfi_offset 4, -24
 4449              		.cfi_offset 5, -20
 4450              		.cfi_offset 6, -16
 4451              		.cfi_offset 7, -12
 4452              		.cfi_offset 8, -8
 4453              		.cfi_offset 14, -4
 4454 0006 0546     		mov	r5, r0
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4455              		.loc 10 402 0
 4456 0008 4FF48067 		mov	r7, #1024
 4457              	.LBB360:
 4458              	.LBB358:
 4459              	.LBB356:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4460              		.loc 2 34 0
 4461 000c 294B     		ldr	r3, .L235
 4462              	.LBE356:
 4463              	.LBE358:
 4464              	.LBE360:
 390:./lib/ros_lib/ros/node_handle.h ****       {
 4465              		.loc 10 390 0
 4466              		.pad #24
 4467 000e 86B0     		sub	sp, sp, #24
 4468              	.LCFI41:
 4469              		.cfi_def_cfa_offset 48
 4470              	.LVL529:
 4471              	.LBB361:
 4472              	.LBB359:
 4473              	.LBB357:
  34:./lib/ros_lib/rosserial_msgs/TopicInfo.h ****     {
 4474              		.loc 2 34 0
 4475 0010 0093     		str	r3, [sp]
 4476 0012 294B     		ldr	r3, .L235+4
 4477 0014 ADF80420 		strh	r2, [sp, #4]	@ movhi
 4478 0018 0293     		str	r3, [sp, #8]
 4479 001a 0393     		str	r3, [sp, #12]
 4480 001c 0493     		str	r3, [sp, #16]
 4481 001e 0592     		str	r2, [sp, #20]
 4482              	.LVL530:
 4483 0020 00F61804 		addw	r4, r0, #2072
 4484 0024 00F67C06 		addw	r6, r0, #2172
 4485              	.LVL531:
 4486              	.L224:
 4487              	.LBE357:
 4488              	.LBE359:
 4489              	.LBE361:
 396:./lib/ros_lib/ros/node_handle.h ****           {
 4490              		.loc 10 396 0
 4491 0028 2368     		ldr	r3, [r4]
 4492 002a BBB1     		cbz	r3, .L223
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4493              		.loc 10 398 0
 4494 002c 9A68     		ldr	r2, [r3, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4495              		.loc 10 400 0
 4496 002e 5868     		ldr	r0, [r3, #4]
 398:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) publishers[i]->topic_;
 4497              		.loc 10 398 0
 4498 0030 ADF80420 		strh	r2, [sp, #4]	@ movhi
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4499              		.loc 10 399 0
 4500 0034 1A68     		ldr	r2, [r3]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4501              		.loc 10 400 0
 4502 0036 0368     		ldr	r3, [r0]
 399:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) publishers[i]->msg_->getType();
 4503              		.loc 10 399 0
 4504 0038 0292     		str	r2, [sp, #8]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4505              		.loc 10 400 0
 4506 003a 9B68     		ldr	r3, [r3, #8]
 4507 003c 9847     		blx	r3
 4508              	.LVL532:
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4509              		.loc 10 401 0
 4510 003e 2368     		ldr	r3, [r4]
 400:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 4511              		.loc 10 400 0
 4512 0040 0390     		str	r0, [sp, #12]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4513              		.loc 10 401 0
 4514 0042 5868     		ldr	r0, [r3, #4]
 4515 0044 0368     		ldr	r3, [r0]
 4516 0046 DB68     		ldr	r3, [r3, #12]
 4517 0048 9847     		blx	r3
 4518              	.LVL533:
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4519              		.loc 10 403 0
 4520 004a 2168     		ldr	r1, [r4]
 4521 004c 2B68     		ldr	r3, [r5]
 401:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = OUTPUT_SIZE;
 4522              		.loc 10 401 0
 4523 004e 0490     		str	r0, [sp, #16]
 402:./lib/ros_lib/ros/node_handle.h ****             publish( publishers[i]->getEndpointType(), &ti );
 4524              		.loc 10 402 0
 4525 0050 0597     		str	r7, [sp, #20]
 4526              	.LVL534:
 403:./lib/ros_lib/ros/node_handle.h ****           }
 4527              		.loc 10 403 0
 4528 0052 1B68     		ldr	r3, [r3]
 4529 0054 6A46     		mov	r2, sp
 4530 0056 0969     		ldr	r1, [r1, #16]
 4531              	.LVL535:
 4532 0058 2846     		mov	r0, r5
 4533 005a 9847     		blx	r3
 4534              	.LVL536:
 4535              	.L223:
 4536 005c 0434     		adds	r4, r4, #4
 394:./lib/ros_lib/ros/node_handle.h ****         {
 4537              		.loc 10 394 0 discriminator 2
 4538 005e B442     		cmp	r4, r6
 4539 0060 E2D1     		bne	.L224
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4540              		.loc 10 414 0
 4541 0062 4FF48067 		mov	r7, #1024
 4542 0066 05F50E66 		add	r6, r5, #2272
 4543              	.L226:
 408:./lib/ros_lib/ros/node_handle.h ****           {
 4544              		.loc 10 408 0
 4545 006a 2068     		ldr	r0, [r4]
 4546 006c C8B1     		cbz	r0, .L225
 410:./lib/ros_lib/ros/node_handle.h ****             ti.topic_name = (char *) subscribers[i]->topic_;
 4547              		.loc 10 410 0
 4548 006e 4368     		ldr	r3, [r0, #4]
 4549 0070 ADF80430 		strh	r3, [sp, #4]	@ movhi
 411:./lib/ros_lib/ros/node_handle.h ****             ti.message_type = (char *) subscribers[i]->getMsgType();
 4550              		.loc 10 411 0
 4551 0074 8368     		ldr	r3, [r0, #8]
 4552 0076 0293     		str	r3, [sp, #8]
 412:./lib/ros_lib/ros/node_handle.h ****             ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 4553              		.loc 10 412 0
 4554 0078 0368     		ldr	r3, [r0]
 4555 007a 9B68     		ldr	r3, [r3, #8]
 4556 007c 9847     		blx	r3
 4557              	.LVL537:
 4558 007e 0390     		str	r0, [sp, #12]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4559              		.loc 10 413 0
 4560 0080 2068     		ldr	r0, [r4]
 4561 0082 0368     		ldr	r3, [r0]
 4562 0084 DB68     		ldr	r3, [r3, #12]
 4563 0086 9847     		blx	r3
 4564              	.LVL538:
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4565              		.loc 10 415 0
 4566 0088 2B68     		ldr	r3, [r5]
 413:./lib/ros_lib/ros/node_handle.h ****             ti.buffer_size = INPUT_SIZE;
 4567              		.loc 10 413 0
 4568 008a 0490     		str	r0, [sp, #16]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4569              		.loc 10 415 0
 4570 008c 2068     		ldr	r0, [r4]
 4571 008e D3F80080 		ldr	r8, [r3]
 4572 0092 0368     		ldr	r3, [r0]
 414:./lib/ros_lib/ros/node_handle.h ****             publish( subscribers[i]->getEndpointType(), &ti );
 4573              		.loc 10 414 0
 4574 0094 0597     		str	r7, [sp, #20]
 415:./lib/ros_lib/ros/node_handle.h ****           }
 4575              		.loc 10 415 0
 4576 0096 5B68     		ldr	r3, [r3, #4]
 4577 0098 9847     		blx	r3
 4578              	.LVL539:
 4579 009a 6A46     		mov	r2, sp
 4580 009c 0146     		mov	r1, r0
 4581 009e 2846     		mov	r0, r5
 4582 00a0 C047     		blx	r8
 4583              	.LVL540:
 4584              	.L225:
 4585 00a2 0434     		adds	r4, r4, #4
 406:./lib/ros_lib/ros/node_handle.h ****         {
 4586              		.loc 10 406 0 discriminator 2
 4587 00a4 A642     		cmp	r6, r4
 4588 00a6 E0D1     		bne	.L226
 418:./lib/ros_lib/ros/node_handle.h ****       }
 4589              		.loc 10 418 0
 4590 00a8 0123     		movs	r3, #1
 4591 00aa 85F8F438 		strb	r3, [r5, #2292]
 419:./lib/ros_lib/ros/node_handle.h **** 
 4592              		.loc 10 419 0
 4593 00ae 06B0     		add	sp, sp, #24
 4594              	.LCFI42:
 4595              		.cfi_def_cfa_offset 24
 4596              	.LVL541:
 4597              		@ sp needed
 4598 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4599              	.LVL542:
 4600              	.L236:
 4601              		.align	2
 4602              	.L235:
 4603 00b4 08000000 		.word	_ZTVN14rosserial_msgs9TopicInfoE+8
 4604 00b8 00000000 		.word	.LC20
 4605              		.cfi_endproc
 4606              	.LFE1845:
 4607              		.fnend
 4609              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh,"axG",%pr
 4610              		.align	1
 4611              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 4612              		.syntax unified
 4613              		.thumb
 4614              		.thumb_func
 4615              		.fpu softvfp
 4617              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:
 4618              		.fnstart
 4619              	.LFB1846:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4620              		.loc 10 300 0
 4621              		.cfi_startproc
 4622              		@ args = 0, pretend = 0, frame = 16
 4623              		@ frame_needed = 0, uses_anonymous_args = 0
 4624              	.LVL543:
 4625 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 4626              		.save {r4, r5, r6, lr}
 4627              		.pad #16
 4628              	.LCFI43:
 4629              		.cfi_def_cfa_offset 32
 4630              		.cfi_offset 4, -16
 4631              		.cfi_offset 5, -12
 4632              		.cfi_offset 6, -8
 4633              		.cfi_offset 14, -4
 4634              	.LVL544:
 4635              	.LBB377:
 4636              	.LBB378:
 4637              	.LBB379:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4638              		.loc 1 19 0
 4639 0002 1C4B     		ldr	r3, .L238
 4640              	.LBE379:
 4641              	.LBE378:
 4642              	.LBE377:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4643              		.loc 10 300 0
 4644 0004 0D46     		mov	r5, r1
 4645              	.LBB390:
 4646              	.LBB388:
 4647              	.LBB386:
  19:./lib/ros_lib/std_msgs/Time.h ****     {
 4648              		.loc 1 19 0
 4649 0006 0193     		str	r3, [sp, #4]
 4650              	.LVL545:
 4651              	.LBB380:
 4652              	.LBB381:
 4653              	.LBB382:
 4654              		.loc 19 52 0
 4655 0008 0023     		movs	r3, #0
 4656              	.LBE382:
 4657              	.LBE381:
 4658              	.LBE380:
 4659              	.LBE386:
 4660              	.LBE388:
 4661              	.LBE390:
 300:./lib/ros_lib/ros/node_handle.h ****       {
 4662              		.loc 10 300 0
 4663 000a 0446     		mov	r4, r0
 4664              	.LBB391:
 4665              	.LBB389:
 4666              	.LBB387:
 4667              	.LBB385:
 4668              	.LBB384:
 4669              	.LBB383:
 4670              		.loc 19 52 0
 4671 000c 0293     		str	r3, [sp, #8]
 4672 000e 0393     		str	r3, [sp, #12]
 4673              	.LVL546:
 4674              	.LBE383:
 4675              	.LBE384:
 4676              	.LBE385:
 4677              	.LBE387:
 4678              	.LBE389:
 4679              	.LBE391:
 4680              	.LBB392:
 4681              	.LBB393:
 4682              		.loc 14 50 0
 4683 0010 FFF7FEFF 		bl	millis
 4684              	.LVL547:
 4685              	.LBE393:
 4686              	.LBE392:
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4687              		.loc 10 305 0
 4688 0014 2946     		mov	r1, r5
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4689              		.loc 10 306 0
 4690 0016 4FF47A75 		mov	r5, #1000
 4691              	.LVL548:
 303:./lib/ros_lib/ros/node_handle.h **** 
 4692              		.loc 10 303 0
 4693 001a E268     		ldr	r2, [r4, #12]
 4694 001c 861A     		subs	r6, r0, r2
 4695              	.LVL549:
 305:./lib/ros_lib/ros/node_handle.h ****         t.data.sec += offset/1000;
 4696              		.loc 10 305 0
 4697 001e 01A8     		add	r0, sp, #4
 4698 0020 FFF7FEFF 		bl	_ZN8std_msgs4Time11deserializeEPh
 4699              	.LVL550:
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4700              		.loc 10 306 0
 4701 0024 B6FBF5F2 		udiv	r2, r6, r5
 4702 0028 029B     		ldr	r3, [sp, #8]
 4703 002a 1344     		add	r3, r3, r2
 307:./lib/ros_lib/ros/node_handle.h **** 
 4704              		.loc 10 307 0
 4705 002c 05FB1262 		mls	r2, r5, r2, r6
 306:./lib/ros_lib/ros/node_handle.h ****         t.data.nsec += (offset%1000)*1000000UL;
 4706              		.loc 10 306 0
 4707 0030 0293     		str	r3, [sp, #8]
 307:./lib/ros_lib/ros/node_handle.h **** 
 4708              		.loc 10 307 0
 4709 0032 114E     		ldr	r6, .L238+4
 4710              	.LVL551:
 4711 0034 039B     		ldr	r3, [sp, #12]
 4712 0036 06FB0232 		mla	r2, r6, r2, r3
 4713 003a 0392     		str	r2, [sp, #12]
 4714              	.LVL552:
 4715              	.LBB394:
 4716              	.LBB395:
 4717              	.LBB396:
 4718              	.LBB397:
 4719              		.loc 14 50 0
 4720 003c FFF7FEFF 		bl	millis
 4721              	.LVL553:
 4722              	.LBE397:
 4723              	.LBE396:
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4724              		.loc 10 326 0
 4725 0040 B0FBF5F3 		udiv	r3, r0, r5
 4726 0044 029A     		ldr	r2, [sp, #8]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4727              		.loc 10 327 0
 4728 0046 0399     		ldr	r1, [sp, #12]
 326:./lib/ros_lib/ros/node_handle.h ****         nsec_offset = new_now.nsec - (ms%1000)*1000000UL + 1000000000UL;
 4729              		.loc 10 326 0
 4730 0048 013A     		subs	r2, r2, #1
 4731 004a D21A     		subs	r2, r2, r3
 4732 004c 2261     		str	r2, [r4, #16]
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4733              		.loc 10 327 0
 4734 004e 0B4A     		ldr	r2, .L238+8
 4735 0050 05FB1303 		mls	r3, r5, r3, r0
 4736 0054 0A44     		add	r2, r2, r1
 4737 0056 2146     		mov	r1, r4
 4738 0058 06FB1323 		mls	r3, r6, r3, r2
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4739              		.loc 10 328 0
 4740 005c 04F11000 		add	r0, r4, #16
 4741              	.LVL554:
 327:./lib/ros_lib/ros/node_handle.h ****         normalizeSecNSec(sec_offset, nsec_offset);
 4742              		.loc 10 327 0
 4743 0060 41F8143F 		str	r3, [r1, #20]!
 328:./lib/ros_lib/ros/node_handle.h ****       }
 4744              		.loc 10 328 0
 4745 0064 FFF7FEFF 		bl	_ZN3ros16normalizeSecNSecERmS0_
 4746              	.LVL555:
 4747              	.LBE395:
 4748              	.LBE394:
 4749              	.LBB398:
 4750              	.LBB399:
 4751              		.loc 14 50 0
 4752 0068 FFF7FEFF 		bl	millis
 4753              	.LVL556:
 4754              	.LBE399:
 4755              	.LBE398:
 310:./lib/ros_lib/ros/node_handle.h ****       }
 4756              		.loc 10 310 0
 4757 006c C4F8FC08 		str	r0, [r4, #2300]
 311:./lib/ros_lib/ros/node_handle.h **** 
 4758              		.loc 10 311 0
 4759 0070 04B0     		add	sp, sp, #16
 4760              	.LCFI44:
 4761              		.cfi_def_cfa_offset 16
 4762              		@ sp needed
 4763 0072 70BD     		pop	{r4, r5, r6, pc}
 4764              	.LVL557:
 4765              	.L239:
 4766              		.align	2
 4767              	.L238:
 4768 0074 08000000 		.word	_ZTVN8std_msgs4TimeE+8
 4769 0078 40420F00 		.word	1000000
 4770 007c 00CA9A3B 		.word	1000000000
 4771              		.cfi_endproc
 4772              	.LFE1846:
 4773              		.fnend
 4775              		.section	.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv,"axG",%pro
 4776              		.align	1
 4777              		.weak	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 4778              		.syntax unified
 4779              		.thumb
 4780              		.thumb_func
 4781              		.fpu softvfp
 4783              	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:
 4784              		.fnstart
 4785              	.LFB1799:
 184:./lib/ros_lib/ros/node_handle.h **** 
 4786              		.loc 10 184 0
 4787              		.cfi_startproc
 4788              		@ args = 0, pretend = 0, frame = 0
 4789              		@ frame_needed = 0, uses_anonymous_args = 0
 4790              	.LVL558:
 4791 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4792              		.save {r3, r4, r5, r6, r7, r8, r9, lr}
 4793              	.LCFI45:
 4794              		.cfi_def_cfa_offset 32
 4795              		.cfi_offset 3, -32
 4796              		.cfi_offset 4, -28
 4797              		.cfi_offset 5, -24
 4798              		.cfi_offset 6, -20
 4799              		.cfi_offset 7, -16
 4800              		.cfi_offset 8, -12
 4801              		.cfi_offset 9, -8
 4802              		.cfi_offset 14, -4
 184:./lib/ros_lib/ros/node_handle.h **** 
 4803              		.loc 10 184 0
 4804 0004 0446     		mov	r4, r0
 4805              	.LVL559:
 4806              	.LBB415:
 4807              	.LBB416:
 4808              		.loc 14 50 0
 4809 0006 FFF7FEFF 		bl	millis
 4810              	.LVL560:
 4811              	.LBE416:
 4812              	.LBE415:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4813              		.loc 10 188 0
 4814 000a 42F6F822 		movw	r2, #11000
 4815 000e D4F8FC38 		ldr	r3, [r4, #2300]
 4816              	.LBB418:
 4817              	.LBB417:
 4818              		.loc 14 50 0
 4819 0012 0546     		mov	r5, r0
 4820              	.LVL561:
 4821              	.LBE417:
 4822              	.LBE418:
 188:./lib/ros_lib/ros/node_handle.h ****             configured_ = false;
 4823              		.loc 10 188 0
 4824 0014 C31A     		subs	r3, r0, r3
 4825 0016 9342     		cmp	r3, r2
 189:./lib/ros_lib/ros/node_handle.h ****          }
 4826              		.loc 10 189 0
 4827 0018 84BF     		itt	hi
 4828 001a 0023     		movhi	r3, #0
 4829 001c 84F8F438 		strbhi	r3, [r4, #2292]
 193:./lib/ros_lib/ros/node_handle.h ****           if (c_time > last_msg_timeout_time){
 4830              		.loc 10 193 0
 4831 0020 D4F8E038 		ldr	r3, [r4, #2272]
 4832 0024 33B1     		cbz	r3, .L242
 194:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 4833              		.loc 10 194 0
 4834 0026 D4F80039 		ldr	r3, [r4, #2304]
 4835 002a 8342     		cmp	r3, r0
 195:./lib/ros_lib/ros/node_handle.h ****           }
 4836              		.loc 10 195 0
 4837 002c 3CBF     		itt	cc
 4838 002e 0023     		movcc	r3, #0
 4839 0030 C4F8E038 		strcc	r3, [r4, #2272]
 4840              	.L242:
 4841              	.LBB419:
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 4842              		.loc 10 251 0
 4843 0034 0027     		movs	r7, #0
 4844              	.LBB420:
 4845              	.LBB421:
 4846              	.LBB422:
 4847              	.LBB423:
 125:./inc/UsartWithBuffer.h ****     uint16_t tempTail = RX_Tail;
 4848              		.loc 15 125 0
 4849 0036 7A4E     		ldr	r6, .L278
 4850              	.LBE423:
 4851              	.LBE422:
 4852              	.LBE421:
 4853              	.LBE420:
 268:./lib/ros_lib/ros/node_handle.h ****               }
 4854              		.loc 10 268 0
 4855 0038 04F11808 		add	r8, r4, #24
 4856              	.LVL562:
 4857              	.L243:
 4858              	.LBB433:
 4859              	.LBB432:
 4860              	.LBB425:
 4861              	.LBB424:
 125:./inc/UsartWithBuffer.h ****     uint16_t tempTail = RX_Tail;
 4862              		.loc 15 125 0
 4863 003c B6F83824 		ldrh	r2, [r6, #1080]
 126:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
 4864              		.loc 15 126 0
 4865 0040 B6F83634 		ldrh	r3, [r6, #1078]
 125:./inc/UsartWithBuffer.h ****     uint16_t tempTail = RX_Tail;
 4866              		.loc 15 125 0
 4867 0044 92B2     		uxth	r2, r2
 4868              	.LVL563:
 126:./inc/UsartWithBuffer.h ****     /* There are data left in the buffer unless Head and Tail are equal. */
 4869              		.loc 15 126 0
 4870 0046 9BB2     		uxth	r3, r3
 4871              	.LVL564:
 4872              	.LBE424:
 4873              	.LBE425:
  35:./lib/ros_lib/STM32Hardware.h ****         return com->getch();
 4874              		.loc 14 35 0
 4875 0048 9A42     		cmp	r2, r3
 4876 004a 00F0E380 		beq	.L244
 4877              	.LVL565:
 4878              	.LBB426:
 4879              	.LBB427:
 4880              	.LBB428:
 4881              	.LBB429:
1205:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** 
 4882              		.loc 16 1205 0
 4883              		.syntax unified
 4884              	@ 1205 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 4885 004e 72B6     		cpsid i
 4886              	@ 0 "" 2
 4887              		.thumb
 4888              		.syntax unified
 4889              	.LBE429:
 4890              	.LBE428:
 135:./inc/UsartWithBuffer.h ****     /* Advance buffer tail. */
 4891              		.loc 15 135 0
 4892 0050 B6F83634 		ldrh	r3, [r6, #1078]
 4893 0054 9BB2     		uxth	r3, r3
 4894 0056 3344     		add	r3, r3, r6
 4895 0058 93F83A24 		ldrb	r2, [r3, #1082]	@ zero_extendqisi2
 137:./inc/UsartWithBuffer.h ****     __enable_irq();
 4896              		.loc 15 137 0
 4897 005c B6F83634 		ldrh	r3, [r6, #1078]
 135:./inc/UsartWithBuffer.h ****     /* Advance buffer tail. */
 4898              		.loc 15 135 0
 4899 0060 D2B2     		uxtb	r2, r2
 4900              	.LVL566:
 137:./inc/UsartWithBuffer.h ****     __enable_irq();
 4901              		.loc 15 137 0
 4902 0062 0133     		adds	r3, r3, #1
 4903 0064 C3F30903 		ubfx	r3, r3, #0, #10
 4904 0068 A6F83634 		strh	r3, [r6, #1078]	@ movhi
 4905              	.LBB430:
 4906              	.LBB431:
1204:./lib/CMSIS/CM3/CoreSupport/core_cm3.h **** static __INLINE void __disable_irq()              { __ASM volatile ("cpsid i"); }
 4907              		.loc 16 1204 0
 4908              		.syntax unified
 4909              	@ 1204 "./lib/CMSIS/CM3/CoreSupport/core_cm3.h" 1
 4910 006c 62B6     		cpsie i
 4911              	@ 0 "" 2
 4912              	.LVL567:
 4913              		.thumb
 4914              		.syntax unified
 4915              	.LBE431:
 4916              	.LBE430:
 4917              	.LBE427:
 4918              	.LBE426:
 4919              	.LBE432:
 4920              	.LBE433:
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4921              		.loc 10 204 0
 4922 006e D4F8F038 		ldr	r3, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4923              		.loc 10 205 0
 4924 0072 D4F8E098 		ldr	r9, [r4, #2272]
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4925              		.loc 10 204 0
 4926 0076 1344     		add	r3, r3, r2
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4927              		.loc 10 205 0
 4928 0078 B9F1070F 		cmp	r9, #7
 204:./lib/ros_lib/ros/node_handle.h ****           if( mode_ == MODE_MESSAGE ){        /* message data being recieved */
 4929              		.loc 10 204 0
 4930 007c C4F8F038 		str	r3, [r4, #2288]
 205:./lib/ros_lib/ros/node_handle.h ****             message_in[index_++] = data;
 4931              		.loc 10 205 0
 4932 0080 11D1     		bne	.L245
 206:./lib/ros_lib/ros/node_handle.h ****             bytes_--;
 4933              		.loc 10 206 0
 4934 0082 D4F8EC38 		ldr	r3, [r4, #2284]
 4935 0086 591C     		adds	r1, r3, #1
 4936 0088 2344     		add	r3, r3, r4
 4937 008a C4F8EC18 		str	r1, [r4, #2284]
 4938 008e 1A76     		strb	r2, [r3, #24]
 4939              	.LVL568:
 207:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)                  /* is message complete? if so, checksum */
 4940              		.loc 10 207 0
 4941 0090 D4F8E438 		ldr	r3, [r4, #2276]
 4942 0094 013B     		subs	r3, r3, #1
 4943 0096 C4F8E438 		str	r3, [r4, #2276]
 4944              	.L277:
 208:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 4945              		.loc 10 208 0
 4946 009a 002B     		cmp	r3, #0
 4947 009c CED1     		bne	.L243
 209:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_FIRST_FF ){
 4948              		.loc 10 209 0
 4949 009e 0823     		movs	r3, #8
 4950              	.L275:
 222:./lib/ros_lib/ros/node_handle.h ****             }else{
 4951              		.loc 10 222 0
 4952 00a0 C4F8E038 		str	r3, [r4, #2272]
 4953 00a4 CAE7     		b	.L243
 4954              	.LVL569:
 4955              	.L245:
 210:./lib/ros_lib/ros/node_handle.h ****             if(data == 0xff){
 4956              		.loc 10 210 0
 4957 00a6 B9F1000F 		cmp	r9, #0
 4958 00aa 14D1     		bne	.L248
 211:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4959              		.loc 10 211 0
 4960 00ac FF2A     		cmp	r2, #255
 4961 00ae 07D1     		bne	.L249
 212:./lib/ros_lib/ros/node_handle.h ****               last_msg_timeout_time = c_time + MSG_TIMEOUT;
 4962              		.loc 10 212 0
 4963 00b0 0123     		movs	r3, #1
 4964 00b2 C4F8E038 		str	r3, [r4, #2272]
 213:./lib/ros_lib/ros/node_handle.h ****             }
 4965              		.loc 10 213 0
 4966 00b6 05F11403 		add	r3, r5, #20
 4967 00ba C4F80039 		str	r3, [r4, #2304]
 4968 00be BDE7     		b	.L243
 4969              	.L249:
 4970              	.LVL570:
 4971              	.LBB434:
 4972              	.LBB435:
 4973              		.loc 14 50 0
 4974 00c0 FFF7FEFF 		bl	millis
 4975              	.LVL571:
 4976              	.LBE435:
 4977              	.LBE434:
 215:./lib/ros_lib/ros/node_handle.h ****               /* We have been stuck in spinOnce too long, return error */
 4978              		.loc 10 215 0
 4979 00c4 401B     		subs	r0, r0, r5
 4980 00c6 0528     		cmp	r0, #5
 4981 00c8 B8D9     		bls	.L243
 217:./lib/ros_lib/ros/node_handle.h ****               return -2;
 4982              		.loc 10 217 0
 4983 00ca 84F8F498 		strb	r9, [r4, #2292]
 218:./lib/ros_lib/ros/node_handle.h ****             }
 4984              		.loc 10 218 0
 4985 00ce 6FF00100 		mvn	r0, #1
 4986 00d2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4987              	.LVL572:
 4988              	.L248:
 220:./lib/ros_lib/ros/node_handle.h ****             if(data == PROTOCOL_VER){
 4989              		.loc 10 220 0
 4990 00d6 B9F1010F 		cmp	r9, #1
 4991 00da 0DD1     		bne	.L251
 221:./lib/ros_lib/ros/node_handle.h ****               mode_++;
 4992              		.loc 10 221 0
 4993 00dc FE2A     		cmp	r2, #254
 4994 00de 01D1     		bne	.L252
 222:./lib/ros_lib/ros/node_handle.h ****             }else{
 4995              		.loc 10 222 0
 4996 00e0 0223     		movs	r3, #2
 4997 00e2 DDE7     		b	.L275
 4998              	.L252:
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 4999              		.loc 10 225 0
 5000 00e4 94F8F438 		ldrb	r3, [r4, #2292]	@ zero_extendqisi2
 224:./lib/ros_lib/ros/node_handle.h ****               if (configured_ == false)
 5001              		.loc 10 224 0
 5002 00e8 C4F8E078 		str	r7, [r4, #2272]
 225:./lib/ros_lib/ros/node_handle.h ****                   requestSyncTime(); 	/* send a msg back showing our protocol version */
 5003              		.loc 10 225 0
 5004 00ec 002B     		cmp	r3, #0
 5005 00ee A5D1     		bne	.L243
 226:./lib/ros_lib/ros/node_handle.h ****             }
 5006              		.loc 10 226 0
 5007 00f0 2046     		mov	r0, r4
 5008 00f2 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 5009              	.LVL573:
 5010 00f6 A1E7     		b	.L243
 5011              	.LVL574:
 5012              	.L251:
 228:./lib/ros_lib/ros/node_handle.h ****             bytes_ = data;
 5013              		.loc 10 228 0
 5014 00f8 B9F1020F 		cmp	r9, #2
 5015 00fc 09D1     		bne	.L253
 231:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte for calculating size checksum */
 5016              		.loc 10 231 0
 5017 00fe 0323     		movs	r3, #3
 229:./lib/ros_lib/ros/node_handle.h ****             index_ = 0;
 5018              		.loc 10 229 0
 5019 0100 C4F8E428 		str	r2, [r4, #2276]
 230:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 5020              		.loc 10 230 0
 5021 0104 C4F8EC78 		str	r7, [r4, #2284]
 5022              	.L276:
 243:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 5023              		.loc 10 243 0
 5024 0108 C4F8E038 		str	r3, [r4, #2272]
 244:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_TOPIC_H ){  /* top half of topic id */
 5025              		.loc 10 244 0
 5026 010c C4F8F028 		str	r2, [r4, #2288]
 5027 0110 94E7     		b	.L243
 5028              	.L253:
 233:./lib/ros_lib/ros/node_handle.h ****             bytes_ += data<<8;
 5029              		.loc 10 233 0
 5030 0112 B9F1030F 		cmp	r9, #3
 5031 0116 07D1     		bne	.L254
 234:./lib/ros_lib/ros/node_handle.h **** 	    mode_++;
 5032              		.loc 10 234 0
 5033 0118 D4F8E438 		ldr	r3, [r4, #2276]
 5034 011c 03EB0222 		add	r2, r3, r2, lsl #8
 5035 0120 C4F8E428 		str	r2, [r4, #2276]
 235:./lib/ros_lib/ros/node_handle.h ****           }else if( mode_ == MODE_SIZE_CHECKSUM ){
 5036              		.loc 10 235 0
 5037 0124 0423     		movs	r3, #4
 5038 0126 BBE7     		b	.L275
 5039              	.L254:
 236:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255)
 5040              		.loc 10 236 0
 5041 0128 B9F1040F 		cmp	r9, #4
 5042 012c 0BD1     		bne	.L255
 237:./lib/ros_lib/ros/node_handle.h **** 	      mode_++;
 5043              		.loc 10 237 0
 5044 012e 5A42     		rsbs	r2, r3, #0
 5045 0130 D2B2     		uxtb	r2, r2
 5046 0132 DBB2     		uxtb	r3, r3
 5047 0134 58BF     		it	pl
 5048 0136 5342     		rsbpl	r3, r2, #0
 5049 0138 FF2B     		cmp	r3, #255
 5050 013a 01D1     		bne	.L256
 238:./lib/ros_lib/ros/node_handle.h **** 	    else
 5051              		.loc 10 238 0
 5052 013c 0523     		movs	r3, #5
 5053 013e AFE7     		b	.L275
 5054              	.L256:
 240:./lib/ros_lib/ros/node_handle.h **** 	  }else if( mode_ == MODE_TOPIC_L ){  /* bottom half of topic id */
 5055              		.loc 10 240 0
 5056 0140 C4F8E078 		str	r7, [r4, #2272]
 5057 0144 7AE7     		b	.L243
 5058              	.L255:
 241:./lib/ros_lib/ros/node_handle.h ****             topic_ = data;
 5059              		.loc 10 241 0
 5060 0146 B9F1050F 		cmp	r9, #5
 5061 014a 03D1     		bne	.L257
 242:./lib/ros_lib/ros/node_handle.h ****             mode_++;
 5062              		.loc 10 242 0
 5063 014c C4F8E828 		str	r2, [r4, #2280]
 243:./lib/ros_lib/ros/node_handle.h ****             checksum_ = data;               /* first byte included in checksum */
 5064              		.loc 10 243 0
 5065 0150 0623     		movs	r3, #6
 5066 0152 D9E7     		b	.L276
 5067              	.L257:
 245:./lib/ros_lib/ros/node_handle.h ****             topic_ += data<<8;
 5068              		.loc 10 245 0
 5069 0154 B9F1060F 		cmp	r9, #6
 5070 0158 0BD1     		bne	.L258
 246:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 5071              		.loc 10 246 0
 5072 015a D4F8E838 		ldr	r3, [r4, #2280]
 5073 015e 03EB0222 		add	r2, r3, r2, lsl #8
 247:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 5074              		.loc 10 247 0
 5075 0162 0723     		movs	r3, #7
 246:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_MESSAGE;
 5076              		.loc 10 246 0
 5077 0164 C4F8E828 		str	r2, [r4, #2280]
 247:./lib/ros_lib/ros/node_handle.h ****             if(bytes_ == 0)
 5078              		.loc 10 247 0
 5079 0168 C4F8E038 		str	r3, [r4, #2272]
 248:./lib/ros_lib/ros/node_handle.h ****               mode_ = MODE_MSG_CHECKSUM;
 5080              		.loc 10 248 0
 5081 016c D4F8E438 		ldr	r3, [r4, #2276]
 5082 0170 93E7     		b	.L277
 5083              	.L258:
 250:./lib/ros_lib/ros/node_handle.h ****             mode_ = MODE_FIRST_FF;
 5084              		.loc 10 250 0
 5085 0172 B9F1080F 		cmp	r9, #8
 5086 0176 7FF461AF 		bne	.L243
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 5087              		.loc 10 252 0
 5088 017a 5A42     		rsbs	r2, r3, #0
 5089 017c D2B2     		uxtb	r2, r2
 5090 017e DBB2     		uxtb	r3, r3
 5091 0180 58BF     		it	pl
 5092 0182 5342     		rsbpl	r3, r2, #0
 5093 0184 FF2B     		cmp	r3, #255
 251:./lib/ros_lib/ros/node_handle.h ****             if( (checksum_%256) == 255){
 5094              		.loc 10 251 0
 5095 0186 C4F8E078 		str	r7, [r4, #2272]
 252:./lib/ros_lib/ros/node_handle.h ****               if(topic_ == TopicInfo::ID_PUBLISHER){
 5096              		.loc 10 252 0
 5097 018a 7FF457AF 		bne	.L243
 253:./lib/ros_lib/ros/node_handle.h ****                 requestSyncTime();
 5098              		.loc 10 253 0
 5099 018e D4F8E838 		ldr	r3, [r4, #2280]
 5100 0192 6BB9     		cbnz	r3, .L260
 254:./lib/ros_lib/ros/node_handle.h ****                 negotiateTopics();
 5101              		.loc 10 254 0
 5102 0194 2046     		mov	r0, r4
 5103 0196 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 5104              	.LVL575:
 255:./lib/ros_lib/ros/node_handle.h ****                 last_sync_time = c_time;
 5105              		.loc 10 255 0
 5106 019a 2046     		mov	r0, r4
 5107 019c FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
 5108              	.LVL576:
 256:./lib/ros_lib/ros/node_handle.h ****                 last_sync_receive_time = c_time;
 5109              		.loc 10 256 0
 5110 01a0 C4F8F858 		str	r5, [r4, #2296]
 257:./lib/ros_lib/ros/node_handle.h ****                 return -1;
 5111              		.loc 10 257 0
 5112 01a4 C4F8FC58 		str	r5, [r4, #2300]
 258:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TIME){
 5113              		.loc 10 258 0
 5114 01a8 4FF0FF30 		mov	r0, #-1
 5115 01ac BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5116              	.LVL577:
 5117              	.L260:
 259:./lib/ros_lib/ros/node_handle.h ****                 syncTime(message_in);
 5118              		.loc 10 259 0
 5119 01b0 0A2B     		cmp	r3, #10
 5120 01b2 04D1     		bne	.L261
 260:./lib/ros_lib/ros/node_handle.h ****               }else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST){
 5121              		.loc 10 260 0
 5122 01b4 4146     		mov	r1, r8
 5123 01b6 2046     		mov	r0, r4
 5124 01b8 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
 5125              	.LVL578:
 5126 01bc 3EE7     		b	.L243
 5127              	.LVL579:
 5128              	.L261:
 261:./lib/ros_lib/ros/node_handle.h ****                   req_param_resp.deserialize(message_in);
 5129              		.loc 10 261 0
 5130 01be 062B     		cmp	r3, #6
 5131 01c0 08D1     		bne	.L262
 262:./lib/ros_lib/ros/node_handle.h ****                   param_recieved= true;
 5132              		.loc 10 262 0
 5133 01c2 4146     		mov	r1, r8
 5134 01c4 04F60810 		addw	r0, r4, #2312
 5135 01c8 FFF7FEFF 		bl	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 5136              	.LVL580:
 263:./lib/ros_lib/ros/node_handle.h ****               }else if(topic_ == TopicInfo::ID_TX_STOP){
 5137              		.loc 10 263 0
 5138 01cc 0123     		movs	r3, #1
 5139 01ce 84F80439 		strb	r3, [r4, #2308]
 5140 01d2 33E7     		b	.L243
 5141              	.LVL581:
 5142              	.L262:
 264:./lib/ros_lib/ros/node_handle.h ****                   configured_ = false;
 5143              		.loc 10 264 0
 5144 01d4 0B2B     		cmp	r3, #11
 5145 01d6 02D1     		bne	.L263
 265:./lib/ros_lib/ros/node_handle.h ****               }else{
 5146              		.loc 10 265 0
 5147 01d8 84F8F478 		strb	r7, [r4, #2292]
 5148 01dc 2EE7     		b	.L243
 5149              	.L263:
 267:./lib/ros_lib/ros/node_handle.h ****                   subscribers[topic_-100]->callback( message_in );
 5150              		.loc 10 267 0
 5151 01de 04EB8303 		add	r3, r4, r3, lsl #2
 5152 01e2 D3F8EC06 		ldr	r0, [r3, #1772]
 5153 01e6 0028     		cmp	r0, #0
 5154 01e8 3FF428AF 		beq	.L243
 268:./lib/ros_lib/ros/node_handle.h ****               }
 5155              		.loc 10 268 0
 5156 01ec 0368     		ldr	r3, [r0]
 5157 01ee 4146     		mov	r1, r8
 5158 01f0 1B68     		ldr	r3, [r3]
 5159 01f2 9847     		blx	r3
 5160              	.LVL582:
 5161 01f4 22E7     		b	.L243
 5162              	.LVL583:
 5163              	.L264:
 5164              	.LBE419:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 5165              		.loc 10 275 0 discriminator 1
 5166 01f6 40F6C412 		movw	r2, #2500
 5167 01fa D4F8F838 		ldr	r3, [r4, #2296]
 5168 01fe EB1A     		subs	r3, r5, r3
 5169 0200 9342     		cmp	r3, r2
 5170 0202 04D9     		bls	.L265
 276:./lib/ros_lib/ros/node_handle.h ****           last_sync_time = c_time;
 5171              		.loc 10 276 0
 5172 0204 2046     		mov	r0, r4
 5173 0206 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
 5174              	.LVL584:
 277:./lib/ros_lib/ros/node_handle.h ****         }
 5175              		.loc 10 277 0
 5176 020a C4F8F858 		str	r5, [r4, #2296]
 5177              	.L265:
 280:./lib/ros_lib/ros/node_handle.h ****       }
 5178              		.loc 10 280 0
 5179 020e 0020     		movs	r0, #0
 5180 0210 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5181              	.LVL585:
 5182              	.L244:
 275:./lib/ros_lib/ros/node_handle.h ****           requestSyncTime();
 5183              		.loc 10 275 0
 5184 0214 94F8F408 		ldrb	r0, [r4, #2292]	@ zero_extendqisi2
 5185 0218 0028     		cmp	r0, #0
 5186 021a ECD1     		bne	.L264
 281:./lib/ros_lib/ros/node_handle.h **** 
 5187              		.loc 10 281 0
 5188 021c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 5189              	.LVL586:
 5190              	.L279:
 5191              		.align	2
 5192              	.L278:
 5193 0220 00000000 		.word	.LANCHOR1
 5194              		.cfi_endproc
 5195              	.LFE1799:
 5196              		.fnend
 5198              		.global	__aeabi_dadd
 5199              		.global	__aeabi_f2iz
 5200              		.section	.text.startup,"ax",%progbits
 5201              		.align	1
 5202              		.global	main
 5203              		.syntax unified
 5204              		.thumb
 5205              		.thumb_func
 5206              		.fpu softvfp
 5208              	main:
 5209              		.fnstart
 5210              	.LFB1631:
 145:src/main.cpp  ****   #ifdef DEBUG
 5211              		.loc 12 145 0
 5212              		.cfi_startproc
 5213              		@ args = 0, pretend = 0, frame = 704
 5214              		@ frame_needed = 0, uses_anonymous_args = 0
 5215 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5216              		.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5217              	.LCFI46:
 5218              		.cfi_def_cfa_offset 36
 5219              		.cfi_offset 4, -36
 5220              		.cfi_offset 5, -32
 5221              		.cfi_offset 6, -28
 5222              		.cfi_offset 7, -24
 5223              		.cfi_offset 8, -20
 5224              		.cfi_offset 9, -16
 5225              		.cfi_offset 10, -12
 5226              		.cfi_offset 11, -8
 5227              		.cfi_offset 14, -4
 5228              		.pad #740
 5229 0004 ADF5397D 		sub	sp, sp, #740
 5230              	.LCFI47:
 5231              		.cfi_def_cfa_offset 776
 150:src/main.cpp  ****   SysTick_Init();
 5232              		.loc 12 150 0
 5233 0008 FFF7FEFF 		bl	RCC_Configuration
 5234              	.LVL587:
 151:src/main.cpp  **** 
 5235              		.loc 12 151 0
 5236 000c FFF7FEFF 		bl	SysTick_Init
 5237              	.LVL588:
 153:src/main.cpp  ****   I2C1_Init();
 5238              		.loc 12 153 0
 5239 0010 0121     		movs	r1, #1
 5240 0012 C248     		ldr	r0, .L318
 5241 0014 FFF7FEFF 		bl	GPIO_PinRemapConfig
 5242              	.LVL589:
 154:src/main.cpp  ****   DEBUG_Init();
 5243              		.loc 12 154 0
 5244 0018 FFF7FEFF 		bl	I2C1_Init
 5245              	.LVL590:
 155:src/main.cpp  ****   SHUTDOWN_Init();
 5246              		.loc 12 155 0
 5247 001c FFF7FEFF 		bl	DEBUG_Init
 5248              	.LVL591:
 156:src/main.cpp  ****   LED_Init();
 5249              		.loc 12 156 0
 5250 0020 FFF7FEFF 		bl	SHUTDOWN_Init
 5251              	.LVL592:
 157:src/main.cpp  **** 
 5252              		.loc 12 157 0
 5253 0024 FFF7FEFF 		bl	LED_Init
 5254              	.LVL593:
 5255              	.LBB472:
 5256              	.LBB473:
 148:./lib/ros_lib/ros/node_handle.h ****         bytes_ = 0;
 5257              		.loc 10 148 0
 5258 0028 0023     		movs	r3, #0
 5259 002a 41F21C12 		movw	r2, #4380
 5260 002e BC4C     		ldr	r4, .L318+4
 5261 0030 A350     		str	r3, [r4, r2]
 149:./lib/ros_lib/ros/node_handle.h ****         index_ = 0;
 5262              		.loc 10 149 0
 5263 0032 04F58952 		add	r2, r4, #4384
 5264 0036 1360     		str	r3, [r2]
 150:./lib/ros_lib/ros/node_handle.h ****         topic_ = 0;
 5265              		.loc 10 150 0
 5266 0038 41F22812 		movw	r2, #4392
 5267 003c A350     		str	r3, [r4, r2]
 151:./lib/ros_lib/ros/node_handle.h ****       };
 5268              		.loc 10 151 0
 5269 003e 41F22412 		movw	r2, #4388
 5270 0042 A350     		str	r3, [r4, r2]
 5271              	.LVL594:
 5272 0044 04F63C02 		addw	r2, r4, #2108
 5273 0048 02F67801 		addw	r1, r2, #2168
 5274              	.LVL595:
 5275              	.L283:
 5276              	.LBE473:
 5277              	.LBE472:
 5278              	.LBB474:
 5279              	.LBB475:
 353:./lib/ros_lib/ros/node_handle.h ****             subscribers[i] = (Subscriber_*) &s;
 5280              		.loc 10 353 0
 5281 004c 51F8040F 		ldr	r0, [r1, #4]!
 5282 0050 0028     		cmp	r0, #0
 5283 0052 40F08F83 		bne	.L281
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5284              		.loc 10 354 0
 5285 0056 B348     		ldr	r0, .L318+8
 5286 0058 03F21E21 		addw	r1, r3, #542
 5287 005c 04EB8101 		add	r1, r4, r1, lsl #2
 5288 0060 00F17405 		add	r5, r0, #116
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5289              		.loc 10 355 0
 5290 0064 6433     		adds	r3, r3, #100
 5291              	.LVL596:
 354:./lib/ros_lib/ros/node_handle.h ****             s.id_ = i+100;
 5292              		.loc 10 354 0
 5293 0066 C1F84058 		str	r5, [r1, #2112]
 355:./lib/ros_lib/ros/node_handle.h ****             return true;
 5294              		.loc 10 355 0
 5295 006a 8367     		str	r3, [r0, #120]
 5296              	.LVL597:
 5297              	.L282:
 5298 006c 02F61401 		addw	r1, r2, #2068
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 5299              		.loc 10 352 0
 5300 0070 0846     		mov	r0, r1
 5301              	.LBE475:
 5302              	.LBE474:
 5303              	.LBB477:
 5304              	.LBB478:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5305              		.loc 10 338 0
 5306 0072 0023     		movs	r3, #0
 5307              	.LVL598:
 5308              	.L286:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 5309              		.loc 10 339 0
 5310 0074 50F8045F 		ldr	r5, [r0, #4]!
 5311 0078 002D     		cmp	r5, #0
 5312 007a 40F08083 		bne	.L284
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5313              		.loc 10 340 0
 5314 007e A948     		ldr	r0, .L318+8
 5315 0080 03F20625 		addw	r5, r3, #518
 5316 0084 04EB8505 		add	r5, r4, r5, lsl #2
 5317 0088 00F1B406 		add	r6, r0, #180
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5318              		.loc 10 341 0
 5319 008c 7D33     		adds	r3, r3, #125
 5320              	.LVL599:
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5321              		.loc 10 340 0
 5322 008e C5F83C68 		str	r6, [r5, #2108]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5323              		.loc 10 341 0
 5324 0092 C0F8BC30 		str	r3, [r0, #188]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5325              		.loc 10 342 0
 5326 0096 C0F8C020 		str	r2, [r0, #192]
 5327              	.LVL600:
 5328              	.L285:
 5329              	.LBE478:
 5330              	.LBE477:
 5331              	.LBB480:
 5332              	.LBB481:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 5333              		.loc 10 338 0
 5334 009a 0023     		movs	r3, #0
 5335              	.LVL601:
 5336              	.L289:
 339:./lib/ros_lib/ros/node_handle.h ****             publishers[i] = &p;
 5337              		.loc 10 339 0
 5338 009c 51F8040F 		ldr	r0, [r1, #4]!
 5339 00a0 0028     		cmp	r0, #0
 5340 00a2 40F07183 		bne	.L287
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5341              		.loc 10 340 0
 5342 00a6 9F49     		ldr	r1, .L318+8
 5343 00a8 03F20620 		addw	r0, r3, #518
 5344 00ac 04EB8000 		add	r0, r4, r0, lsl #2
 5345 00b0 01F1C805 		add	r5, r1, #200
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5346              		.loc 10 341 0
 5347 00b4 7D33     		adds	r3, r3, #125
 5348              	.LVL602:
 340:./lib/ros_lib/ros/node_handle.h ****             p.id_ = i+100+MAX_SUBSCRIBERS;
 5349              		.loc 10 340 0
 5350 00b6 C0F83C58 		str	r5, [r0, #2108]
 341:./lib/ros_lib/ros/node_handle.h ****             p.nh_ = this;
 5351              		.loc 10 341 0
 5352 00ba C1F8D030 		str	r3, [r1, #208]
 342:./lib/ros_lib/ros/node_handle.h ****             return true;
 5353              		.loc 10 342 0
 5354 00be C1F8D420 		str	r2, [r1, #212]
 5355              	.LVL603:
 5356              	.L288:
 5357              	.LBE481:
 5358              	.LBE480:
 173:src/main.cpp  **** 
 5359              		.loc 12 173 0
 5360 00c2 4FF00003 		mov	r3, #0
 214:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5361              		.loc 12 214 0
 5362 00c6 0427     		movs	r7, #4
 173:src/main.cpp  **** 
 5363              		.loc 12 173 0
 5364 00c8 84F83A38 		strb	r3, [r4, #2106]
 5365              	.LVL604:
 204:src/main.cpp  ****   //}
 5366              		.loc 12 204 0
 5367 00cc 964B     		ldr	r3, .L318+12
 211:src/main.cpp  **** 
 5368              		.loc 12 211 0
 5369 00ce 4FF47A70 		mov	r0, #1000
 204:src/main.cpp  ****   //}
 5370              		.loc 12 204 0
 5371 00d2 E360     		str	r3, [r4, #12]	@ float
 208:src/main.cpp  ****   //}
 5372              		.loc 12 208 0
 5373 00d4 954B     		ldr	r3, .L318+16
 218:src/main.cpp  **** 
 5374              		.loc 12 218 0
 5375 00d6 41F6F566 		movw	r6, #7925
 208:src/main.cpp  ****   //}
 5376              		.loc 12 208 0
 5377 00da 2361     		str	r3, [r4, #16]	@ float
 211:src/main.cpp  **** 
 5378              		.loc 12 211 0
 5379 00dc FFF7FEFF 		bl	delay
 5380              	.LVL605:
 214:src/main.cpp  ****   SL.m_ServoPin = GPIO_Pin_9;
 5381              		.loc 12 214 0
 5382 00e0 934B     		ldr	r3, .L318+20
 5383 00e2 944A     		ldr	r2, .L318+24
 5384 00e4 0121     		movs	r1, #1
 5385 00e6 0097     		str	r7, [sp]
 5386 00e8 1CA8     		add	r0, sp, #112
 5387 00ea FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5388              	.LVL606:
 215:src/main.cpp  ****   SL.m_ServoPort = GPIOB;
 5389              		.loc 12 215 0
 5390 00ee 4FF40073 		mov	r3, #512
 5391 00f2 2293     		str	r3, [sp, #136]
 217:src/main.cpp  ****   SL.m_ServoLimitMin = 7925;
 5392              		.loc 12 217 0
 5393 00f4 40F29153 		movw	r3, #1425
 5394 00f8 2093     		str	r3, [sp, #128]
 220:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5395              		.loc 12 220 0
 5396 00fa 0323     		movs	r3, #3
 216:src/main.cpp  ****   SL.m_ServoLimitMax = 1425;
 5397              		.loc 12 216 0
 5398 00fc 8E4D     		ldr	r5, .L318+28
 220:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5399              		.loc 12 220 0
 5400 00fe 0093     		str	r3, [sp]
 5401 0100 8E4A     		ldr	r2, .L318+32
 5402 0102 8B4B     		ldr	r3, .L318+20
 5403 0104 0121     		movs	r1, #1
 5404 0106 36A8     		add	r0, sp, #216
 216:src/main.cpp  ****   SL.m_ServoLimitMax = 1425;
 5405              		.loc 12 216 0
 5406 0108 2395     		str	r5, [sp, #140]
 218:src/main.cpp  **** 
 5407              		.loc 12 218 0
 5408 010a 2196     		str	r6, [sp, #132]
 220:src/main.cpp  ****   SR.m_ServoPin = GPIO_Pin_8;
 5409              		.loc 12 220 0
 5410 010c FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5411              	.LVL607:
 224:src/main.cpp  **** 
 5412              		.loc 12 224 0
 5413 0110 40F22173 		movw	r3, #1825
 5414 0114 3B93     		str	r3, [sp, #236]
 226:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5415              		.loc 12 226 0
 5416 0116 0123     		movs	r3, #1
 221:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5417              		.loc 12 221 0
 5418 0118 4FF48078 		mov	r8, #256
 226:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5419              		.loc 12 226 0
 5420 011c 0093     		str	r3, [sp]
 5421 011e 884A     		ldr	r2, .L318+36
 5422 0120 884B     		ldr	r3, .L318+40
 5423 0122 0221     		movs	r1, #2
 5424 0124 50A8     		add	r0, sp, #320
 221:src/main.cpp  ****   SR.m_ServoPort = GPIOB;
 5425              		.loc 12 221 0
 5426 0126 CDF8F080 		str	r8, [sp, #240]
 222:src/main.cpp  ****   SR.m_ServoLimitMax = 7925;
 5427              		.loc 12 222 0
 5428 012a 3D95     		str	r5, [sp, #244]
 223:src/main.cpp  ****   SR.m_ServoLimitMin = 1825;
 5429              		.loc 12 223 0
 5430 012c 3A96     		str	r6, [sp, #232]
 226:src/main.cpp  ****   FR.setDCPins(GPIO_Pin_13, GPIOC, GPIO_Pin_14, GPIOC,
 5431              		.loc 12 226 0
 5432 012e FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5433              	.LVL608:
 229:src/main.cpp  ****   FR.encoderAddr = (0x10 | 0x08);
 5434              		.loc 12 229 0
 5435 0132 0123     		movs	r3, #1
 5436 0134 0393     		str	r3, [sp, #12]
 5437 0136 4FF40043 		mov	r3, #32768
 5438 013a 834E     		ldr	r6, .L318+44
 5439 013c 834A     		ldr	r2, .L318+48
 5440 013e 0696     		str	r6, [sp, #24]
 5441 0140 8DE80C00 		stm	sp, {r2, r3}
 5442 0144 CDF81480 		str	r8, [sp, #20]
 5443 0148 0496     		str	r6, [sp, #16]
 5444 014a 0292     		str	r2, [sp, #8]
 5445 014c 4FF48043 		mov	r3, #16384
 5446 0150 4FF40051 		mov	r1, #8192
 5447 0154 50A8     		add	r0, sp, #320
 5448 0156 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5449              	.LVL609:
 230:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5450              		.loc 12 230 0
 5451 015a 4FF01803 		mov	r3, #24	@ movhi
 231:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5452              		.loc 12 231 0
 5453 015e DFF80C92 		ldr	r9, .L318+80
 5454 0162 DFF80CA2 		ldr	r10, .L318+84
 232:src/main.cpp  **** 
 5455              		.loc 12 232 0
 5456 0166 DFF80C82 		ldr	r8, .L318+88
 230:src/main.cpp  ****   FR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5457              		.loc 12 230 0
 5458 016a ADF88831 		strh	r3, [sp, #392]	@ movhi
 231:src/main.cpp  ****   FR.wheelRadius = wheelRadius;
 5459              		.loc 12 231 0
 5460 016e 784A     		ldr	r2, .L318+52
 5461 0170 784B     		ldr	r3, .L318+56
 5462 0172 7949     		ldr	r1, .L318+60
 5463 0174 50A8     		add	r0, sp, #320
 5464 0176 CDF80490 		str	r9, [sp, #4]	@ float
 5465 017a CDF800A0 		str	r10, [sp]	@ float
 5466 017e FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5467              	.LVL610:
 234:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5468              		.loc 12 234 0
 5469 0182 764B     		ldr	r3, .L318+64
 5470 0184 764A     		ldr	r2, .L318+68
 5471 0186 0221     		movs	r1, #2
 5472 0188 0097     		str	r7, [sp]
 5473 018a 6AA8     		add	r0, sp, #424
 232:src/main.cpp  **** 
 5474              		.loc 12 232 0
 5475 018c CDF8A481 		str	r8, [sp, #420]	@ float
 234:src/main.cpp  ****   FL.setDCPins(GPIO_Pin_2,GPIOB, GPIO_Pin_5,GPIOA,
 5476              		.loc 12 234 0
 5477 0190 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5478              	.LVL611:
 237:src/main.cpp  ****   FL.encoderAddr = (0x10);
 5479              		.loc 12 237 0
 5480 0194 0223     		movs	r3, #2
 5481 0196 4FF0100B 		mov	fp, #16
 5482 019a 0593     		str	r3, [sp, #20]
 5483 019c 4FF48063 		mov	r3, #1024
 5484 01a0 8DE84008 		stm	sp, {r6, fp}
 5485 01a4 2A46     		mov	r2, r5
 5486 01a6 0695     		str	r5, [sp, #24]
 5487 01a8 0495     		str	r5, [sp, #16]
 5488 01aa 0393     		str	r3, [sp, #12]
 5489 01ac 0296     		str	r6, [sp, #8]
 5490 01ae 2023     		movs	r3, #32
 5491 01b0 3946     		mov	r1, r7
 5492 01b2 6AA8     		add	r0, sp, #424
 5493 01b4 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5494              	.LVL612:
 239:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5495              		.loc 12 239 0
 5496 01b8 664B     		ldr	r3, .L318+56
 5497 01ba 654A     		ldr	r2, .L318+52
 5498 01bc 6649     		ldr	r1, .L318+60
 5499 01be 6AA8     		add	r0, sp, #424
 5500 01c0 CDF80490 		str	r9, [sp, #4]	@ float
 5501 01c4 CDF800A0 		str	r10, [sp]	@ float
 238:src/main.cpp  ****   FL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5502              		.loc 12 238 0
 5503 01c8 ADF8F0B1 		strh	fp, [sp, #496]	@ movhi
 239:src/main.cpp  ****   FL.wheelRadius = wheelRadius;
 5504              		.loc 12 239 0
 5505 01cc FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5506              	.LVL613:
 242:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5507              		.loc 12 242 0
 5508 01d0 4FF08043 		mov	r3, #1073741824
 5509 01d4 634A     		ldr	r2, .L318+72
 5510 01d6 0221     		movs	r1, #2
 5511 01d8 0097     		str	r7, [sp]
 5512 01da 84A8     		add	r0, sp, #528
 240:src/main.cpp  **** 
 5513              		.loc 12 240 0
 5514 01dc CDF80C82 		str	r8, [sp, #524]	@ float
 242:src/main.cpp  ****   RL.setDCPins(GPIO_Pin_11, GPIOB, GPIO_Pin_12, GPIOB,
 5515              		.loc 12 242 0
 5516 01e0 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5517              	.LVL614:
 245:src/main.cpp  ****   RL.encoderAddr = (0x10 | 0x04);
 5518              		.loc 12 245 0
 5519 01e4 4FF48043 		mov	r3, #16384
 5520 01e8 4FF0080B 		mov	fp, #8
 5521 01ec 0393     		str	r3, [sp, #12]
 5522 01ee 4FF40053 		mov	r3, #8192
 5523 01f2 2A46     		mov	r2, r5
 5524 01f4 0696     		str	r6, [sp, #24]
 5525 01f6 0495     		str	r5, [sp, #16]
 5526 01f8 0295     		str	r5, [sp, #8]
 5527 01fa 0193     		str	r3, [sp, #4]
 5528 01fc 0095     		str	r5, [sp]
 5529 01fe 4FF48053 		mov	r3, #4096
 5530 0202 4FF40061 		mov	r1, #2048
 5531 0206 84A8     		add	r0, sp, #528
 5532 0208 CDF814B0 		str	fp, [sp, #20]
 5533 020c FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5534              	.LVL615:
 246:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5535              		.loc 12 246 0
 5536 0210 1423     		movs	r3, #20
 247:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5537              		.loc 12 247 0
 5538 0212 4F4A     		ldr	r2, .L318+52
 246:src/main.cpp  ****   RL.setRegulator(FF,KP,KI,KD,integralSaturation);
 5539              		.loc 12 246 0
 5540 0214 ADF85832 		strh	r3, [sp, #600]	@ movhi
 247:src/main.cpp  ****   RL.wheelRadius = wheelRadius;
 5541              		.loc 12 247 0
 5542 0218 4F49     		ldr	r1, .L318+60
 5543 021a 4E4B     		ldr	r3, .L318+56
 5544 021c 84A8     		add	r0, sp, #528
 5545 021e CDF80490 		str	r9, [sp, #4]	@ float
 5546 0222 CDF800A0 		str	r10, [sp]	@ float
 5547 0226 FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5548              	.LVL616:
 250:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5549              		.loc 12 250 0
 5550 022a 464B     		ldr	r3, .L318+40
 5551 022c 4E4A     		ldr	r2, .L318+76
 5552 022e 0221     		movs	r1, #2
 5553 0230 0097     		str	r7, [sp]
 5554 0232 9EA8     		add	r0, sp, #632
 248:src/main.cpp  **** 
 5555              		.loc 12 248 0
 5556 0234 CDF87482 		str	r8, [sp, #628]	@ float
 250:src/main.cpp  ****   RR.setDCPins(GPIO_Pin_15, GPIOB, GPIO_Pin_12,GPIOA,
 5557              		.loc 12 250 0
 5558 0238 FFF7FEFF 		bl	_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
 5559              	.LVL617:
 253:src/main.cpp  ****   RR.encoderAddr = (0x10 | 0x04 | 0x08);
 5560              		.loc 12 253 0
 5561 023c 4FF40063 		mov	r3, #2048
 5562 0240 0593     		str	r3, [sp, #20]
 5563 0242 4FF40043 		mov	r3, #32768
 5564 0246 2A46     		mov	r2, r5
 5565 0248 0696     		str	r6, [sp, #24]
 5566 024a 0495     		str	r5, [sp, #16]
 5567 024c 0296     		str	r6, [sp, #8]
 5568 024e 0193     		str	r3, [sp, #4]
 5569 0250 0096     		str	r6, [sp]
 5570 0252 4FF48053 		mov	r3, #4096
 5571 0256 4FF40041 		mov	r1, #32768
 5572 025a 9EA8     		add	r0, sp, #632
 5573 025c CDF80CB0 		str	fp, [sp, #12]
 5574 0260 FFF7FEFF 		bl	_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
 5575              	.LVL618:
 254:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5576              		.loc 12 254 0
 5577 0264 1C23     		movs	r3, #28
 255:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5578              		.loc 12 255 0
 5579 0266 3A4A     		ldr	r2, .L318+52
 5580 0268 3B49     		ldr	r1, .L318+60
 254:src/main.cpp  ****   RR.setRegulator(FF,KP,KI,KD,integralSaturation);
 5581              		.loc 12 254 0
 5582 026a ADF8C032 		strh	r3, [sp, #704]	@ movhi
 255:src/main.cpp  ****   RR.wheelRadius = wheelRadius;
 5583              		.loc 12 255 0
 5584 026e 9EA8     		add	r0, sp, #632
 5585 0270 384B     		ldr	r3, .L318+56
 5586 0272 CDF80490 		str	r9, [sp, #4]	@ float
 5587 0276 CDF800A0 		str	r10, [sp]	@ float
 5588 027a FFF7FEFF 		bl	_ZN13motorSettings12setRegulatorEfffff
 5589              	.LVL619:
 259:src/main.cpp  ****   if(!servo_left->motorInit()){
 5590              		.loc 12 259 0
 5591 027e 1CA8     		add	r0, sp, #112
 256:src/main.cpp  **** 
 5592              		.loc 12 256 0
 5593 0280 CDF8DC82 		str	r8, [sp, #732]	@ float
 259:src/main.cpp  ****   if(!servo_left->motorInit()){
 5594              		.loc 12 259 0
 5595 0284 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5596              	.LVL620:
 260:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5597              		.loc 12 260 0
 5598 0288 0368     		ldr	r3, [r0]
 259:src/main.cpp  ****   if(!servo_left->motorInit()){
 5599              		.loc 12 259 0
 5600 028a 6061     		str	r0, [r4, #20]
 260:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_left->motorName());
 5601              		.loc 12 260 0
 5602 028c DB68     		ldr	r3, [r3, #12]
 5603 028e 9847     		blx	r3
 5604              	.LVL621:
 265:src/main.cpp  ****   if(!servo_right->motorInit()){
 5605              		.loc 12 265 0
 5606 0290 36A8     		add	r0, sp, #216
 5607 0292 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5608              	.LVL622:
 266:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5609              		.loc 12 266 0
 5610 0296 0368     		ldr	r3, [r0]
 265:src/main.cpp  ****   if(!servo_right->motorInit()){
 5611              		.loc 12 265 0
 5612 0298 A061     		str	r0, [r4, #24]
 266:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", servo_right->motorName());
 5613              		.loc 12 266 0
 5614 029a DB68     		ldr	r3, [r3, #12]
 5615 029c 9847     		blx	r3
 5616              	.LVL623:
 271:src/main.cpp  ****   if(!front_left->motorInit()){
 5617              		.loc 12 271 0
 5618 029e 6AA8     		add	r0, sp, #424
 5619 02a0 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5620              	.LVL624:
 5621 02a4 1F4D     		ldr	r5, .L318+8
 272:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5622              		.loc 12 272 0
 5623 02a6 0368     		ldr	r3, [r0]
 271:src/main.cpp  ****   if(!front_left->motorInit()){
 5624              		.loc 12 271 0
 5625 02a8 C5F8DC00 		str	r0, [r5, #220]
 272:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_left->motorName());
 5626              		.loc 12 272 0
 5627 02ac DB68     		ldr	r3, [r3, #12]
 5628 02ae 9847     		blx	r3
 5629              	.LVL625:
 277:src/main.cpp  ****   if(!front_right->motorInit()){
 5630              		.loc 12 277 0
 5631 02b0 50A8     		add	r0, sp, #320
 5632 02b2 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5633              	.LVL626:
 278:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5634              		.loc 12 278 0
 5635 02b6 0368     		ldr	r3, [r0]
 277:src/main.cpp  ****   if(!front_right->motorInit()){
 5636              		.loc 12 277 0
 5637 02b8 C5F8E000 		str	r0, [r5, #224]
 278:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", front_right->motorName());
 5638              		.loc 12 278 0
 5639 02bc DB68     		ldr	r3, [r3, #12]
 5640 02be 9847     		blx	r3
 5641              	.LVL627:
 283:src/main.cpp  ****   if(!rear_left->motorInit()){
 5642              		.loc 12 283 0
 5643 02c0 84A8     		add	r0, sp, #528
 5644 02c2 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5645              	.LVL628:
 284:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5646              		.loc 12 284 0
 5647 02c6 0368     		ldr	r3, [r0]
 283:src/main.cpp  ****   if(!rear_left->motorInit()){
 5648              		.loc 12 283 0
 5649 02c8 C5F8E400 		str	r0, [r5, #228]
 284:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_left->motorName());
 5650              		.loc 12 284 0
 5651 02cc DB68     		ldr	r3, [r3, #12]
 5652 02ce 9847     		blx	r3
 5653              	.LVL629:
 289:src/main.cpp  ****   if(!rear_right->motorInit()){
 5654              		.loc 12 289 0
 5655 02d0 9EA8     		add	r0, sp, #632
 5656 02d2 FFF7FEFF 		bl	_ZN5motor11createMotorEP13motorSettings
 5657              	.LVL630:
 290:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5658              		.loc 12 290 0
 5659 02d6 0368     		ldr	r3, [r0]
 289:src/main.cpp  ****   if(!rear_right->motorInit()){
 5660              		.loc 12 289 0
 5661 02d8 C5F8E800 		str	r0, [r5, #232]
 290:src/main.cpp  ****     //sprintf(error, "Unable to initialize motor: %s - [FAIL]\r\n", rear_right->motorName());
 5662              		.loc 12 290 0
 5663 02dc DB68     		ldr	r3, [r3, #12]
 5664 02de 9847     		blx	r3
 5665              	.LVL631:
 295:src/main.cpp  ****   odom_msg.layout.dim_length = 1;
 5666              		.loc 12 295 0
 5667 02e0 0C20     		movs	r0, #12
 5668 02e2 FFF7FEFF 		bl	_Znaj
 5669              	.LVL632:
 296:src/main.cpp  ****   odom_msg.layout.dim = &odomDim;
 5670              		.loc 12 296 0
 5671 02e6 4FF00103 		mov	r3, #1
 5672 02ea 85F8F430 		strb	r3, [r5, #244]
 297:src/main.cpp  ****   odom_msg.layout.dim[0].size = 3;
 5673              		.loc 12 297 0
 5674 02ee 05F58E73 		add	r3, r5, #284
 5675 02f2 C5F80831 		str	r3, [r5, #264]
 298:src/main.cpp  ****   odom_msg.layout.dim[0].stride = 3;
 5676              		.loc 12 298 0
 5677 02f6 0323     		movs	r3, #3
 295:src/main.cpp  ****   odom_msg.layout.dim_length = 1;
 5678              		.loc 12 295 0
 5679 02f8 C5F81801 		str	r0, [r5, #280]
 302:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 5680              		.loc 12 302 0
 5681 02fc 1820     		movs	r0, #24
 298:src/main.cpp  ****   odom_msg.layout.dim[0].stride = 3;
 5682              		.loc 12 298 0
 5683 02fe C5F82431 		str	r3, [r5, #292]
 299:src/main.cpp  ****   odom_msg.data_length = 3;
 5684              		.loc 12 299 0
 5685 0302 C5F82831 		str	r3, [r5, #296]
 300:src/main.cpp  **** 
 5686              		.loc 12 300 0
 5687 0306 85F81031 		strb	r3, [r5, #272]
 302:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 5688              		.loc 12 302 0
 5689 030a FFF7FEFF 		bl	_Znaj
 5690              	.LVL633:
 303:src/main.cpp  ****   debug_msg.layout.dim = &debugDim;
 5691              		.loc 12 303 0
 5692 030e 4FF00103 		mov	r3, #1
 5693 0312 85F83431 		strb	r3, [r5, #308]
 304:src/main.cpp  ****   debug_msg.layout.dim[0].size = 6;
 5694              		.loc 12 304 0
 5695 0316 05F5AE73 		add	r3, r5, #348
 5696 031a 2DE0     		b	.L319
 5697              	.L320:
 5698              		.align	2
 5699              	.L318:
 5700 031c 00023000 		.word	3146240
 5701 0320 00000000 		.word	.LANCHOR1
 5702 0324 F8100000 		.word	.LANCHOR3
 5703 0328 7B142E3E 		.word	1043207291
 5704 032c EC51383D 		.word	1027101164
 5705 0330 00080040 		.word	1073743872
 5706 0334 00000000 		.word	.LC21
 5707 0338 000C0140 		.word	1073810432
 5708 033c 0B000000 		.word	.LC22
 5709 0340 17000000 		.word	.LC23
 5710 0344 002C0140 		.word	1073818624
 5711 0348 00080140 		.word	1073809408
 5712 034c 00100140 		.word	1073811456
 5713 0350 0080BB45 		.word	1169915904
 5714 0354 00007A45 		.word	1165623296
 5715 0358 0000C844 		.word	1153957888
 5716 035c 00040040 		.word	1073742848
 5717 0360 23000000 		.word	.LC24
 5718 0364 2E000000 		.word	.LC25
 5719 0368 38000000 		.word	.LC26
 5720 036c 00002041 		.word	1092616192
 5721 0370 00002042 		.word	1109393408
 5722 0374 0AD7233D 		.word	1025758986
 5723              	.L319:
 5724 0378 C5F84831 		str	r3, [r5, #328]
 305:src/main.cpp  ****   debug_msg.layout.dim[0].stride = 6;
 5725              		.loc 12 305 0
 5726 037c 0623     		movs	r3, #6
 302:src/main.cpp  ****   debug_msg.layout.dim_length = 1;
 5727              		.loc 12 302 0
 5728 037e C5F85801 		str	r0, [r5, #344]
 311:src/main.cpp  ****   servo_right->setReference(135);
 5729              		.loc 12 311 0
 5730 0382 6069     		ldr	r0, [r4, #20]
 307:src/main.cpp  ****   
 5731              		.loc 12 307 0
 5732 0384 85F85031 		strb	r3, [r5, #336]
 305:src/main.cpp  ****   debug_msg.layout.dim[0].stride = 6;
 5733              		.loc 12 305 0
 5734 0388 C5F86431 		str	r3, [r5, #356]
 306:src/main.cpp  ****   debug_msg.data_length = 6;
 5735              		.loc 12 306 0
 5736 038c C5F86831 		str	r3, [r5, #360]
 311:src/main.cpp  ****   servo_right->setReference(135);
 5737              		.loc 12 311 0
 5738 0390 0368     		ldr	r3, [r0]
 5739 0392 9D49     		ldr	r1, .L321+8
 5740 0394 5B69     		ldr	r3, [r3, #20]
 5741 0396 9847     		blx	r3
 5742              	.LVL634:
 312:src/main.cpp  ****   front_right->setReference(0);
 5743              		.loc 12 312 0
 5744 0398 A069     		ldr	r0, [r4, #24]
 5745 039a 9B49     		ldr	r1, .L321+8
 5746 039c 0368     		ldr	r3, [r0]
 5747 039e 9B4C     		ldr	r4, .L321+12
 5748 03a0 5B69     		ldr	r3, [r3, #20]
 5749 03a2 9847     		blx	r3
 5750              	.LVL635:
 313:src/main.cpp  ****   front_left->setReference(0);
 5751              		.loc 12 313 0
 5752 03a4 D5F8E000 		ldr	r0, [r5, #224]
 5753 03a8 0021     		movs	r1, #0
 5754 03aa 0368     		ldr	r3, [r0]
 334:src/main.cpp  ****     while( millis() - start_time < dt);
 5755              		.loc 12 334 0
 5756 03ac 984E     		ldr	r6, .L321+16
 313:src/main.cpp  ****   front_left->setReference(0);
 5757              		.loc 12 313 0
 5758 03ae 5B69     		ldr	r3, [r3, #20]
 5759 03b0 9847     		blx	r3
 5760              	.LVL636:
 314:src/main.cpp  ****   rear_right->setReference(0);
 5761              		.loc 12 314 0
 5762 03b2 D5F8DC00 		ldr	r0, [r5, #220]
 5763 03b6 0021     		movs	r1, #0
 5764 03b8 0368     		ldr	r3, [r0]
 5765 03ba 5B69     		ldr	r3, [r3, #20]
 5766 03bc 9847     		blx	r3
 5767              	.LVL637:
 315:src/main.cpp  ****   rear_left->setReference(0);
 5768              		.loc 12 315 0
 5769 03be D5F8E800 		ldr	r0, [r5, #232]
 5770 03c2 0021     		movs	r1, #0
 5771 03c4 0368     		ldr	r3, [r0]
 5772 03c6 5B69     		ldr	r3, [r3, #20]
 5773 03c8 9847     		blx	r3
 5774              	.LVL638:
 316:src/main.cpp  **** 
 5775              		.loc 12 316 0
 5776 03ca D5F8E400 		ldr	r0, [r5, #228]
 5777 03ce 0021     		movs	r1, #0
 5778 03d0 0368     		ldr	r3, [r0]
 5779 03d2 0025     		movs	r5, #0
 5780 03d4 5B69     		ldr	r3, [r3, #20]
 5781 03d6 9847     		blx	r3
 5782              	.LVL639:
 5783              	.L293:
 330:src/main.cpp  ****     if(cnt < 50)
 5784              		.loc 12 330 0
 5785 03d8 FFF7FEFF 		bl	millis
 5786              	.LVL640:
 331:src/main.cpp  ****       servo_left->update(dt_s, connected, true);
 5787              		.loc 12 331 0
 5788 03dc 312D     		cmp	r5, #49
 330:src/main.cpp  ****     if(cnt < 50)
 5789              		.loc 12 330 0
 5790 03de 0746     		mov	r7, r0
 5791              	.LVL641:
 332:src/main.cpp  ****     else
 5792              		.loc 12 332 0
 5793 03e0 D4BF     		ite	le
 5794 03e2 6069     		ldrle	r0, [r4, #20]
 5795              	.LVL642:
 334:src/main.cpp  ****     while( millis() - start_time < dt);
 5796              		.loc 12 334 0
 5797 03e4 A069     		ldrgt	r0, [r4, #24]
 5798 03e6 0022     		movs	r2, #0
 5799 03e8 0368     		ldr	r3, [r0]
 5800 03ea 3146     		mov	r1, r6
 5801 03ec D3F81C80 		ldr	r8, [r3, #28]
 5802 03f0 0123     		movs	r3, #1
 5803 03f2 C047     		blx	r8
 5804              	.LVL643:
 5805              	.L292:
 335:src/main.cpp  ****     cnt++;
 5806              		.loc 12 335 0
 5807 03f4 FFF7FEFF 		bl	millis
 5808              	.LVL644:
 5809 03f8 C01B     		subs	r0, r0, r7
 5810 03fa 1328     		cmp	r0, #19
 5811 03fc FAD9     		bls	.L292
 336:src/main.cpp  ****   }
 5812              		.loc 12 336 0
 5813 03fe 0135     		adds	r5, r5, #1
 5814              	.LVL645:
 329:src/main.cpp  ****     start_time = millis();
 5815              		.loc 12 329 0
 5816 0400 642D     		cmp	r5, #100
 5817 0402 E9D1     		bne	.L293
 339:src/main.cpp  **** 
 5818              		.loc 12 339 0
 5819 0404 FF20     		movs	r0, #255
 5820 0406 FFF7FEFF 		bl	led_set
 5821              	.LVL646:
 344:src/main.cpp  **** 
 5822              		.loc 12 344 0
 5823 040a E068     		ldr	r0, [r4, #12]	@ float
 5824 040c 4FF07C51 		mov	r1, #1056964608
 5825 0410 FFF7FEFF 		bl	__aeabi_fmul
 5826              	.LVL647:
 5827              	.LBB483:
 5828              	.LBB484:
 150:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 151:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 152:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   atan(long double __x)
 153:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_atanl(__x); }
 154:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 155:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 156:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 157:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 158:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 159:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 160:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     atan(_Tp __x)
 161:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_atan(__x); }
 162:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 163:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::atan2;
 164:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 165:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 166:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 167:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   atan2(float __y, float __x)
 168:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 169:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 170:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 171:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   atan2(long double __y, long double __x)
 172:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 173:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 174:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 175:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp, typename _Up>
 176:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 177:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 178:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 179:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     {
 180:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 181:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 182:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     }
 183:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 184:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::ceil;
 185:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 186:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 187:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 188:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   ceil(float __x)
 189:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_ceilf(__x); }
 190:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 191:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 192:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   ceil(long double __x)
 193:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_ceill(__x); }
 194:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 195:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 196:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 197:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 198:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 199:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 200:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     ceil(_Tp __x)
 201:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_ceil(__x); }
 202:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 203:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::cos;
 204:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 205:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 206:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 207:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   cos(float __x)
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_cosf(__x); }
 209:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 210:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 211:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   cos(long double __x)
 212:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_cosl(__x); }
 213:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 214:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 215:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 216:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 217:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 218:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 219:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     cos(_Tp __x)
 220:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_cos(__x); }
 221:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 222:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::cosh;
 223:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 224:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 225:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 226:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   cosh(float __x)
 227:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_coshf(__x); }
 228:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 229:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 230:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   cosh(long double __x)
 231:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_coshl(__x); }
 232:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 233:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 234:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 235:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 236:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 237:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 238:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     cosh(_Tp __x)
 239:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_cosh(__x); }
 240:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 241:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::exp;
 242:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 243:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 244:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 245:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   exp(float __x)
 246:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_expf(__x); }
 247:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 248:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 249:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   exp(long double __x)
 250:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_expl(__x); }
 251:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 252:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 253:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 254:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 255:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 256:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 257:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     exp(_Tp __x)
 258:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_exp(__x); }
 259:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 260:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::fabs;
 261:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 262:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 263:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 264:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   fabs(float __x)
 265:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fabsf(__x); }
 266:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 267:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 268:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   fabs(long double __x)
 269:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fabsl(__x); }
 270:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 271:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 272:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 273:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 274:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 275:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 276:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     fabs(_Tp __x)
 277:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_fabs(__x); }
 278:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 279:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::floor;
 280:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 281:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 282:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 283:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   floor(float __x)
 284:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_floorf(__x); }
 285:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 286:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 287:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   floor(long double __x)
 288:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_floorl(__x); }
 289:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 290:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 291:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 292:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 293:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 294:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 295:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     floor(_Tp __x)
 296:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_floor(__x); }
 297:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 298:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::fmod;
 299:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 300:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 301:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 302:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   fmod(float __x, float __y)
 303:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 304:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 305:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 306:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   fmod(long double __x, long double __y)
 307:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 308:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 309:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 310:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp, typename _Up>
 311:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 312:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 313:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 314:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     {
 315:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 316:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 317:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     }
 318:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 319:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::frexp;
 320:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 321:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 322:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline float
 323:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   frexp(float __x, int* __exp)
 324:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 325:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 326:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline long double
 327:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   frexp(long double __x, int* __exp)
 328:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 329:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 330:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 331:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 332:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 333:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 334:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 335:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 336:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 337:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 338:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::ldexp;
 339:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 340:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 341:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 342:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   ldexp(float __x, int __exp)
 343:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 344:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 345:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 346:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   ldexp(long double __x, int __exp)
 347:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 348:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 349:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 350:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 351:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 352:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 353:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 354:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 355:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 356:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 357:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::log;
 358:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 359:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 360:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 361:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   log(float __x)
 362:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_logf(__x); }
 363:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 364:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 365:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   log(long double __x)
 366:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_logl(__x); }
 367:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 368:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 369:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 370:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 371:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 372:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 373:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     log(_Tp __x)
 374:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_log(__x); }
 375:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 376:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::log10;
 377:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 378:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 379:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 380:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   log10(float __x)
 381:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_log10f(__x); }
 382:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 383:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 384:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   log10(long double __x)
 385:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_log10l(__x); }
 386:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 387:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 388:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 389:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 390:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 391:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 392:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     log10(_Tp __x)
 393:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_log10(__x); }
 394:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 395:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::modf;
 396:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 397:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 398:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline float
 399:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   modf(float __x, float* __iptr)
 400:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 401:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 402:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline long double
 403:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   modf(long double __x, long double* __iptr)
 404:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 405:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 406:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 407:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::pow;
 408:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 409:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 410:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 411:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   pow(float __x, float __y)
 412:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 413:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 414:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 415:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   pow(long double __x, long double __y)
 416:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 417:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 418:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #if __cplusplus < 201103L
 419:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 420:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 421:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline double
 422:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   pow(double __x, int __i)
 423:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 424:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 425:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline float
 426:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   pow(float __x, int __n)
 427:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 428:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 429:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline long double
 430:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   pow(long double __x, int __n)
 431:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 432:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 433:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 434:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 435:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp, typename _Up>
 436:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 437:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 438:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     pow(_Tp __x, _Up __y)
 439:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     {
 440:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 441:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****       return pow(__type(__x), __type(__y));
 5829              		.loc 13 441 0
 5830 0414 FFF7FEFF 		bl	__aeabi_f2d
 5831              	.LVL648:
 5832 0418 0246     		mov	r2, r0
 5833 041a 0B46     		mov	r3, r1
 5834 041c FFF7FEFF 		bl	__aeabi_dmul
 5835              	.LVL649:
 5836              	.LBE484:
 5837              	.LBE483:
 344:src/main.cpp  **** 
 5838              		.loc 12 344 0
 5839 0420 0246     		mov	r2, r0
 5840 0422 0B46     		mov	r3, r1
 5841 0424 FFF7FEFF 		bl	__aeabi_dadd
 5842              	.LVL650:
 5843 0428 FFF7FEFF 		bl	sqrt
 5844              	.LVL651:
 5845 042c FFF7FEFF 		bl	__aeabi_d2f
 5846              	.LVL652:
 347:src/main.cpp  ****   uint32_t elapsed;
 5847              		.loc 12 347 0
 5848 0430 784B     		ldr	r3, .L321+20
 5849 0432 10AD     		add	r5, sp, #64
 344:src/main.cpp  **** 
 5850              		.loc 12 344 0
 5851 0434 0C90     		str	r0, [sp, #48]	@ float
 5852              	.LVL653:
 347:src/main.cpp  ****   uint32_t elapsed;
 5853              		.loc 12 347 0
 5854 0436 0FCB     		ldm	r3, {r0, r1, r2, r3}
 5855              	.LVL654:
 5856 0438 85E80F00 		stm	r5, {r0, r1, r2, r3}
 349:src/main.cpp  **** 
 5857              		.loc 12 349 0
 5858 043c 0123     		movs	r3, #1
 5859 043e 2370     		strb	r3, [r4]
 341:src/main.cpp  **** 
 5860              		.loc 12 341 0
 5861 0440 0024     		movs	r4, #0
 5862              	.LBB485:
 5863              	.LBB486:
 5864              	.LBB487:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 5865              		.loc 10 286 0
 5866 0442 724D     		ldr	r5, .L321+12
 5867              	.LVL655:
 5868              	.L302:
 5869              	.LBE487:
 5870              	.LBE486:
 353:src/main.cpp  **** 
 5871              		.loc 12 353 0
 5872 0444 FFF7FEFF 		bl	millis
 5873              	.LVL656:
 359:src/main.cpp  ****       debug_toggle();
 5874              		.loc 12 359 0
 5875 0448 3222     		movs	r2, #50
 5876 044a 631C     		adds	r3, r4, #1
 5877 044c 0E93     		str	r3, [sp, #56]
 5878 044e 94FBF2F3 		sdiv	r3, r4, r2
 5879 0452 02FB1344 		mls	r4, r2, r3, r4
 5880              	.LVL657:
 353:src/main.cpp  **** 
 5881              		.loc 12 353 0
 5882 0456 0990     		str	r0, [sp, #36]
 5883              	.LVL658:
 359:src/main.cpp  ****       debug_toggle();
 5884              		.loc 12 359 0
 5885 0458 0CB9     		cbnz	r4, .L294
 360:src/main.cpp  ****     connected = nh.connected();
 5886              		.loc 12 360 0
 5887 045a FFF7FEFF 		bl	debug_toggle
 5888              	.LVL659:
 5889              	.L294:
 5890              	.LBB490:
 5891              	.LBB488:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 5892              		.loc 10 286 0
 5893 045e 6E4B     		ldr	r3, .L321+24
 5894              	.LBE488:
 5895              	.LBE490:
 364:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 5896              		.loc 12 364 0
 5897 0460 6869     		ldr	r0, [r5, #20]
 5898              	.LBB491:
 5899              	.LBB489:
 286:./lib/ros_lib/ros/node_handle.h ****       };
 5900              		.loc 10 286 0
 5901 0462 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 5902              	.LVL660:
 5903              	.LBE489:
 5904              	.LBE491:
 364:src/main.cpp  ****     float sr = servo_right->update(dt_s, connected, true);
 5905              		.loc 12 364 0
 5906 0464 0368     		ldr	r3, [r0]
 5907 0466 3246     		mov	r2, r6
 5908 0468 DC69     		ldr	r4, [r3, #28]
 5909 046a 6949     		ldr	r1, .L321+16
 5910 046c 0123     		movs	r3, #1
 5911 046e A047     		blx	r4
 5912              	.LVL661:
 5913 0470 8346     		mov	fp, r0
 5914              	.LVL662:
 365:src/main.cpp  **** 
 5915              		.loc 12 365 0
 5916 0472 A869     		ldr	r0, [r5, #24]
 5917              	.LVL663:
 5918 0474 3246     		mov	r2, r6
 5919 0476 0368     		ldr	r3, [r0]
 5920 0478 6549     		ldr	r1, .L321+16
 5921 047a DC69     		ldr	r4, [r3, #28]
 5922 047c 0123     		movs	r3, #1
 5923 047e A047     		blx	r4
 5924              	.LVL664:
 367:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 5925              		.loc 12 367 0
 5926 0480 664C     		ldr	r4, .L321+28
 365:src/main.cpp  **** 
 5927              		.loc 12 365 0
 5928 0482 8146     		mov	r9, r0
 5929              	.LVL665:
 367:src/main.cpp  ****     debug_msg.data[1] = (float)sr;
 5930              		.loc 12 367 0
 5931 0484 D4F85831 		ldr	r3, [r4, #344]
 5932 0488 C3F800B0 		str	fp, [r3]	@ float
 368:src/main.cpp  **** 
 5933              		.loc 12 368 0
 5934 048c 5860     		str	r0, [r3, #4]	@ float
 5935              	.LVL666:
 372:src/main.cpp  ****       waitForServos = false;
 5936              		.loc 12 372 0
 5937 048e 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 5938 0490 002B     		cmp	r3, #0
 5939 0492 40F07E81 		bne	.L295
 5940              	.LVL667:
 5941              	.L298:
 5942 0496 6B68     		ldr	r3, [r5, #4]
 5943 0498 099A     		ldr	r2, [sp, #36]
 5944 049a 03F5FA73 		add	r3, r3, #500
 5945 049e 9A42     		cmp	r2, r3
 5946 04a0 C0F09581 		bcc	.L296
 5947              	.LVL668:
 381:src/main.cpp  ****       front_left->setReference(0);
 5948              		.loc 12 381 0
 5949 04a4 D4F8E000 		ldr	r0, [r4, #224]
 5950 04a8 0021     		movs	r1, #0
 5951 04aa 0368     		ldr	r3, [r0]
 380:src/main.cpp  ****       front_right->setReference(0);
 5952              		.loc 12 380 0
 5953 04ac 0027     		movs	r7, #0
 381:src/main.cpp  ****       front_left->setReference(0);
 5954              		.loc 12 381 0
 5955 04ae 5B69     		ldr	r3, [r3, #20]
 5956 04b0 9847     		blx	r3
 5957              	.LVL669:
 382:src/main.cpp  ****       rear_left->setReference(0);
 5958              		.loc 12 382 0
 5959 04b2 D4F8DC00 		ldr	r0, [r4, #220]
 5960 04b6 0021     		movs	r1, #0
 5961 04b8 0368     		ldr	r3, [r0]
 5962 04ba 5B69     		ldr	r3, [r3, #20]
 5963 04bc 9847     		blx	r3
 5964              	.LVL670:
 383:src/main.cpp  ****       rear_right->setReference(0);
 5965              		.loc 12 383 0
 5966 04be D4F8E400 		ldr	r0, [r4, #228]
 5967 04c2 0021     		movs	r1, #0
 5968 04c4 0368     		ldr	r3, [r0]
 5969 04c6 5B69     		ldr	r3, [r3, #20]
 5970 04c8 9847     		blx	r3
 5971              	.LVL671:
 384:src/main.cpp  ****     }
 5972              		.loc 12 384 0
 5973 04ca D4F8E800 		ldr	r0, [r4, #232]
 5974 04ce 0021     		movs	r1, #0
 5975 04d0 0368     		ldr	r3, [r0]
 5976 04d2 5B69     		ldr	r3, [r3, #20]
 5977 04d4 9847     		blx	r3
 5978              	.LVL672:
 5979              	.L304:
 387:src/main.cpp  ****     //udelay(500);
 5980              		.loc 12 387 0
 5981 04d6 D4F8E000 		ldr	r0, [r4, #224]
 5982 04da 3246     		mov	r2, r6
 5983 04dc 0368     		ldr	r3, [r0]
 5984 04de 4C49     		ldr	r1, .L321+16
 5985 04e0 D3F81C80 		ldr	r8, [r3, #28]
 5986 04e4 3B46     		mov	r3, r7
 5987 04e6 C047     		blx	r8
 5988              	.LVL673:
 5989 04e8 8246     		mov	r10, r0
 5990              	.LVL674:
 389:src/main.cpp  ****     //udelay(500);
 5991              		.loc 12 389 0
 5992 04ea D4F8DC00 		ldr	r0, [r4, #220]
 5993              	.LVL675:
 5994 04ee 3246     		mov	r2, r6
 5995 04f0 0368     		ldr	r3, [r0]
 5996 04f2 4749     		ldr	r1, .L321+16
 5997 04f4 D3F81C80 		ldr	r8, [r3, #28]
 5998 04f8 3B46     		mov	r3, r7
 5999 04fa C047     		blx	r8
 6000              	.LVL676:
 6001 04fc 0A90     		str	r0, [sp, #40]	@ float
 6002              	.LVL677:
 391:src/main.cpp  ****     //udelay(500);
 6003              		.loc 12 391 0
 6004 04fe D4F8E400 		ldr	r0, [r4, #228]
 6005              	.LVL678:
 6006 0502 3246     		mov	r2, r6
 6007 0504 0368     		ldr	r3, [r0]
 6008 0506 4249     		ldr	r1, .L321+16
 6009 0508 D3F81C80 		ldr	r8, [r3, #28]
 6010 050c 3B46     		mov	r3, r7
 6011 050e C047     		blx	r8
 6012              	.LVL679:
 6013 0510 8046     		mov	r8, r0
 6014              	.LVL680:
 393:src/main.cpp  ****     //udelay(1000);
 6015              		.loc 12 393 0
 6016 0512 D4F8E800 		ldr	r0, [r4, #232]
 6017              	.LVL681:
 6018 0516 3246     		mov	r2, r6
 6019 0518 0368     		ldr	r3, [r0]
 6020 051a 3D49     		ldr	r1, .L321+16
 6021 051c DB69     		ldr	r3, [r3, #28]
 6022 051e 9E46     		mov	lr, r3
 6023 0520 3B46     		mov	r3, r7
 6024 0522 7646     		mov	r6, lr
 6025 0524 B047     		blx	r6
 6026              	.LVL682:
 398:src/main.cpp  ****     debug_msg.data[3] = fl;
 6027              		.loc 12 398 0
 6028 0526 D4F85831 		ldr	r3, [r4, #344]
 399:src/main.cpp  ****     debug_msg.data[4] = rl;
 6029              		.loc 12 399 0
 6030 052a 0A9A     		ldr	r2, [sp, #40]	@ float
 400:src/main.cpp  ****     debug_msg.data[5] = rr;
 6031              		.loc 12 400 0
 6032 052c C3F81080 		str	r8, [r3, #16]	@ float
 401:src/main.cpp  **** 
 6033              		.loc 12 401 0
 6034 0530 5861     		str	r0, [r3, #20]	@ float
 398:src/main.cpp  ****     debug_msg.data[3] = fl;
 6035              		.loc 12 398 0
 6036 0532 C3F808A0 		str	r10, [r3, #8]	@ float
 399:src/main.cpp  ****     debug_msg.data[4] = rl;
 6037              		.loc 12 399 0
 6038 0536 DA60     		str	r2, [r3, #12]	@ float
 403:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 6039              		.loc 12 403 0
 6040 0538 1790     		str	r0, [sp, #92]	@ float
 404:src/main.cpp  **** 
 6041              		.loc 12 404 0
 6042 053a 3949     		ldr	r1, .L321+32
 6043 053c 4846     		mov	r0, r9
 6044              	.LVL683:
 403:src/main.cpp  ****     float angles[4] = {sr-90, -sl+90, sl+90, -sr-90};
 6045              		.loc 12 403 0
 6046 053e 1592     		str	r2, [sp, #84]	@ float
 6047 0540 CDF85880 		str	r8, [sp, #88]	@ float
 6048 0544 CDF850A0 		str	r10, [sp, #80]	@ float
 404:src/main.cpp  **** 
 6049              		.loc 12 404 0
 6050 0548 FFF7FEFF 		bl	__aeabi_fsub
 6051              	.LVL684:
 6052 054c 5946     		mov	r1, fp
 6053 054e 1890     		str	r0, [sp, #96]	@ float
 6054 0550 3348     		ldr	r0, .L321+32
 6055 0552 FFF7FEFF 		bl	__aeabi_fsub
 6056              	.LVL685:
 6057 0556 3249     		ldr	r1, .L321+32
 6058 0558 1990     		str	r0, [sp, #100]	@ float
 6059 055a 5846     		mov	r0, fp
 6060 055c FFF7FEFF 		bl	__aeabi_fadd
 6061              	.LVL686:
 6062 0560 2F49     		ldr	r1, .L321+32
 6063 0562 1A90     		str	r0, [sp, #104]	@ float
 6064 0564 09F10040 		add	r0, r9, #-2147483648
 6065 0568 FFF7FEFF 		bl	__aeabi_fsub
 6066              	.LVL687:
 409:src/main.cpp  ****     for(i = 0; i < 4; i++){
 6067              		.loc 12 409 0
 6068 056c 0023     		movs	r3, #0
 6069              	.LBB492:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6070              		.loc 12 410 0
 6071 056e 0024     		movs	r4, #0
 6072              	.LBE492:
 407:src/main.cpp  ****     float y_dot = 0;
 6073              		.loc 12 407 0
 6074 0570 9846     		mov	r8, r3
 6075              	.LVL688:
 404:src/main.cpp  **** 
 6076              		.loc 12 404 0
 6077 0572 1B90     		str	r0, [sp, #108]	@ float
 6078              	.LVL689:
 409:src/main.cpp  ****     for(i = 0; i < 4; i++){
 6079              		.loc 12 409 0
 6080 0574 0B93     		str	r3, [sp, #44]	@ float
 408:src/main.cpp  ****     float theta_dot = 0;
 6081              		.loc 12 408 0
 6082 0576 0A93     		str	r3, [sp, #40]	@ float
 6083              	.LVL690:
 6084              	.L300:
 6085              	.LBB525:
 6086              	.LBB493:
 411:src/main.cpp  ****       
 6087              		.loc 12 411 0
 6088 0578 18AE     		add	r6, sp, #96
 6089 057a 56F82400 		ldr	r0, [r6, r4, lsl #2]	@ float
 6090 057e FFF7FEFF 		bl	__aeabi_f2d
 6091              	.LVL691:
 6092 0582 1FA3     		adr	r3, .L321
 6093 0584 D3E90023 		ldrd	r2, [r3]
 6094 0588 FFF7FEFF 		bl	__aeabi_dmul
 6095              	.LVL692:
 6096 058c 0022     		movs	r2, #0
 6097 058e 254B     		ldr	r3, .L321+36
 6098 0590 FFF7FEFF 		bl	__aeabi_ddiv
 6099              	.LVL693:
 6100 0594 FFF7FEFF 		bl	__aeabi_d2f
 6101              	.LVL694:
 413:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 6102              		.loc 12 413 0
 6103 0598 10AB     		add	r3, sp, #64
 6104 059a 53F824A0 		ldr	r10, [r3, r4, lsl #2]	@ float
 411:src/main.cpp  ****       
 6105              		.loc 12 411 0
 6106 059e 46F82400 		str	r0, [r6, r4, lsl #2]	@ float
 413:src/main.cpp  ****       x_dot += cos(wheelAngle)*speeds[i];
 6107              		.loc 12 413 0
 6108 05a2 5146     		mov	r1, r10
 6109 05a4 FFF7FEFF 		bl	__aeabi_fadd
 6110              	.LVL695:
 6111 05a8 0746     		mov	r7, r0
 6112              	.LVL696:
 6113              	.LBB494:
 6114              	.LBB495:
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6115              		.loc 13 208 0
 6116 05aa FFF7FEFF 		bl	cosf
 6117              	.LVL697:
 6118              	.LBE495:
 6119              	.LBE494:
 414:src/main.cpp  ****       y_dot -= sin(wheelAngle)*speeds[i];
 6120              		.loc 12 414 0
 6121 05ae 14AB     		add	r3, sp, #80
 6122 05b0 53F82490 		ldr	r9, [r3, r4, lsl #2]	@ float
 6123 05b4 0146     		mov	r1, r0
 6124 05b6 4846     		mov	r0, r9
 6125 05b8 FFF7FEFF 		bl	__aeabi_fmul
 6126              	.LVL698:
 6127 05bc 0146     		mov	r1, r0
 6128 05be 4046     		mov	r0, r8
 6129 05c0 FFF7FEFF 		bl	__aeabi_fadd
 6130              	.LVL699:
 6131 05c4 8046     		mov	r8, r0
 6132              	.LVL700:
 6133              	.LBB496:
 6134              	.LBB497:
 442:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     }
 443:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 444:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::sin;
 445:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 446:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 447:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 448:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   sin(float __x)
 449:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_sinf(__x); }
 6135              		.loc 13 449 0
 6136 05c6 3846     		mov	r0, r7
 6137              	.LVL701:
 6138 05c8 FFF7FEFF 		bl	sinf
 6139              	.LVL702:
 6140              	.LBE497:
 6141              	.LBE496:
 415:src/main.cpp  ****       
 6142              		.loc 12 415 0
 6143 05cc 0146     		mov	r1, r0
 6144 05ce 4846     		mov	r0, r9
 6145 05d0 FFF7FEFF 		bl	__aeabi_fmul
 6146              	.LVL703:
 6147 05d4 0146     		mov	r1, r0
 6148 05d6 0A98     		ldr	r0, [sp, #40]	@ float
 6149 05d8 FFF7FEFF 		bl	__aeabi_fsub
 6150              	.LVL704:
 418:src/main.cpp  ****         motorAngle += M_PI;
 6151              		.loc 12 418 0
 6152 05dc A31E     		subs	r3, r4, #2
 6153 05de 012B     		cmp	r3, #1
 415:src/main.cpp  ****       
 6154              		.loc 12 415 0
 6155 05e0 0A90     		str	r0, [sp, #40]	@ float
 6156              	.LVL705:
 418:src/main.cpp  ****         motorAngle += M_PI;
 6157              		.loc 12 418 0
 6158 05e2 00F21381 		bhi	.L305
 419:src/main.cpp  ****       }
 6159              		.loc 12 419 0
 6160 05e6 3846     		mov	r0, r7
 6161              	.LVL706:
 6162 05e8 FFF7FEFF 		bl	__aeabi_f2d
 6163              	.LVL707:
 6164 05ec 04A3     		adr	r3, .L321
 6165 05ee D3E90023 		ldrd	r2, [r3]
 6166 05f2 FFF7FEFF 		bl	__aeabi_dadd
 6167              	.LVL708:
 6168 05f6 FFF7FEFF 		bl	__aeabi_d2f
 6169              	.LVL709:
 6170 05fa 8346     		mov	fp, r0
 6171 05fc 14E0     		b	.L322
 6172              	.L323:
 6173 05fe 00BF     		.align	3
 6174              	.L321:
 6175 0600 182D4454 		.word	1413754136
 6176 0604 FB210940 		.word	1074340347
 6177 0608 00000743 		.word	1124532224
 6178 060c 00000000 		.word	.LANCHOR1
 6179 0610 0BD7A33C 		.word	1017370379
 6180 0614 1C000000 		.word	.LANCHOR0+28
 6181 0618 30110000 		.word	.LANCHOR1+4400
 6182 061c F8100000 		.word	.LANCHOR3
 6183 0620 0000B442 		.word	1119092736
 6184 0624 00806640 		.word	1080459264
 6185              	.L322:
 6186              	.LVL710:
 6187              	.L299:
 6188              	.LBB498:
 6189              	.LBB499:
 6190              		.loc 13 449 0 discriminator 2
 6191 0628 5046     		mov	r0, r10
 6192 062a FFF7FEFF 		bl	sinf
 6193              	.LVL711:
 6194 062e 0646     		mov	r6, r0
 6195              	.LVL712:
 6196              	.LBE499:
 6197              	.LBE498:
 6198              	.LBB500:
 6199              	.LBB501:
 6200 0630 5846     		mov	r0, fp
 6201 0632 FFF7FEFF 		bl	sinf
 6202              	.LVL713:
 6203              	.LBE501:
 6204              	.LBE500:
 421:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 6205              		.loc 12 421 0 discriminator 2
 6206 0636 2B69     		ldr	r3, [r5, #16]	@ float
 6207 0638 3146     		mov	r1, r6
 6208              	.LBB503:
 6209              	.LBB502:
 6210              		.loc 13 449 0 discriminator 2
 6211 063a 0F90     		str	r0, [sp, #60]
 6212              	.LVL714:
 6213              	.LBE502:
 6214              	.LBE503:
 421:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 6215              		.loc 12 421 0 discriminator 2
 6216 063c 0C98     		ldr	r0, [sp, #48]	@ float
 6217 063e 0D93     		str	r3, [sp, #52]	@ float
 6218 0640 FFF7FEFF 		bl	__aeabi_fmul
 6219              	.LVL715:
 6220 0644 0F9A     		ldr	r2, [sp, #60]
 6221 0646 0646     		mov	r6, r0
 6222 0648 0D99     		ldr	r1, [sp, #52]	@ float
 6223 064a 1046     		mov	r0, r2
 6224 064c FFF7FEFF 		bl	__aeabi_fmul
 6225              	.LVL716:
 6226 0650 0146     		mov	r1, r0
 6227 0652 3046     		mov	r0, r6
 6228 0654 FFF7FEFF 		bl	__aeabi_fadd
 6229              	.LVL717:
 6230 0658 0646     		mov	r6, r0
 6231              	.LVL718:
 6232              	.LBB504:
 6233              	.LBB505:
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6234              		.loc 13 208 0 discriminator 2
 6235 065a 5046     		mov	r0, r10
 6236              	.LVL719:
 6237 065c FFF7FEFF 		bl	cosf
 6238              	.LVL720:
 6239 0660 8246     		mov	r10, r0
 6240              	.LVL721:
 6241              	.LBE505:
 6242              	.LBE504:
 6243              	.LBB506:
 6244              	.LBB507:
 6245 0662 5846     		mov	r0, fp
 6246 0664 FFF7FEFF 		bl	cosf
 6247              	.LVL722:
 6248              	.LBE507:
 6249              	.LBE506:
 422:src/main.cpp  **** 
 6250              		.loc 12 422 0 discriminator 2
 6251 0668 5146     		mov	r1, r10
 6252              	.LBB509:
 6253              	.LBB508:
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6254              		.loc 13 208 0 discriminator 2
 6255 066a 0F90     		str	r0, [sp, #60]
 6256              	.LVL723:
 6257              	.LBE508:
 6258              	.LBE509:
 422:src/main.cpp  **** 
 6259              		.loc 12 422 0 discriminator 2
 6260 066c 0C98     		ldr	r0, [sp, #48]	@ float
 6261 066e FFF7FEFF 		bl	__aeabi_fmul
 6262              	.LVL724:
 6263 0672 0F9B     		ldr	r3, [sp, #60]
 6264 0674 8246     		mov	r10, r0
 6265 0676 0D99     		ldr	r1, [sp, #52]	@ float
 6266 0678 1846     		mov	r0, r3
 6267 067a FFF7FEFF 		bl	__aeabi_fmul
 6268              	.LVL725:
 6269 067e 0146     		mov	r1, r0
 6270 0680 5046     		mov	r0, r10
 6271 0682 FFF7FEFF 		bl	__aeabi_fadd
 6272              	.LVL726:
 424:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 6273              		.loc 12 424 0 discriminator 2
 6274 0686 3146     		mov	r1, r6
 422:src/main.cpp  **** 
 6275              		.loc 12 422 0 discriminator 2
 6276 0688 8346     		mov	fp, r0
 6277              	.LVL727:
 424:src/main.cpp  ****       float deltaXNorm = deltaX/deltaNorm;
 6278              		.loc 12 424 0 discriminator 2
 6279 068a 3046     		mov	r0, r6
 6280              	.LVL728:
 6281 068c FFF7FEFF 		bl	__aeabi_fmul
 6282              	.LVL729:
 6283 0690 5946     		mov	r1, fp
 6284 0692 8246     		mov	r10, r0
 6285 0694 5846     		mov	r0, fp
 6286 0696 FFF7FEFF 		bl	__aeabi_fmul
 6287              	.LVL730:
 6288 069a 0146     		mov	r1, r0
 6289 069c 5046     		mov	r0, r10
 6290 069e FFF7FEFF 		bl	__aeabi_fadd
 6291              	.LVL731:
 6292              	.LBB510:
 6293              	.LBB511:
 450:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 451:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 452:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   sin(long double __x)
 453:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_sinl(__x); }
 454:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 455:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 456:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 457:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 458:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 459:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 460:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     sin(_Tp __x)
 461:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_sin(__x); }
 462:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 463:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::sinh;
 464:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 465:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 466:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 467:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   sinh(float __x)
 468:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_sinhf(__x); }
 469:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 470:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 471:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   sinh(long double __x)
 472:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_sinhl(__x); }
 473:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #endif
 474:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 475:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   template<typename _Tp>
 476:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 477:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 478:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****                                     double>::__type
 479:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     sinh(_Tp __x)
 480:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****     { return __builtin_sinh(__x); }
 481:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 482:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   using ::sqrt;
 483:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 484:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 485:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 486:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   sqrt(float __x)
 487:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 6294              		.loc 13 487 0 discriminator 2
 6295 06a2 FFF7FEFF 		bl	sqrtf
 6296              	.LVL732:
 6297 06a6 8246     		mov	r10, r0
 6298              	.LVL733:
 6299              	.LBE511:
 6300              	.LBE510:
 428:src/main.cpp  ****       float wX = cos(wAngle);
 6301              		.loc 12 428 0 discriminator 2
 6302 06a8 3846     		mov	r0, r7
 6303              	.LVL734:
 6304 06aa FFF7FEFF 		bl	__aeabi_f2d
 6305              	.LVL735:
 6306 06ae 5CA3     		adr	r3, .L324
 6307 06b0 D3E90023 		ldrd	r2, [r3]
 6308 06b4 FFF7FEFF 		bl	__aeabi_dadd
 6309              	.LVL736:
 6310 06b8 FFF7FEFF 		bl	__aeabi_d2f
 6311              	.LVL737:
 6312 06bc 0D90     		str	r0, [sp, #52]
 6313              	.LVL738:
 6314              	.LBB512:
 6315              	.LBB513:
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6316              		.loc 13 208 0 discriminator 2
 6317 06be FFF7FEFF 		bl	cosf
 6318              	.LVL739:
 6319              	.LBE513:
 6320              	.LBE512:
 6321              	.LBB515:
 6322              	.LBB516:
 449:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6323              		.loc 13 449 0 discriminator 2
 6324 06c2 0D9B     		ldr	r3, [sp, #52]
 6325              	.LBE516:
 6326              	.LBE515:
 6327              	.LBB519:
 6328              	.LBB514:
 208:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6329              		.loc 13 208 0 discriminator 2
 6330 06c4 0746     		mov	r7, r0
 6331              	.LVL740:
 6332              	.LBE514:
 6333              	.LBE519:
 6334              	.LBB520:
 6335              	.LBB517:
 449:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6336              		.loc 13 449 0 discriminator 2
 6337 06c6 1846     		mov	r0, r3
 6338 06c8 FFF7FEFF 		bl	sinf
 6339              	.LVL741:
 6340              	.LBE517:
 6341              	.LBE520:
 425:src/main.cpp  ****       float deltaYNorm = deltaY/deltaNorm;
 6342              		.loc 12 425 0 discriminator 2
 6343 06cc 5146     		mov	r1, r10
 6344              	.LBB521:
 6345              	.LBB518:
 449:/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cmath **** 
 6346              		.loc 13 449 0 discriminator 2
 6347 06ce 0D90     		str	r0, [sp, #52]
 6348              	.LVL742:
 6349              	.LBE518:
 6350              	.LBE521:
 421:src/main.cpp  ****       float deltaY = l*cos(alpha[i]) + d*cos(motorAngle);
 6351              		.loc 12 421 0 discriminator 2
 6352 06d0 06F10040 		add	r0, r6, #-2147483648
 425:src/main.cpp  ****       float deltaYNorm = deltaY/deltaNorm;
 6353              		.loc 12 425 0 discriminator 2
 6354 06d4 FFF7FEFF 		bl	__aeabi_fdiv
 6355              	.LVL743:
 432:src/main.cpp  ****     }
 6356              		.loc 12 432 0 discriminator 2
 6357 06d8 3946     		mov	r1, r7
 6358 06da FFF7FEFF 		bl	__aeabi_fmul
 6359              	.LVL744:
 426:src/main.cpp  **** 
 6360              		.loc 12 426 0 discriminator 2
 6361 06de 5146     		mov	r1, r10
 432:src/main.cpp  ****     }
 6362              		.loc 12 432 0 discriminator 2
 6363 06e0 0646     		mov	r6, r0
 6364              	.LVL745:
 426:src/main.cpp  **** 
 6365              		.loc 12 426 0 discriminator 2
 6366 06e2 5846     		mov	r0, fp
 6367 06e4 FFF7FEFF 		bl	__aeabi_fdiv
 6368              	.LVL746:
 432:src/main.cpp  ****     }
 6369              		.loc 12 432 0 discriminator 2
 6370 06e8 0D9B     		ldr	r3, [sp, #52]
 6371              	.LBE493:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6372              		.loc 12 410 0 discriminator 2
 6373 06ea 0134     		adds	r4, r4, #1
 6374              	.LVL747:
 6375              	.LBB522:
 432:src/main.cpp  ****     }
 6376              		.loc 12 432 0 discriminator 2
 6377 06ec 1946     		mov	r1, r3
 6378 06ee FFF7FEFF 		bl	__aeabi_fmul
 6379              	.LVL748:
 6380 06f2 0146     		mov	r1, r0
 6381 06f4 3046     		mov	r0, r6
 6382 06f6 FFF7FEFF 		bl	__aeabi_fadd
 6383              	.LVL749:
 6384 06fa 3946     		mov	r1, r7
 6385 06fc FFF7FEFF 		bl	__aeabi_fmul
 6386              	.LVL750:
 6387 0700 5146     		mov	r1, r10
 6388 0702 FFF7FEFF 		bl	__aeabi_fdiv
 6389              	.LVL751:
 6390 0706 4946     		mov	r1, r9
 6391 0708 FFF7FEFF 		bl	__aeabi_fmul
 6392              	.LVL752:
 6393 070c 0146     		mov	r1, r0
 6394 070e 0B98     		ldr	r0, [sp, #44]	@ float
 6395 0710 FFF7FEFF 		bl	__aeabi_fadd
 6396              	.LVL753:
 6397              	.LBE522:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6398              		.loc 12 410 0 discriminator 2
 6399 0714 042C     		cmp	r4, #4
 6400              	.LBB523:
 432:src/main.cpp  ****     }
 6401              		.loc 12 432 0 discriminator 2
 6402 0716 0B90     		str	r0, [sp, #44]	@ float
 6403              	.LVL754:
 6404              	.LBE523:
 410:src/main.cpp  ****       angles[i] = angles[i]*M_PI/180;
 6405              		.loc 12 410 0 discriminator 2
 6406 0718 7FF42EAF 		bne	.L300
 6407              	.LVL755:
 6408              	.LBE525:
 434:src/main.cpp  ****     y_dot /= 4;
 6409              		.loc 12 434 0
 6410 071c 4FF07A51 		mov	r1, #1048576000
 6411 0720 4046     		mov	r0, r8
 6412              	.LVL756:
 6413 0722 FFF7FEFF 		bl	__aeabi_fmul
 6414              	.LVL757:
 456:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6415              		.loc 12 456 0
 6416 0726 404E     		ldr	r6, .L324+8
 435:src/main.cpp  ****     theta_dot /= 4;
 6417              		.loc 12 435 0
 6418 0728 4FF07A51 		mov	r1, #1048576000
 456:src/main.cpp  ****     odom_msg.data[1] = y_dot;
 6419              		.loc 12 456 0
 6420 072c D6F81841 		ldr	r4, [r6, #280]
 6421              	.LVL758:
 6422 0730 2060     		str	r0, [r4]	@ float
 435:src/main.cpp  ****     theta_dot /= 4;
 6423              		.loc 12 435 0
 6424 0732 0A98     		ldr	r0, [sp, #40]	@ float
 6425 0734 FFF7FEFF 		bl	__aeabi_fmul
 6426              	.LVL759:
 436:src/main.cpp  **** 
 6427              		.loc 12 436 0
 6428 0738 4FF07A51 		mov	r1, #1048576000
 457:src/main.cpp  ****     odom_msg.data[2] = theta_dot;
 6429              		.loc 12 457 0
 6430 073c 6060     		str	r0, [r4, #4]	@ float
 436:src/main.cpp  **** 
 6431              		.loc 12 436 0
 6432 073e 0B98     		ldr	r0, [sp, #44]	@ float
 6433 0740 FFF7FEFF 		bl	__aeabi_fmul
 6434              	.LVL760:
 463:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 6435              		.loc 12 463 0
 6436 0744 06F1EC01 		add	r1, r6, #236
 458:src/main.cpp  ****     //odom_msg.data[3] = spinAngle;
 6437              		.loc 12 458 0
 6438 0748 A060     		str	r0, [r4, #8]	@ float
 463:src/main.cpp  ****     debug_pub.publish(&debug_msg);
 6439              		.loc 12 463 0
 6440 074a 06F1B400 		add	r0, r6, #180
 6441 074e FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 6442              	.LVL761:
 464:src/main.cpp  **** 
 6443              		.loc 12 464 0
 6444 0752 06F59671 		add	r1, r6, #300
 6445 0756 06F1C800 		add	r0, r6, #200
 6446 075a FFF7FEFF 		bl	_ZN3ros9Publisher7publishEPKNS_3MsgE
 6447              	.LVL762:
 466:src/main.cpp  **** 
 6448              		.loc 12 466 0
 6449 075e 3348     		ldr	r0, .L324+12
 6450 0760 FFF7FEFF 		bl	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 6451              	.LVL763:
 468:src/main.cpp  ****     if(elapsed > dt){
 6452              		.loc 12 468 0
 6453 0764 FFF7FEFF 		bl	millis
 6454              	.LVL764:
 6455 0768 099B     		ldr	r3, [sp, #36]
 6456 076a C01A     		subs	r0, r0, r3
 6457              	.LVL765:
 469:src/main.cpp  ****       //char elapsed_msg[18];
 6458              		.loc 12 469 0
 6459 076c 1428     		cmp	r0, #20
 6460              	.LVL766:
 6461              	.L317:
 6462 076e 4FD9     		bls	.L306
 359:src/main.cpp  ****       debug_toggle();
 6463              		.loc 12 359 0
 6464 0770 0E9C     		ldr	r4, [sp, #56]
 6465              	.LBE485:
 479:src/main.cpp  ****   //delete odom_msg.data;
 6466              		.loc 12 479 0
 6467 0772 67E6     		b	.L302
 6468              	.LVL767:
 6469              	.L281:
 6470              	.LBB527:
 6471              	.LBB476:
 352:./lib/ros_lib/ros/node_handle.h ****           if(subscribers[i] == 0){ // empty slot
 6472              		.loc 10 352 0
 6473 0774 0133     		adds	r3, r3, #1
 6474              	.LVL768:
 6475 0776 192B     		cmp	r3, #25
 6476 0778 7FF468AC 		bne	.L283
 6477 077c 76E4     		b	.L282
 6478              	.LVL769:
 6479              	.L284:
 6480              	.LBE476:
 6481              	.LBE527:
 6482              	.LBB528:
 6483              	.LBB479:
 338:./lib/ros_lib/ros/node_handle.h ****           if(publishers[i] == 0){ // empty slot
 6484              		.loc 10 338 0
 6485 077e 0133     		adds	r3, r3, #1
 6486              	.LVL770:
 6487 0780 192B     		cmp	r3, #25
 6488 0782 7FF477AC 		bne	.L286
 6489 0786 88E4     		b	.L285
 6490              	.LVL771:
 6491              	.L287:
 6492              	.LBE479:
 6493              	.LBE528:
 6494              	.LBB529:
 6495              	.LBB482:
 6496 0788 0133     		adds	r3, r3, #1
 6497              	.LVL772:
 6498 078a 192B     		cmp	r3, #25
 6499 078c 7FF486AC 		bne	.L289
 6500 0790 97E4     		b	.L288
 6501              	.LVL773:
 6502              	.L295:
 6503              	.LBE482:
 6504              	.LBE529:
 6505              	.LBB530:
 372:src/main.cpp  ****       waitForServos = false;
 6506              		.loc 12 372 0 discriminator 1
 6507 0792 A869     		ldr	r0, [r5, #24]
 6508              	.LVL774:
 6509 0794 0368     		ldr	r3, [r0]
 6510 0796 9B69     		ldr	r3, [r3, #24]
 6511 0798 9847     		blx	r3
 6512              	.LVL775:
 6513 079a 8046     		mov	r8, r0
 6514 079c 4846     		mov	r0, r9
 6515 079e FFF7FEFF 		bl	__aeabi_f2iz
 6516              	.LVL776:
 6517 07a2 0746     		mov	r7, r0
 6518 07a4 4046     		mov	r0, r8
 6519 07a6 FFF7FEFF 		bl	__aeabi_f2iz
 6520              	.LVL777:
 6521 07aa 8742     		cmp	r7, r0
 6522 07ac 7FF473AE 		bne	.L298
 372:src/main.cpp  ****       waitForServos = false;
 6523              		.loc 12 372 0 is_stmt 0 discriminator 4
 6524 07b0 6869     		ldr	r0, [r5, #20]
 6525 07b2 0368     		ldr	r3, [r0]
 6526 07b4 9B69     		ldr	r3, [r3, #24]
 6527 07b6 9847     		blx	r3
 6528              	.LVL778:
 6529 07b8 8046     		mov	r8, r0
 6530 07ba 5846     		mov	r0, fp
 6531 07bc FFF7FEFF 		bl	__aeabi_f2iz
 6532              	.LVL779:
 6533 07c0 0746     		mov	r7, r0
 6534 07c2 4046     		mov	r0, r8
 6535 07c4 FFF7FEFF 		bl	__aeabi_f2iz
 6536              	.LVL780:
 6537 07c8 8742     		cmp	r7, r0
 6538 07ca 7FF464AE 		bne	.L298
 6539              	.L296:
 373:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 6540              		.loc 12 373 0 is_stmt 1
 6541 07ce 0023     		movs	r3, #0
 374:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 6542              		.loc 12 374 0
 6543 07d0 D4F8E000 		ldr	r0, [r4, #224]
 373:src/main.cpp  ****       front_right->setReference(motorCmd[0]);
 6544              		.loc 12 373 0
 6545 07d4 2B72     		strb	r3, [r5, #8]
 374:src/main.cpp  ****       front_left->setReference(motorCmd[1]);
 6546              		.loc 12 374 0
 6547 07d6 0368     		ldr	r3, [r0]
 6548 07d8 E969     		ldr	r1, [r5, #28]	@ float
 6549 07da 5B69     		ldr	r3, [r3, #20]
 6550 07dc 9847     		blx	r3
 6551              	.LVL781:
 375:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 6552              		.loc 12 375 0
 6553 07de D4F8DC00 		ldr	r0, [r4, #220]
 6554 07e2 296A     		ldr	r1, [r5, #32]	@ float
 6555 07e4 0368     		ldr	r3, [r0]
 370:src/main.cpp  **** 
 6556              		.loc 12 370 0
 6557 07e6 0127     		movs	r7, #1
 375:src/main.cpp  ****       rear_left->setReference(motorCmd[2]);
 6558              		.loc 12 375 0
 6559 07e8 5B69     		ldr	r3, [r3, #20]
 6560 07ea 9847     		blx	r3
 6561              	.LVL782:
 376:src/main.cpp  ****       rear_right->setReference(motorCmd[3]);
 6562              		.loc 12 376 0
 6563 07ec D4F8E400 		ldr	r0, [r4, #228]
 6564 07f0 696A     		ldr	r1, [r5, #36]	@ float
 6565 07f2 0368     		ldr	r3, [r0]
 6566 07f4 5B69     		ldr	r3, [r3, #20]
 6567 07f6 9847     		blx	r3
 6568              	.LVL783:
 377:src/main.cpp  ****       delay(2);
 6569              		.loc 12 377 0
 6570 07f8 D4F8E800 		ldr	r0, [r4, #232]
 6571 07fc A96A     		ldr	r1, [r5, #40]	@ float
 6572 07fe 0368     		ldr	r3, [r0]
 6573 0800 5B69     		ldr	r3, [r3, #20]
 6574 0802 9847     		blx	r3
 6575              	.LVL784:
 378:src/main.cpp  ****     }else{
 6576              		.loc 12 378 0
 6577 0804 0220     		movs	r0, #2
 6578 0806 FFF7FEFF 		bl	delay
 6579              	.LVL785:
 6580 080a 64E6     		b	.L304
 6581              	.LVL786:
 6582              	.L305:
 6583              	.LBB526:
 6584              	.LBB524:
 417:src/main.cpp  ****       if(i==2 || i==3){
 6585              		.loc 12 417 0
 6586 080c BB46     		mov	fp, r7
 6587 080e 0BE7     		b	.L299
 6588              	.LVL787:
 6589              	.L306:
 6590              	.LBE524:
 6591              	.LBE526:
 477:src/main.cpp  ****     }
 6592              		.loc 12 477 0
 6593 0810 FFF7FEFF 		bl	millis
 6594              	.LVL788:
 6595 0814 099B     		ldr	r3, [sp, #36]
 6596 0816 C01A     		subs	r0, r0, r3
 6597 0818 1328     		cmp	r0, #19
 6598 081a A8E7     		b	.L317
 6599              	.L325:
 6600 081c AFF30080 		.align	3
 6601              	.L324:
 6602 0820 182D4454 		.word	1413754136
 6603 0824 FB21F93F 		.word	1073291771
 6604 0828 F8100000 		.word	.LANCHOR3
 6605 082c 3C080000 		.word	.LANCHOR1+2108
 6606              	.LBE530:
 6607              		.cfi_endproc
 6608              	.LFE1631:
 6609              		.fnend
 6611              		.align	1
 6612              		.syntax unified
 6613              		.thumb
 6614              		.thumb_func
 6615              		.fpu softvfp
 6617              	_GLOBAL__sub_I_RX:
 6618              		.fnstart
 6619              	.LFB1918:
 550:src/main.cpp  ****   /* User can add his own implementation to report the file name and line number,
 551:src/main.cpp  ****      ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 552:src/main.cpp  ****   /*char str[150];
 553:src/main.cpp  **** 
 554:src/main.cpp  ****   sprintf(str, "Wrong parameters value: file %s on line %u\r\n", file, (unsigned int)line);
 555:src/main.cpp  ****   nh.logerror(str);*/
 556:src/main.cpp  ****   while (1){
 557:src/main.cpp  ****     //debug_toggle();
 558:src/main.cpp  ****     //delay(100);
 559:src/main.cpp  ****     //nh.spinOnce();
 560:src/main.cpp  ****   }
 561:src/main.cpp  **** }
 6620              		.loc 12 561 0
 6621              		.cfi_startproc
 6622              		.cfi_personality 0,__gxx_personality_v0
 6623              		.cfi_lsda 0,.LLSDA1918
 6624              		@ args = 0, pretend = 0, frame = 0
 6625              		@ frame_needed = 0, uses_anonymous_args = 0
 6626              	.LVL789:
 6627 0830 70B5     		push	{r4, r5, r6, lr}
 6628              		.save {r4, r5, r6, lr}
 6629              	.LCFI48:
 6630              		.cfi_def_cfa_offset 16
 6631              		.cfi_offset 4, -16
 6632              		.cfi_offset 5, -12
 6633              		.cfi_offset 6, -8
 6634              		.cfi_offset 14, -4
 6635              	.LBB602:
 6636              	.LBB603:
 6637              	.LBB604:
 6638              	.LBB605:
 6639              	.LBB606:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6640              		.loc 10 119 0
 6641 0832 654B     		ldr	r3, .L337
 6642 0834 654C     		ldr	r4, .L337+4
 6643              	.LBB607:
 6644              	.LBB608:
 6645              	.LBB609:
  17:./lib/ros_lib/STM32Hardware.h ****       baud_ = 115200;
 6646              		.loc 14 17 0
 6647 0836 0120     		movs	r0, #1
 6648              	.LBE609:
 6649              	.LBE608:
 6650              	.LBE607:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6651              		.loc 10 119 0
 6652 0838 C4F83C38 		str	r3, [r4, #2108]
 6653              	.LVL790:
 6654              	.LEHB0:
 6655              	.LBB618:
 6656              	.LBB614:
 6657              	.LBB610:
  17:./lib/ros_lib/STM32Hardware.h ****       baud_ = 115200;
 6658              		.loc 14 17 0
 6659 083c FFF7FEFF 		bl	_Znwj
 6660              	.LVL791:
 6661              	.LEHE0:
 6662 0840 4FF4E131 		mov	r1, #115200
 6663 0844 0546     		mov	r5, r0
 6664              	.LEHB1:
 6665 0846 FFF7FEFF 		bl	_ZN15UsartWithBufferC1Ei
 6666              	.LVL792:
 6667              	.LEHE1:
  18:./lib/ros_lib/STM32Hardware.h ****     }
 6668              		.loc 14 18 0
 6669 084a 4FF4E133 		mov	r3, #115200
 6670              	.LBE610:
 6671              	.LBE614:
 6672              	.LBE618:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6673              		.loc 10 119 0
 6674 084e 41F23012 		movw	r2, #4400
 6675              	.LBB619:
 6676              	.LBB615:
 6677              	.LBB611:
  18:./lib/ros_lib/STM32Hardware.h ****     }
 6678              		.loc 14 18 0
 6679 0852 C4F84438 		str	r3, [r4, #2116]
 6680              	.LVL793:
 6681              	.LBE611:
 6682              	.LBE615:
 6683              	.LBE619:
 119:./lib/ros_lib/ros/node_handle.h **** 
 6684              		.loc 10 119 0
 6685 0856 0023     		movs	r3, #0
 6686 0858 A354     		strb	r3, [r4, r2]
 6687              	.LVL794:
 6688              	.LBB620:
 6689              	.LBB621:
 6690              	.LBB622:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6691              		.loc 4 70 0
 6692 085a 41F24412 		movw	r2, #4420
 6693 085e 5C49     		ldr	r1, .L337+8
 6694              	.LBE622:
 6695              	.LBE621:
 6696              	.LBE620:
 6697              	.LBB627:
 6698              	.LBB616:
 6699              	.LBB612:
  17:./lib/ros_lib/STM32Hardware.h ****       baud_ = 115200;
 6700              		.loc 14 17 0
 6701 0860 C4F84058 		str	r5, [r4, #2112]
 6702              	.LBE612:
 6703              	.LBE616:
 6704              	.LBE627:
 6705              	.LBB628:
 6706              	.LBB625:
 6707              	.LBB623:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6708              		.loc 4 70 0
 6709 0864 A150     		str	r1, [r4, r2]
 6710 0866 41F24812 		movw	r2, #4424
 6711 086a A354     		strb	r3, [r4, r2]
 6712 086c 41F25012 		movw	r2, #4432
 6713 0870 A350     		str	r3, [r4, r2]
 6714 0872 41F25412 		movw	r2, #4436
 6715 0876 A354     		strb	r3, [r4, r2]
 6716 0878 41F25C12 		movw	r2, #4444
 6717 087c 41F26811 		movw	r1, #4456
 6718 0880 A350     		str	r3, [r4, r2]
 6719 0882 04F58B52 		add	r2, r4, #4448
 6720 0886 1370     		strb	r3, [r2]
 6721              	.LBE623:
 6722              	.LBE625:
 6723              	.LBE628:
 6724              	.LBB629:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6725              		.loc 10 122 0
 6726 0888 04F63C02 		addw	r2, r4, #2108
 6727              	.LBE629:
 6728              	.LBB630:
 6729              	.LBB626:
 6730              	.LBB624:
  70:./lib/ros_lib/rosserial_msgs/RequestParam.h ****     {
 6731              		.loc 4 70 0
 6732 088c 6350     		str	r3, [r4, r1]
 6733              	.LVL795:
 6734              	.LBE624:
 6735              	.LBE626:
 6736              	.LBE630:
 6737              	.LBB631:
 122:./lib/ros_lib/ros/node_handle.h **** 
 6738              		.loc 10 122 0
 6739 088e 1C46     		mov	r4, r3
 6740 0890 1146     		mov	r1, r2
 6741              	.LVL796:
 6742              	.L327:
 6743 0892 D018     		adds	r0, r2, r3
 6744 0894 0433     		adds	r3, r3, #4
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6745              		.loc 10 121 0
 6746 0896 642B     		cmp	r3, #100
 122:./lib/ros_lib/ros/node_handle.h **** 
 6747              		.loc 10 122 0
 6748 0898 C0F81848 		str	r4, [r0, #2072]
 121:./lib/ros_lib/ros/node_handle.h **** 	   publishers[i] = 0;
 6749              		.loc 10 121 0
 6750 089c F9D1     		bne	.L327
 6751 089e 0023     		movs	r3, #0
 6752              	.LBE631:
 6753              	.LBB632:
 125:./lib/ros_lib/ros/node_handle.h **** 
 6754              		.loc 10 125 0
 6755 08a0 1846     		mov	r0, r3
 6756              	.L329:
 6757 08a2 CA18     		adds	r2, r1, r3
 6758 08a4 0433     		adds	r3, r3, #4
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6759              		.loc 10 124 0
 6760 08a6 642B     		cmp	r3, #100
 125:./lib/ros_lib/ros/node_handle.h **** 
 6761              		.loc 10 125 0
 6762 08a8 C2F87C08 		str	r0, [r2, #2172]
 6763              	.LVL797:
 124:./lib/ros_lib/ros/node_handle.h **** 	   subscribers[i] = 0;
 6764              		.loc 10 124 0
 6765 08ac F9D1     		bne	.L329
 6766 08ae 0023     		movs	r3, #0
 6767              	.LBE632:
 6768              	.LBB633:
 128:./lib/ros_lib/ros/node_handle.h **** 
 6769              		.loc 10 128 0
 6770 08b0 1846     		mov	r0, r3
 6771              	.L330:
 6772              	.LVL798:
 6773 08b2 CA18     		adds	r2, r1, r3
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6774              		.loc 10 127 0
 6775 08b4 0133     		adds	r3, r3, #1
 6776              	.LVL799:
 6777 08b6 B3F5806F 		cmp	r3, #1024
 128:./lib/ros_lib/ros/node_handle.h **** 
 6778              		.loc 10 128 0
 6779 08ba 1076     		strb	r0, [r2, #24]
 127:./lib/ros_lib/ros/node_handle.h **** 	   message_in[i] = 0;
 6780              		.loc 10 127 0
 6781 08bc F9D1     		bne	.L330
 6782 08be 0023     		movs	r3, #0
 6783              	.LVL800:
 6784              	.LBE633:
 6785              	.LBB634:
 131:./lib/ros_lib/ros/node_handle.h **** 
 6786              		.loc 10 131 0
 6787 08c0 1A46     		mov	r2, r3
 6788              	.L331:
 6789              	.LVL801:
 6790 08c2 C818     		adds	r0, r1, r3
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6791              		.loc 10 130 0
 6792 08c4 0133     		adds	r3, r3, #1
 6793              	.LVL802:
 6794 08c6 B3F5806F 		cmp	r3, #1024
 131:./lib/ros_lib/ros/node_handle.h **** 
 6795              		.loc 10 131 0
 6796 08ca 80F81824 		strb	r2, [r0, #1048]
 130:./lib/ros_lib/ros/node_handle.h **** 	   message_out[i] = 0;
 6797              		.loc 10 130 0
 6798 08ce F8D1     		bne	.L331
 6799              	.LVL803:
 6800              	.LBE634:
 6801              	.LBE606:
 6802              	.LBE605:
 6803              	.LBE604:
 6804              	.LBB638:
 6805              	.LBB639:
 6806              	.LBB640:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6807              		.loc 5 22 0
 6808 08d0 404B     		ldr	r3, .L337+12
 6809              	.LBE640:
 6810              	.LBE639:
 6811              	.LBE638:
 6812              	.LBB651:
 6813              	.LBB652:
 6814              	.LBB653:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6815              		.loc 11 67 0
 6816 08d2 4149     		ldr	r1, .L337+16
 6817              	.LBE653:
 6818              	.LBE652:
 6819              	.LBE651:
 6820              	.LBB690:
 6821              	.LBB646:
 6822              	.LBB641:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6823              		.loc 5 22 0
 6824 08d4 414C     		ldr	r4, .L337+20
 6825              	.LBE641:
 6826              	.LBE646:
 6827              	.LBE690:
 6828              	.LBB691:
 6829              	.LBB684:
 6830              	.LBB678:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6831              		.loc 11 67 0
 6832 08d6 5967     		str	r1, [r3, #116]
 6833              	.LBB654:
 6834              	.LBB655:
 6835              	.LBB656:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6836              		.loc 9 33 0
 6837 08d8 4149     		ldr	r1, .L337+24
 6838              	.LBE656:
 6839              	.LBE655:
 6840              	.LBE654:
 6841              	.LBE678:
 6842              	.LBE684:
 6843              	.LBE691:
 6844              	.LBB692:
 6845              	.LBB647:
 6846              	.LBB642:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6847              		.loc 5 22 0
 6848 08da 424D     		ldr	r5, .L337+28
 6849              	.LBE642:
 6850              	.LBE647:
 6851              	.LBE692:
 6852              	.LBB693:
 6853              	.LBB685:
 6854              	.LBB679:
 6855              	.LBB675:
 6856              	.LBB672:
 6857              	.LBB669:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6858              		.loc 9 33 0
 6859 08dc C3F88010 		str	r1, [r3, #128]
 6860              	.LBB657:
 6861              	.LBB658:
 6862              	.LBB659:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6863              		.loc 8 23 0
 6864 08e0 4149     		ldr	r1, .L337+32
 6865              	.LBE659:
 6866              	.LBE658:
 6867              	.LBE657:
 6868              	.LBE669:
 6869              	.LBE672:
 6870              	.LBE675:
 6871              	.LBE679:
 6872              	.LBE685:
 6873              	.LBE693:
 6874              	.LBB694:
 6875              	.LBB695:
 6876              	.LBB696:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 6877              		.loc 7 23 0
 6878 08e2 4248     		ldr	r0, .L337+36
 6879              	.LBE696:
 6880              	.LBE695:
 6881              	.LBE694:
 6882              	.LBB717:
 6883              	.LBB686:
 6884              	.LBB680:
 6885              	.LBB676:
 6886              	.LBB673:
 6887              	.LBB670:
 6888              	.LBB667:
 6889              	.LBB665:
 6890              	.LBB663:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 6891              		.loc 8 23 0
 6892 08e4 C3F88410 		str	r1, [r3, #132]
 6893              	.LBE663:
 6894              	.LBE665:
 6895              	.LBE667:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 6896              		.loc 9 33 0
 6897 08e8 0021     		movs	r1, #0
 6898 08ea C3F89810 		str	r1, [r3, #152]	@ float
 6899 08ee C3F89C10 		str	r1, [r3, #156]	@ float
 6900 08f2 C3F8A010 		str	r1, [r3, #160]	@ float
 6901 08f6 C3F8A410 		str	r1, [r3, #164]	@ float
 6902              	.LBE670:
 6903              	.LBE673:
 6904              	.LBE676:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6905              		.loc 11 67 0
 6906 08fa 3D49     		ldr	r1, .L337+40
 6907              	.LBE680:
 6908              	.LBE686:
 6909              	.LBE717:
 6910              	.LBB718:
 6911              	.LBB719:
 6912              	.LBB720:
  50:./lib/ros_lib/ros/publisher.h **** 
 6913              		.loc 18 50 0
 6914 08fc 3D4E     		ldr	r6, .L337+44
 6915              	.LBE720:
 6916              	.LBE719:
 6917              	.LBE718:
 6918              	.LBB727:
 6919              	.LBB687:
 6920              	.LBB681:
  67:./lib/ros_lib/ros/subscriber.h ****       {
 6921              		.loc 11 67 0
 6922 08fe C3F8AC10 		str	r1, [r3, #172]
 6923 0902 0121     		movs	r1, #1
 6924 0904 C3F8B010 		str	r1, [r3, #176]
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6925              		.loc 11 69 0
 6926 0908 3B49     		ldr	r1, .L337+48
 6927              	.LBE681:
 6928              	.LBE687:
 6929              	.LBE727:
 6930              	.LBB728:
 6931              	.LBB648:
 6932              	.LBB643:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6933              		.loc 5 22 0
 6934 090a C3F81C51 		str	r5, [r3, #284]
 6935              	.LBE643:
 6936              	.LBE648:
 6937              	.LBE728:
 6938              	.LBB729:
 6939              	.LBB688:
 6940              	.LBB682:
  69:./lib/ros_lib/ros/subscriber.h ****       };
 6941              		.loc 11 69 0
 6942 090e D967     		str	r1, [r3, #124]
 6943              	.LBE682:
 6944              	.LBE688:
 6945              	.LBE729:
 6946              	.LBB730:
 6947              	.LBB713:
 6948              	.LBB709:
 6949              	.LBB697:
 6950              	.LBB698:
 6951              	.LBB699:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6952              		.loc 6 23 0
 6953 0910 3A49     		ldr	r1, .L337+52
 6954              	.LBE699:
 6955              	.LBE698:
 6956              	.LBE697:
 6957              	.LBE709:
 6958              	.LBE713:
 6959              	.LBE730:
 6960              	.LBB731:
 6961              	.LBB649:
 6962              	.LBB644:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6963              		.loc 5 22 0
 6964 0912 C3F82041 		str	r4, [r3, #288]
 6965              	.LBE644:
 6966              	.LBE649:
 6967              	.LBE731:
 6968              	.LBB732:
 6969              	.LBB714:
 6970              	.LBB710:
 6971              	.LBB707:
 6972              	.LBB705:
 6973              	.LBB703:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 6974              		.loc 6 23 0
 6975 0916 C3F83011 		str	r1, [r3, #304]
 6976              	.LBE703:
 6977              	.LBE705:
 6978              	.LBE707:
 6979              	.LBE710:
 6980              	.LBE714:
 6981              	.LBE732:
 6982              	.LBB733:
 6983              	.LBB650:
 6984              	.LBB645:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 6985              		.loc 5 22 0
 6986 091a C3F82421 		str	r2, [r3, #292]
 6987 091e C3F82821 		str	r2, [r3, #296]
 6988              	.LVL804:
 6989              	.LBE645:
 6990              	.LBE650:
 6991              	.LBE733:
 6992              	.LBB734:
 6993              	.LBB735:
 6994              	.LBB736:
 6995 0922 C3F85C51 		str	r5, [r3, #348]
 6996 0926 C3F86041 		str	r4, [r3, #352]
 6997 092a C3F86421 		str	r2, [r3, #356]
 6998 092e C3F86821 		str	r2, [r3, #360]
 6999              	.LVL805:
 7000              	.LBE736:
 7001              	.LBE735:
 7002              	.LBE734:
 7003              	.LBB737:
 7004              	.LBB689:
 7005              	.LBB683:
 7006              	.LBB677:
 7007              	.LBB674:
 7008              	.LBB671:
 7009              	.LBB668:
 7010              	.LBB666:
 7011              	.LBB664:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7012              		.loc 8 23 0
 7013 0932 C3F88820 		str	r2, [r3, #136]
 7014              	.LVL806:
 7015              	.LBB660:
 7016              	.LBB661:
 7017              	.LBB662:
 7018              		.loc 19 52 0
 7019 0936 C3F88C20 		str	r2, [r3, #140]
 7020 093a C3F89020 		str	r2, [r3, #144]
 7021              	.LVL807:
 7022              	.LBE662:
 7023              	.LBE661:
 7024              	.LBE660:
  23:./lib/ros_lib/std_msgs/Header.h ****     {
 7025              		.loc 8 23 0
 7026 093e C3F89440 		str	r4, [r3, #148]
 7027              	.LVL808:
 7028              	.LBE664:
 7029              	.LBE666:
 7030              	.LBE668:
  33:./lib/ros_lib/roberto_msgs/MotorState.h ****     {
 7031              		.loc 9 33 0
 7032 0942 83F8A820 		strb	r2, [r3, #168]
 7033              	.LVL809:
 7034              	.LBE671:
 7035              	.LBE674:
 7036              	.LBE677:
 7037              	.LBE683:
 7038              	.LBE689:
 7039              	.LBE737:
 7040              	.LBB738:
 7041              	.LBB715:
 7042              	.LBB711:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7043              		.loc 7 23 0
 7044 0946 C3F82C01 		str	r0, [r3, #300]
 7045              	.LVL810:
 7046              	.LBB708:
 7047              	.LBB706:
 7048              	.LBB704:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7049              		.loc 6 23 0
 7050 094a 83F83421 		strb	r2, [r3, #308]
 7051              	.LVL811:
 7052              	.LBB700:
 7053              	.LBB701:
 7054              	.LBB702:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 7055              		.loc 5 22 0
 7056 094e C3F83851 		str	r5, [r3, #312]
 7057 0952 C3F83C41 		str	r4, [r3, #316]
 7058 0956 C3F84021 		str	r2, [r3, #320]
 7059 095a C3F84421 		str	r2, [r3, #324]
 7060              	.LVL812:
 7061              	.LBE702:
 7062              	.LBE701:
 7063              	.LBE700:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7064              		.loc 6 23 0
 7065 095e C3F84821 		str	r2, [r3, #328]
 7066 0962 C3F84C21 		str	r2, [r3, #332]
 7067              	.LVL813:
 7068              	.LBE704:
 7069              	.LBE706:
 7070              	.LBE708:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7071              		.loc 7 23 0
 7072 0966 83F85021 		strb	r2, [r3, #336]
 7073              	.LBE711:
 7074              	.LBE715:
 7075              	.LBE738:
 7076              	.LBB739:
 7077              	.LBB740:
 7078              	.LBB741:
 7079              	.LBB742:
 7080              	.LBB743:
 7081              	.LBB744:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7082              		.loc 6 23 0
 7083 096a C3F8F010 		str	r1, [r3, #240]
 7084              	.LBE744:
 7085              	.LBE743:
 7086              	.LBE742:
 7087              	.LBE741:
 7088              	.LBE740:
 7089              	.LBE739:
 7090              	.LBB758:
 7091              	.LBB759:
 7092              	.LBB760:
  50:./lib/ros_lib/ros/publisher.h **** 
 7093              		.loc 18 50 0
 7094 096e 2449     		ldr	r1, .L337+56
 7095              	.LBE760:
 7096              	.LBE759:
 7097              	.LBE758:
 7098              	.LBB767:
 7099              	.LBB724:
 7100              	.LBB721:
 7101 0970 C3F8C860 		str	r6, [r3, #200]
 7102              	.LBE721:
 7103              	.LBE724:
 7104              	.LBE767:
 7105              	.LBB768:
 7106              	.LBB764:
 7107              	.LBB761:
 7108 0974 C3F8B410 		str	r1, [r3, #180]
 7109              	.LBE761:
 7110              	.LBE764:
 7111              	.LBE768:
 7112              	.LBB769:
 7113              	.LBB725:
 7114              	.LBB722:
 7115 0978 03F59676 		add	r6, r3, #300
 7116              	.LBE722:
 7117              	.LBE725:
 7118              	.LBE769:
 7119              	.LBB770:
 7120              	.LBB765:
 7121              	.LBB762:
 7122 097c 03F1EC01 		add	r1, r3, #236
 7123              	.LBE762:
 7124              	.LBE765:
 7125              	.LBE770:
 7126              	.LBB771:
 7127              	.LBB756:
 7128              	.LBB754:
 7129              	.LBB752:
 7130              	.LBB750:
 7131              	.LBB748:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7132              		.loc 6 23 0
 7133 0980 83F8F420 		strb	r2, [r3, #244]
 7134              	.LBE748:
 7135              	.LBE750:
 7136              	.LBE752:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7137              		.loc 7 23 0
 7138 0984 83F81021 		strb	r2, [r3, #272]
 7139              	.LBE754:
 7140              	.LBE756:
 7141              	.LBE771:
 7142              	.LBB772:
 7143              	.LBB716:
 7144              	.LBB712:
 7145 0988 C3F85821 		str	r2, [r3, #344]
 7146              	.LVL814:
 7147              	.LBE712:
 7148              	.LBE716:
 7149              	.LBE772:
 7150              	.LBB773:
 7151              	.LBB726:
 7152              	.LBB723:
  50:./lib/ros_lib/ros/publisher.h **** 
 7153              		.loc 18 50 0
 7154 098c C3F8CC60 		str	r6, [r3, #204]
 7155 0990 C3F8D820 		str	r2, [r3, #216]
 7156              	.LVL815:
 7157              	.LBE723:
 7158              	.LBE726:
 7159              	.LBE773:
 7160              	.LBB774:
 7161              	.LBB757:
 7162              	.LBB755:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7163              		.loc 7 23 0
 7164 0994 C3F8EC00 		str	r0, [r3, #236]
 7165              	.LVL816:
 7166              	.LBB753:
 7167              	.LBB751:
 7168              	.LBB749:
 7169              	.LBB745:
 7170              	.LBB746:
 7171              	.LBB747:
  22:./lib/ros_lib/std_msgs/MultiArrayDimension.h ****     {
 7172              		.loc 5 22 0
 7173 0998 C3F8F850 		str	r5, [r3, #248]
 7174 099c C3F8FC40 		str	r4, [r3, #252]
 7175 09a0 C3F80021 		str	r2, [r3, #256]
 7176 09a4 C3F80421 		str	r2, [r3, #260]
 7177              	.LVL817:
 7178              	.LBE747:
 7179              	.LBE746:
 7180              	.LBE745:
  23:./lib/ros_lib/std_msgs/MultiArrayLayout.h ****     {
 7181              		.loc 6 23 0
 7182 09a8 C3F80821 		str	r2, [r3, #264]
 7183 09ac C3F80C21 		str	r2, [r3, #268]
 7184              	.LVL818:
 7185              	.LBE749:
 7186              	.LBE751:
 7187              	.LBE753:
  23:./lib/ros_lib/std_msgs/Float32MultiArray.h ****     {
 7188              		.loc 7 23 0
 7189 09b0 C3F81821 		str	r2, [r3, #280]
 7190              	.LVL819:
 7191              	.LBE755:
 7192              	.LBE757:
 7193              	.LBE774:
 7194              	.LBB775:
 7195              	.LBB766:
 7196              	.LBB763:
  50:./lib/ros_lib/ros/publisher.h **** 
 7197              		.loc 18 50 0
 7198 09b4 C3F8B810 		str	r1, [r3, #184]
 7199 09b8 C3F8C420 		str	r2, [r3, #196]
 7200              	.LVL820:
 7201 09bc 70BD     		pop	{r4, r5, r6, pc}
 7202              	.LVL821:
 7203              	.L332:
 7204              	.LBE763:
 7205              	.LBE766:
 7206              	.LBE775:
 7207              	.LBB776:
 7208              	.LBB637:
 7209              	.LBB636:
 7210              	.LBB635:
 7211              	.LBB617:
 7212              	.LBB613:
  17:./lib/ros_lib/STM32Hardware.h ****       baud_ = 115200;
 7213              		.loc 14 17 0
 7214 09be 2846     		mov	r0, r5
 7215 09c0 FFF7FEFF 		bl	_ZdlPv
 7216              	.LVL822:
 7217              	.LEHB2:
 7218 09c4 FFF7FEFF 		bl	__cxa_end_cleanup
 7219              	.LVL823:
 7220              	.LEHE2:
 7221              	.L338:
 7222              		.align	2
 7223              	.L337:
 7224 09c8 08000000 		.word	_ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE+8
 7225 09cc 00000000 		.word	.LANCHOR1
 7226 09d0 08000000 		.word	_ZTVN14rosserial_msgs20RequestParamResponseE+8
 7227 09d4 F8100000 		.word	.LANCHOR3
 7228 09d8 08000000 		.word	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE+8
 7229 09dc 00000000 		.word	.LC20
 7230 09e0 08000000 		.word	_ZTVN12roberto_msgs10MotorStateE+8
 7231 09e4 08000000 		.word	_ZTVN8std_msgs19MultiArrayDimensionE+8
 7232 09e8 08000000 		.word	_ZTVN8std_msgs6HeaderE+8
 7233 09ec 08000000 		.word	_ZTVN8std_msgs17Float32MultiArrayE+8
 7234 09f0 00000000 		.word	_Z8motor_cbRKN12roberto_msgs10MotorStateE
 7235 09f4 4B000000 		.word	.LC28
 7236 09f8 43000000 		.word	.LC27
 7237 09fc 08000000 		.word	_ZTVN8std_msgs16MultiArrayLayoutE+8
 7238 0a00 51000000 		.word	.LC29
 7239              	.LBE613:
 7240              	.LBE617:
 7241              	.LBE635:
 7242              	.LBE636:
 7243              	.LBE637:
 7244              	.LBE776:
 7245              	.LBE603:
 7246              	.LBE602:
 7247              		.cfi_endproc
 7248              	.LFE1918:
 7249              		.global	__gxx_personality_v0
 7250              		.personality	__gxx_personality_v0
 7251              		.handlerdata
 7252              	.LLSDA1918:
 7253 0008 FF       		.byte	0xff
 7254 0009 FF       		.byte	0xff
 7255 000a 01       		.byte	0x1
 7256 000b 0E       		.uleb128 .LLSDACSE1918-.LLSDACSB1918
 7257              	.LLSDACSB1918:
 7258 000c 0C       		.uleb128 .LEHB0-.LFB1918
 7259 000d 04       		.uleb128 .LEHE0-.LEHB0
 7260 000e 00       		.uleb128 0
 7261 000f 00       		.uleb128 0
 7262 0010 16       		.uleb128 .LEHB1-.LFB1918
 7263 0011 04       		.uleb128 .LEHE1-.LEHB1
 7264 0012 8E03     		.uleb128 .L332-.LFB1918
 7265 0014 00       		.uleb128 0
 7266 0015 9403     		.uleb128 .LEHB2-.LFB1918
 7267 0017 04       		.uleb128 .LEHE2-.LEHB2
 7268 0018 00       		.uleb128 0
 7269 0019 00       		.uleb128 0
 7270              	.LLSDACSE1918:
 7271              		.section	.text.startup
 7272              		.fnend
 7274              		.section	.init_array,"aw",%init_array
 7275              		.align	2
 7276 0000 00000000 		.word	_GLOBAL__sub_I_RX(target1)
 7277              		.weak	_ZTSN3ros3MsgE
 7278              		.section	.rodata._ZTSN3ros3MsgE,"aG",%progbits,_ZTSN3ros3MsgE,comdat
 7281              	_ZTSN3ros3MsgE:
 7282 0000 4E33726F 		.ascii	"N3ros3MsgE\000"
 7282      73334D73 
 7282      674500
 7283              		.weak	_ZTIN3ros3MsgE
 7284              		.section	.rodata._ZTIN3ros3MsgE,"aG",%progbits,_ZTIN3ros3MsgE,comdat
 7285              		.align	2
 7288              	_ZTIN3ros3MsgE:
 7289 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7290 0004 00000000 		.word	_ZTSN3ros3MsgE
 7291              		.weak	_ZTSN8std_msgs4TimeE
 7292              		.section	.rodata._ZTSN8std_msgs4TimeE,"aG",%progbits,_ZTSN8std_msgs4TimeE,comdat
 7295              	_ZTSN8std_msgs4TimeE:
 7296 0000 4E387374 		.ascii	"N8std_msgs4TimeE\000"
 7296      645F6D73 
 7296      67733454 
 7296      696D6545 
 7296      00
 7297              		.weak	_ZTIN8std_msgs4TimeE
 7298              		.section	.rodata._ZTIN8std_msgs4TimeE,"aG",%progbits,_ZTIN8std_msgs4TimeE,comdat
 7299              		.align	2
 7302              	_ZTIN8std_msgs4TimeE:
 7303 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7304 0004 00000000 		.word	_ZTSN8std_msgs4TimeE
 7305 0008 00000000 		.word	_ZTIN3ros3MsgE
 7306              		.weak	_ZTSN14rosserial_msgs9TopicInfoE
 7307              		.section	.rodata._ZTSN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTSN14rosserial_msgs9TopicInfoE,
 7310              	_ZTSN14rosserial_msgs9TopicInfoE:
 7311 0000 4E313472 		.ascii	"N14rosserial_msgs9TopicInfoE\000"
 7311      6F737365 
 7311      7269616C 
 7311      5F6D7367 
 7311      7339546F 
 7312              		.weak	_ZTIN14rosserial_msgs9TopicInfoE
 7313              		.section	.rodata._ZTIN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTIN14rosserial_msgs9TopicInfoE,
 7314              		.align	2
 7317              	_ZTIN14rosserial_msgs9TopicInfoE:
 7318 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7319 0004 00000000 		.word	_ZTSN14rosserial_msgs9TopicInfoE
 7320 0008 00000000 		.word	_ZTIN3ros3MsgE
 7321              		.weak	_ZTSN14rosserial_msgs3LogE
 7322              		.section	.rodata._ZTSN14rosserial_msgs3LogE,"aG",%progbits,_ZTSN14rosserial_msgs3LogE,comdat
 7325              	_ZTSN14rosserial_msgs3LogE:
 7326 0000 4E313472 		.ascii	"N14rosserial_msgs3LogE\000"
 7326      6F737365 
 7326      7269616C 
 7326      5F6D7367 
 7326      73334C6F 
 7327              		.weak	_ZTIN14rosserial_msgs3LogE
 7328              		.section	.rodata._ZTIN14rosserial_msgs3LogE,"aG",%progbits,_ZTIN14rosserial_msgs3LogE,comdat
 7329              		.align	2
 7332              	_ZTIN14rosserial_msgs3LogE:
 7333 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7334 0004 00000000 		.word	_ZTSN14rosserial_msgs3LogE
 7335 0008 00000000 		.word	_ZTIN3ros3MsgE
 7336              		.weak	_ZTSN14rosserial_msgs20RequestParamResponseE
 7337              		.section	.rodata._ZTSN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTSN14rosserial_msgs
 7340              	_ZTSN14rosserial_msgs20RequestParamResponseE:
 7341 0000 4E313472 		.ascii	"N14rosserial_msgs20RequestParamResponseE\000"
 7341      6F737365 
 7341      7269616C 
 7341      5F6D7367 
 7341      73323052 
 7342              		.weak	_ZTIN14rosserial_msgs20RequestParamResponseE
 7343              		.section	.rodata._ZTIN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTIN14rosserial_msgs
 7344              		.align	2
 7347              	_ZTIN14rosserial_msgs20RequestParamResponseE:
 7348 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7349 0004 00000000 		.word	_ZTSN14rosserial_msgs20RequestParamResponseE
 7350 0008 00000000 		.word	_ZTIN3ros3MsgE
 7351              		.weak	_ZTSN3ros15NodeHandleBase_E
 7352              		.section	.rodata._ZTSN3ros15NodeHandleBase_E,"aG",%progbits,_ZTSN3ros15NodeHandleBase_E,comdat
 7355              	_ZTSN3ros15NodeHandleBase_E:
 7356 0000 4E33726F 		.ascii	"N3ros15NodeHandleBase_E\000"
 7356      7331354E 
 7356      6F646548 
 7356      616E646C 
 7356      65426173 
 7357              		.weak	_ZTIN3ros15NodeHandleBase_E
 7358              		.section	.rodata._ZTIN3ros15NodeHandleBase_E,"aG",%progbits,_ZTIN3ros15NodeHandleBase_E,comdat
 7359              		.align	2
 7362              	_ZTIN3ros15NodeHandleBase_E:
 7363 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7364 0004 00000000 		.word	_ZTSN3ros15NodeHandleBase_E
 7365              		.weak	_ZTSN3ros11Subscriber_E
 7366              		.section	.rodata._ZTSN3ros11Subscriber_E,"aG",%progbits,_ZTSN3ros11Subscriber_E,comdat
 7369              	_ZTSN3ros11Subscriber_E:
 7370 0000 4E33726F 		.ascii	"N3ros11Subscriber_E\000"
 7370      73313153 
 7370      75627363 
 7370      72696265 
 7370      725F4500 
 7371              		.weak	_ZTIN3ros11Subscriber_E
 7372              		.section	.rodata._ZTIN3ros11Subscriber_E,"aG",%progbits,_ZTIN3ros11Subscriber_E,comdat
 7373              		.align	2
 7376              	_ZTIN3ros11Subscriber_E:
 7377 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 7378 0004 00000000 		.word	_ZTSN3ros11Subscriber_E
 7379              		.weak	_ZTSN8std_msgs19MultiArrayDimensionE
 7380              		.section	.rodata._ZTSN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTSN8std_msgs19MultiArrayDim
 7383              	_ZTSN8std_msgs19MultiArrayDimensionE:
 7384 0000 4E387374 		.ascii	"N8std_msgs19MultiArrayDimensionE\000"
 7384      645F6D73 
 7384      67733139 
 7384      4D756C74 
 7384      69417272 
 7385              		.weak	_ZTIN8std_msgs19MultiArrayDimensionE
 7386              		.section	.rodata._ZTIN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTIN8std_msgs19MultiArrayDim
 7387              		.align	2
 7390              	_ZTIN8std_msgs19MultiArrayDimensionE:
 7391 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7392 0004 00000000 		.word	_ZTSN8std_msgs19MultiArrayDimensionE
 7393 0008 00000000 		.word	_ZTIN3ros3MsgE
 7394              		.weak	_ZTSN8std_msgs16MultiArrayLayoutE
 7395              		.section	.rodata._ZTSN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTSN8std_msgs16MultiArrayLayout
 7398              	_ZTSN8std_msgs16MultiArrayLayoutE:
 7399 0000 4E387374 		.ascii	"N8std_msgs16MultiArrayLayoutE\000"
 7399      645F6D73 
 7399      67733136 
 7399      4D756C74 
 7399      69417272 
 7400              		.weak	_ZTIN8std_msgs16MultiArrayLayoutE
 7401              		.section	.rodata._ZTIN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTIN8std_msgs16MultiArrayLayout
 7402              		.align	2
 7405              	_ZTIN8std_msgs16MultiArrayLayoutE:
 7406 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7407 0004 00000000 		.word	_ZTSN8std_msgs16MultiArrayLayoutE
 7408 0008 00000000 		.word	_ZTIN3ros3MsgE
 7409              		.weak	_ZTSN8std_msgs17Float32MultiArrayE
 7410              		.section	.rodata._ZTSN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTSN8std_msgs17Float32MultiArr
 7413              	_ZTSN8std_msgs17Float32MultiArrayE:
 7414 0000 4E387374 		.ascii	"N8std_msgs17Float32MultiArrayE\000"
 7414      645F6D73 
 7414      67733137 
 7414      466C6F61 
 7414      7433324D 
 7415              		.weak	_ZTIN8std_msgs17Float32MultiArrayE
 7416              		.section	.rodata._ZTIN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTIN8std_msgs17Float32MultiArr
 7417              		.align	2
 7420              	_ZTIN8std_msgs17Float32MultiArrayE:
 7421 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7422 0004 00000000 		.word	_ZTSN8std_msgs17Float32MultiArrayE
 7423 0008 00000000 		.word	_ZTIN3ros3MsgE
 7424              		.weak	_ZTSN8std_msgs6HeaderE
 7425              		.section	.rodata._ZTSN8std_msgs6HeaderE,"aG",%progbits,_ZTSN8std_msgs6HeaderE,comdat
 7428              	_ZTSN8std_msgs6HeaderE:
 7429 0000 4E387374 		.ascii	"N8std_msgs6HeaderE\000"
 7429      645F6D73 
 7429      67733648 
 7429      65616465 
 7429      724500
 7430              		.weak	_ZTIN8std_msgs6HeaderE
 7431              		.section	.rodata._ZTIN8std_msgs6HeaderE,"aG",%progbits,_ZTIN8std_msgs6HeaderE,comdat
 7432              		.align	2
 7435              	_ZTIN8std_msgs6HeaderE:
 7436 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7437 0004 00000000 		.word	_ZTSN8std_msgs6HeaderE
 7438 0008 00000000 		.word	_ZTIN3ros3MsgE
 7439              		.weak	_ZTSN12roberto_msgs10MotorStateE
 7440              		.section	.rodata._ZTSN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTSN12roberto_msgs10MotorStateE,
 7443              	_ZTSN12roberto_msgs10MotorStateE:
 7444 0000 4E313272 		.ascii	"N12roberto_msgs10MotorStateE\000"
 7444      6F626572 
 7444      746F5F6D 
 7444      73677331 
 7444      304D6F74 
 7445              		.weak	_ZTIN12roberto_msgs10MotorStateE
 7446              		.section	.rodata._ZTIN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTIN12roberto_msgs10MotorStateE,
 7447              		.align	2
 7450              	_ZTIN12roberto_msgs10MotorStateE:
 7451 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7452 0004 00000000 		.word	_ZTSN12roberto_msgs10MotorStateE
 7453 0008 00000000 		.word	_ZTIN3ros3MsgE
 7454              		.weak	_ZTSN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
 7455              		.section	.rodata._ZTSN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits,_
 7458              	_ZTSN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:
 7459 0000 4E33726F 		.ascii	"N3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024E"
 7459      7331314E 
 7459      6F646548 
 7459      616E646C 
 7459      655F4931 
 7460 0033 4C693130 		.ascii	"Li1024EEE\000"
 7460      32344545 
 7460      4500
 7461              		.weak	_ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
 7462              		.section	.rodata._ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits,_
 7463              		.align	2
 7466              	_ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:
 7467 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7468 0004 00000000 		.word	_ZTSN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
 7469 0008 00000000 		.word	_ZTIN3ros15NodeHandleBase_E
 7470              		.weak	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7471              		.section	.rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTSN3ros10Su
 7474              	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7475 0000 4E33726F 		.ascii	"N3ros10SubscriberIN12roberto_msgs10MotorStateEEE\000"
 7475      73313053 
 7475      75627363 
 7475      72696265 
 7475      72494E31 
 7476              		.weak	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7477              		.section	.rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTIN3ros10Su
 7478              		.align	2
 7481              	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7482 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 7483 0004 00000000 		.word	_ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7484 0008 00000000 		.word	_ZTIN3ros11Subscriber_E
 7485              		.weak	_ZTVN8std_msgs4TimeE
 7486              		.section	.rodata._ZTVN8std_msgs4TimeE,"aG",%progbits,_ZTVN8std_msgs4TimeE,comdat
 7487              		.align	2
 7490              	_ZTVN8std_msgs4TimeE:
 7491 0000 00000000 		.word	0
 7492 0004 00000000 		.word	_ZTIN8std_msgs4TimeE
 7493 0008 00000000 		.word	_ZNK8std_msgs4Time9serializeEPh
 7494 000c 00000000 		.word	_ZN8std_msgs4Time11deserializeEPh
 7495 0010 00000000 		.word	_ZN8std_msgs4Time7getTypeEv
 7496 0014 00000000 		.word	_ZN8std_msgs4Time6getMD5Ev
 7497              		.weak	_ZTVN14rosserial_msgs9TopicInfoE
 7498              		.section	.rodata._ZTVN14rosserial_msgs9TopicInfoE,"aG",%progbits,_ZTVN14rosserial_msgs9TopicInfoE,
 7499              		.align	2
 7502              	_ZTVN14rosserial_msgs9TopicInfoE:
 7503 0000 00000000 		.word	0
 7504 0004 00000000 		.word	_ZTIN14rosserial_msgs9TopicInfoE
 7505 0008 00000000 		.word	_ZNK14rosserial_msgs9TopicInfo9serializeEPh
 7506 000c 00000000 		.word	_ZN14rosserial_msgs9TopicInfo11deserializeEPh
 7507 0010 00000000 		.word	_ZN14rosserial_msgs9TopicInfo7getTypeEv
 7508 0014 00000000 		.word	_ZN14rosserial_msgs9TopicInfo6getMD5Ev
 7509              		.weak	_ZTVN14rosserial_msgs3LogE
 7510              		.section	.rodata._ZTVN14rosserial_msgs3LogE,"aG",%progbits,_ZTVN14rosserial_msgs3LogE,comdat
 7511              		.align	2
 7514              	_ZTVN14rosserial_msgs3LogE:
 7515 0000 00000000 		.word	0
 7516 0004 00000000 		.word	_ZTIN14rosserial_msgs3LogE
 7517 0008 00000000 		.word	_ZNK14rosserial_msgs3Log9serializeEPh
 7518 000c 00000000 		.word	_ZN14rosserial_msgs3Log11deserializeEPh
 7519 0010 00000000 		.word	_ZN14rosserial_msgs3Log7getTypeEv
 7520 0014 00000000 		.word	_ZN14rosserial_msgs3Log6getMD5Ev
 7521              		.weak	_ZTVN14rosserial_msgs20RequestParamResponseE
 7522              		.section	.rodata._ZTVN14rosserial_msgs20RequestParamResponseE,"aG",%progbits,_ZTVN14rosserial_msgs
 7523              		.align	2
 7526              	_ZTVN14rosserial_msgs20RequestParamResponseE:
 7527 0000 00000000 		.word	0
 7528 0004 00000000 		.word	_ZTIN14rosserial_msgs20RequestParamResponseE
 7529 0008 00000000 		.word	_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
 7530 000c 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
 7531 0010 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse7getTypeEv
 7532 0014 00000000 		.word	_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
 7533              		.weak	_ZTVN8std_msgs19MultiArrayDimensionE
 7534              		.section	.rodata._ZTVN8std_msgs19MultiArrayDimensionE,"aG",%progbits,_ZTVN8std_msgs19MultiArrayDim
 7535              		.align	2
 7538              	_ZTVN8std_msgs19MultiArrayDimensionE:
 7539 0000 00000000 		.word	0
 7540 0004 00000000 		.word	_ZTIN8std_msgs19MultiArrayDimensionE
 7541 0008 00000000 		.word	_ZNK8std_msgs19MultiArrayDimension9serializeEPh
 7542 000c 00000000 		.word	_ZN8std_msgs19MultiArrayDimension11deserializeEPh
 7543 0010 00000000 		.word	_ZN8std_msgs19MultiArrayDimension7getTypeEv
 7544 0014 00000000 		.word	_ZN8std_msgs19MultiArrayDimension6getMD5Ev
 7545              		.weak	_ZTVN8std_msgs16MultiArrayLayoutE
 7546              		.section	.rodata._ZTVN8std_msgs16MultiArrayLayoutE,"aG",%progbits,_ZTVN8std_msgs16MultiArrayLayout
 7547              		.align	2
 7550              	_ZTVN8std_msgs16MultiArrayLayoutE:
 7551 0000 00000000 		.word	0
 7552 0004 00000000 		.word	_ZTIN8std_msgs16MultiArrayLayoutE
 7553 0008 00000000 		.word	_ZNK8std_msgs16MultiArrayLayout9serializeEPh
 7554 000c 00000000 		.word	_ZN8std_msgs16MultiArrayLayout11deserializeEPh
 7555 0010 00000000 		.word	_ZN8std_msgs16MultiArrayLayout7getTypeEv
 7556 0014 00000000 		.word	_ZN8std_msgs16MultiArrayLayout6getMD5Ev
 7557              		.weak	_ZTVN8std_msgs17Float32MultiArrayE
 7558              		.section	.rodata._ZTVN8std_msgs17Float32MultiArrayE,"aG",%progbits,_ZTVN8std_msgs17Float32MultiArr
 7559              		.align	2
 7562              	_ZTVN8std_msgs17Float32MultiArrayE:
 7563 0000 00000000 		.word	0
 7564 0004 00000000 		.word	_ZTIN8std_msgs17Float32MultiArrayE
 7565 0008 00000000 		.word	_ZNK8std_msgs17Float32MultiArray9serializeEPh
 7566 000c 00000000 		.word	_ZN8std_msgs17Float32MultiArray11deserializeEPh
 7567 0010 00000000 		.word	_ZN8std_msgs17Float32MultiArray7getTypeEv
 7568 0014 00000000 		.word	_ZN8std_msgs17Float32MultiArray6getMD5Ev
 7569              		.weak	_ZTVN8std_msgs6HeaderE
 7570              		.section	.rodata._ZTVN8std_msgs6HeaderE,"aG",%progbits,_ZTVN8std_msgs6HeaderE,comdat
 7571              		.align	2
 7574              	_ZTVN8std_msgs6HeaderE:
 7575 0000 00000000 		.word	0
 7576 0004 00000000 		.word	_ZTIN8std_msgs6HeaderE
 7577 0008 00000000 		.word	_ZNK8std_msgs6Header9serializeEPh
 7578 000c 00000000 		.word	_ZN8std_msgs6Header11deserializeEPh
 7579 0010 00000000 		.word	_ZN8std_msgs6Header7getTypeEv
 7580 0014 00000000 		.word	_ZN8std_msgs6Header6getMD5Ev
 7581              		.weak	_ZTVN12roberto_msgs10MotorStateE
 7582              		.section	.rodata._ZTVN12roberto_msgs10MotorStateE,"aG",%progbits,_ZTVN12roberto_msgs10MotorStateE,
 7583              		.align	2
 7586              	_ZTVN12roberto_msgs10MotorStateE:
 7587 0000 00000000 		.word	0
 7588 0004 00000000 		.word	_ZTIN12roberto_msgs10MotorStateE
 7589 0008 00000000 		.word	_ZNK12roberto_msgs10MotorState9serializeEPh
 7590 000c 00000000 		.word	_ZN12roberto_msgs10MotorState11deserializeEPh
 7591 0010 00000000 		.word	_ZN12roberto_msgs10MotorState7getTypeEv
 7592 0014 00000000 		.word	_ZN12roberto_msgs10MotorState6getMD5Ev
 7593              		.weak	_ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
 7594              		.section	.rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE,"aG",%progbits,_
 7595              		.align	2
 7598              	_ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:
 7599 0000 00000000 		.word	0
 7600 0004 00000000 		.word	_ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
 7601 0008 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 7602 000c 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
 7603 0010 00000000 		.word	_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv
 7604              		.weak	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7605              		.section	.rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE,"aG",%progbits,_ZTVN3ros10Su
 7606              		.align	2
 7609              	_ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:
 7610 0000 00000000 		.word	0
 7611 0004 00000000 		.word	_ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
 7612 0008 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
 7613 000c 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
 7614 0010 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
 7615 0014 00000000 		.word	_ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
 7616              		.global	odom_pub
 7617              		.global	odom_msg
 7618              		.global	debug_pub
 7619              		.global	debug_msg
 7620              		.global	motor_sub
 7621              		.global	spinningAutonomously
 7622              		.global	waitForServos
 7623              		.global	shuttingDown
 7624              		.global	debugDim
 7625              		.global	odomDim
 7626              		.global	nh
 7627              		.global	initialized
 7628              		.global	lastMsg
 7629              		.global	currentMode
 7630              		.global	spinAngle
 7631              		.global	motorCmd
 7632              		.global	L
 7633              		.global	d
 7634              		.global	rear_left
 7635              		.global	rear_right
 7636              		.global	front_left
 7637              		.global	front_right
 7638              		.global	servo_right
 7639              		.global	servo_left
 7640              		.global	TX_Tail
 7641              		.global	TX_Head
 7642              		.global	RX_Tail
 7643              		.global	RX_Head
 7644              		.global	TX
 7645              		.global	RX
 7646              		.section	.rodata
 7647              		.align	2
 7648              		.set	.LANCHOR0,. + 0
 7651              	_ZN14rosserial_msgsL12REQUESTPARAME:
 7652 0000 726F7373 		.ascii	"rosserial_msgs/RequestParam\000"
 7652      65726961 
 7652      6C5F6D73 
 7652      67732F52 
 7652      65717565 
 7653              	.LC1:
 7654 001c DB0F49BF 		.word	3209236443
 7655 0020 DB0F493F 		.word	1061752795
 7656 0024 E4CB1640 		.word	1075235812
 7657 0028 E4CB16C0 		.word	3222719460
 7658              		.data
 7659              		.set	.LANCHOR2,. + 0
 7662              	currentMode:
 7663 0000 01       		.byte	1
 7664              		.bss
 7665              		.align	2
 7666              		.set	.LANCHOR1,. + 0
 7667              		.set	.LANCHOR3,. + 4344
 7670              	initialized:
 7671 0000 00       		.space	1
 7672 0001 000000   		.space	3
 7675              	lastMsg:
 7676 0004 00000000 		.space	4
 7679              	waitForServos:
 7680 0008 00       		.space	1
 7681 0009 000000   		.space	3
 7684              	L:
 7685 000c 00000000 		.space	4
 7688              	d:
 7689 0010 00000000 		.space	4
 7692              	servo_left:
 7693 0014 00000000 		.space	4
 7696              	servo_right:
 7697 0018 00000000 		.space	4
 7700              	motorCmd:
 7701 001c 00000000 		.space	16
 7701      00000000 
 7701      00000000 
 7701      00000000 
 7704              	spinAngle:
 7705 002c 00000000 		.space	4
 7708              	spinningAutonomously:
 7709 0030 00       		.space	1
 7710 0031 00       		.space	1
 7713              	TX_Head:
 7714 0032 0000     		.space	2
 7717              	TX_Tail:
 7718 0034 0000     		.space	2
 7721              	TX:
 7722 0036 00000000 		.space	1024
 7722      00000000 
 7722      00000000 
 7722      00000000 
 7722      00000000 
 7725              	RX_Tail:
 7726 0436 0000     		.space	2
 7729              	RX_Head:
 7730 0438 0000     		.space	2
 7733              	RX:
 7734 043a 00000000 		.space	1024
 7734      00000000 
 7734      00000000 
 7734      00000000 
 7734      00000000 
 7737              	shuttingDown:
 7738 083a 00       		.space	1
 7739 083b 00       		.space	1
 7742              	nh:
 7743 083c 00000000 		.space	2352
 7743      00000000 
 7743      00000000 
 7743      00000000 
 7743      00000000 
 7746              	motor_sub:
 7747 116c 00000000 		.space	64
 7747      00000000 
 7747      00000000 
 7747      00000000 
 7747      00000000 
 7750              	odom_pub:
 7751 11ac 00000000 		.space	20
 7751      00000000 
 7751      00000000 
 7751      00000000 
 7751      00000000 
 7754              	debug_pub:
 7755 11c0 00000000 		.space	20
 7755      00000000 
 7755      00000000 
 7755      00000000 
 7755      00000000 
 7758              	front_left:
 7759 11d4 00000000 		.space	4
 7762              	front_right:
 7763 11d8 00000000 		.space	4
 7766              	rear_left:
 7767 11dc 00000000 		.space	4
 7770              	rear_right:
 7771 11e0 00000000 		.space	4
 7774              	odom_msg:
 7775 11e4 00000000 		.space	48
 7775      00000000 
 7775      00000000 
 7775      00000000 
 7775      00000000 
 7778              	odomDim:
 7779 1214 00000000 		.space	16
 7779      00000000 
 7779      00000000 
 7779      00000000 
 7782              	debug_msg:
 7783 1224 00000000 		.space	48
 7783      00000000 
 7783      00000000 
 7783      00000000 
 7783      00000000 
 7786              	debugDim:
 7787 1254 00000000 		.space	16
 7787      00000000 
 7787      00000000 
 7787      00000000 
 7788              		.section	.rodata._ZN12roberto_msgs10MotorState6getMD5Ev.str1.1,"aMS",%progbits,1
 7789              	.LC18:
 7790 0000 65386235 		.ascii	"e8b5d1162b85151c49e02b8224796c0e\000"
 7790      64313136 
 7790      32623835 
 7790      31353163 
 7790      34396530 
 7791              		.section	.rodata._ZN12roberto_msgs10MotorState7getTypeEv.str1.1,"aMS",%progbits,1
 7792              	.LC17:
 7793 0000 726F6265 		.ascii	"roberto_msgs/MotorState\000"
 7793      72746F5F 
 7793      6D736773 
 7793      2F4D6F74 
 7793      6F725374 
 7794              		.section	.rodata._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev.str1.1,"aMS",%progbits,1
 7795              	.LC8:
 7796 0000 39663065 		.ascii	"9f0e98bda65981986ddf53afa7a40e49\000"
 7796      39386264 
 7796      61363539 
 7796      38313938 
 7796      36646466 
 7797              		.section	.rodata._ZN14rosserial_msgs3Log6getMD5Ev.str1.1,"aMS",%progbits,1
 7798              	.LC7:
 7799 0000 31316162 		.ascii	"11abd731c25933261cd6183bd12d6295\000"
 7799      64373331 
 7799      63323539 
 7799      33333236 
 7799      31636436 
 7800              		.section	.rodata._ZN14rosserial_msgs3Log7getTypeEv.str1.1,"aMS",%progbits,1
 7801              	.LC6:
 7802 0000 726F7373 		.ascii	"rosserial_msgs/Log\000"
 7802      65726961 
 7802      6C5F6D73 
 7802      67732F4C 
 7802      6F6700
 7803              		.section	.rodata._ZN14rosserial_msgs9TopicInfo6getMD5Ev.str1.1,"aMS",%progbits,1
 7804              	.LC5:
 7805 0000 30616435 		.ascii	"0ad51f88fc44892f8c10684077646005\000"
 7805      31663838 
 7805      66633434 
 7805      38393266 
 7805      38633130 
 7806              		.section	.rodata._ZN14rosserial_msgs9TopicInfo7getTypeEv.str1.1,"aMS",%progbits,1
 7807              	.LC4:
 7808 0000 726F7373 		.ascii	"rosserial_msgs/TopicInfo\000"
 7808      65726961 
 7808      6C5F6D73 
 7808      67732F54 
 7808      6F706963 
 7809              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv.
 7810              	.LC20:
 7811 0000 00       		.ascii	"\000"
 7812              		.section	.rodata._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
 7813              	.LC19:
 7814 0000 4D657373 		.ascii	"Message from device dropped: message larger than bu"
 7814      61676520 
 7814      66726F6D 
 7814      20646576 
 7814      69636520 
 7815 0033 66666572 		.ascii	"ffer.\000"
 7815      2E00
 7816              		.section	.rodata._ZN8std_msgs16MultiArrayLayout6getMD5Ev.str1.1,"aMS",%progbits,1
 7817              	.LC12:
 7818 0000 30666564 		.ascii	"0fed2a11c13e11c5571b4e2a995a91a3\000"
 7818      32613131 
 7818      63313365 
 7818      31316335 
 7818      35373162 
 7819              		.section	.rodata._ZN8std_msgs16MultiArrayLayout7getTypeEv.str1.1,"aMS",%progbits,1
 7820              	.LC11:
 7821 0000 7374645F 		.ascii	"std_msgs/MultiArrayLayout\000"
 7821      6D736773 
 7821      2F4D756C 
 7821      74694172 
 7821      7261794C 
 7822              		.section	.rodata._ZN8std_msgs17Float32MultiArray6getMD5Ev.str1.1,"aMS",%progbits,1
 7823              	.LC14:
 7824 0000 36613430 		.ascii	"6a40e0ffa6a17a503ac3f8616991b1f6\000"
 7824      65306666 
 7824      61366131 
 7824      37613530 
 7824      33616333 
 7825              		.section	.rodata._ZN8std_msgs17Float32MultiArray7getTypeEv.str1.1,"aMS",%progbits,1
 7826              	.LC13:
 7827 0000 7374645F 		.ascii	"std_msgs/Float32MultiArray\000"
 7827      6D736773 
 7827      2F466C6F 
 7827      61743332 
 7827      4D756C74 
 7828              		.section	.rodata._ZN8std_msgs19MultiArrayDimension6getMD5Ev.str1.1,"aMS",%progbits,1
 7829              	.LC10:
 7830 0000 34636430 		.ascii	"4cd0c83a8683deae40ecdac60e53bfa8\000"
 7830      63383361 
 7830      38363833 
 7830      64656165 
 7830      34306563 
 7831              		.section	.rodata._ZN8std_msgs19MultiArrayDimension7getTypeEv.str1.1,"aMS",%progbits,1
 7832              	.LC9:
 7833 0000 7374645F 		.ascii	"std_msgs/MultiArrayDimension\000"
 7833      6D736773 
 7833      2F4D756C 
 7833      74694172 
 7833      72617944 
 7834              		.section	.rodata._ZN8std_msgs4Time6getMD5Ev.str1.1,"aMS",%progbits,1
 7835              	.LC3:
 7836 0000 63643731 		.ascii	"cd7166c74c552c311fbcc2fe5a7bc289\000"
 7836      36366337 
 7836      34633535 
 7836      32633331 
 7836      31666263 
 7837              		.section	.rodata._ZN8std_msgs4Time7getTypeEv.str1.1,"aMS",%progbits,1
 7838              	.LC2:
 7839 0000 7374645F 		.ascii	"std_msgs/Time\000"
 7839      6D736773 
 7839      2F54696D 
 7839      6500
 7840              		.section	.rodata._ZN8std_msgs6Header6getMD5Ev.str1.1,"aMS",%progbits,1
 7841              	.LC16:
 7842 0000 32313736 		.ascii	"2176decaecbce78abc3b96ef049fabed\000"
 7842      64656361 
 7842      65636263 
 7842      65373861 
 7842      62633362 
 7843              		.section	.rodata._ZN8std_msgs6Header7getTypeEv.str1.1,"aMS",%progbits,1
 7844              	.LC15:
 7845 0000 7374645F 		.ascii	"std_msgs/Header\000"
 7845      6D736773 
 7845      2F486561 
 7845      64657200 
 7846              		.section	.rodata.str1.1,"aMS",%progbits,1
 7847              	.LC21:
 7848 0000 73657276 		.ascii	"servo_left\000"
 7848      6F5F6C65 
 7848      667400
 7849              	.LC22:
 7850 000b 73657276 		.ascii	"servo_right\000"
 7850      6F5F7269 
 7850      67687400 
 7851              	.LC23:
 7852 0017 66726F6E 		.ascii	"front_right\000"
 7852      745F7269 
 7852      67687400 
 7853              	.LC24:
 7854 0023 66726F6E 		.ascii	"front_left\000"
 7854      745F6C65 
 7854      667400
 7855              	.LC25:
 7856 002e 72656172 		.ascii	"rear_left\000"
 7856      5F6C6566 
 7856      7400
 7857              	.LC26:
 7858 0038 72656172 		.ascii	"rear_right\000"
 7858      5F726967 
 7858      687400
 7859              	.LC27:
 7860 0043 636D645F 		.ascii	"cmd_vel\000"
 7860      76656C00 
 7861              	.LC28:
 7862 004b 64656275 		.ascii	"debug\000"
 7862      6700
 7863              	.LC29:
 7864 0051 6F646F6D 		.ascii	"odom_vel\000"
 7864      5F76656C 
 7864      00
 7865              		.text
 7866              	.Letext0:
 7867              		.file 20 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 7868              		.file 21 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/machine/_default_types.h
 7869              		.file 22 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_stdint.h"
 7870              		.file 23 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/stdint.h"
 7871              		.file 24 "./lib/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.h"
 7872              		.file 25 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 7873              		.file 26 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 7874              		.file 27 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/lib/gcc/arm-none-eabi/6.2.1/include/stddef.h"
 7875              		.file 28 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/lib/gcc/arm-none-eabi/6.2.1/include/stdarg.h"
 7876              		.file 29 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/lock.h"
 7877              		.file 30 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/_types.h"
 7878              		.file 31 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/reent.h"
 7879              		.file 32 "<built-in>"
 7880              		.file 33 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/stdio.h"
 7881              		.file 34 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/cpp_type_
 7882              		.file 35 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/type_traits"
 7883              		.file 36 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/arm-none-eabi/
 7884              		.file 37 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_pair.
 7885              		.file 38 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/exception
 7886              		.file 39 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/debug/debug.h"
 7887              		.file 40 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cwchar"
 7888              		.file 41 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cstdint"
 7889              		.file 42 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/new"
 7890              		.file 43 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/clocale"
 7891              		.file 44 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cstdlib"
 7892              		.file 45 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/cstdio"
 7893              		.file 46 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/uses_allo
 7894              		.file 47 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/stl_itera
 7895              		.file 48 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/tuple"
 7896              		.file 49 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/bits/predefine
 7897              		.file 50 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/ext/new_alloca
 7898              		.file 51 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/ext/numeric_tr
 7899              		.file 52 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/ext/type_trait
 7900              		.file 53 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/math.h"
 7901              		.file 54 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/math.h"
 7902              		.file 55 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/wchar.h"
 7903              		.file 56 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/locale.h"
 7904              		.file 57 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/ctype.h"
 7905              		.file 58 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/stdlib.h"
 7906              		.file 59 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/sys/errno.h"
 7907              		.file 60 "./inc/motorSettings.h"
 7908              		.file 61 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/c++/6.2.1/stdlib.h"
 7909              		.file 62 "./lib/ros_lib/ros/duration.h"
 7910              		.file 63 "./lib/ros_lib/ros.h"
 7911              		.file 64 "./lib/ros_lib/tf/tf.h"
 7912              		.file 65 "./lib/ros_lib/tf/tfMessage.h"
 7913              		.file 66 "./lib/ros_lib/geometry_msgs/Point.h"
 7914              		.file 67 "./lib/ros_lib/geometry_msgs/TransformStamped.h"
 7915              		.file 68 "./lib/ros_lib/geometry_msgs/Transform.h"
 7916              		.file 69 "./lib/ros_lib/geometry_msgs/Vector3.h"
 7917              		.file 70 "./lib/ros_lib/geometry_msgs/Quaternion.h"
 7918              		.file 71 "./lib/ros_lib/geometry_msgs/PoseWithCovariance.h"
 7919              		.file 72 "./lib/ros_lib/geometry_msgs/TwistWithCovariance.h"
 7920              		.file 73 "./lib/ros_lib/geometry_msgs/Twist.h"
 7921              		.file 74 "./lib/ros_lib/geometry_msgs/Pose.h"
 7922              		.file 75 "./inc/motor.h"
 7923              		.file 76 "./lib/ros_lib/std_msgs/UInt8.h"
 7924              		.file 77 "./lib/ros_lib/std_msgs/Float32.h"
 7925              		.file 78 "./lib/ros_lib/sensor_msgs/Joy.h"
 7926              		.file 79 "./lib/ros_lib/nav_msgs/Odometry.h"
 7927              		.file 80 "./inc/stm32_time.h"
 7928              		.file 81 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h"
 7929              		.file 82 "./lib/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h"
 7930              		.file 83 "./inc/led.h"
 7931              		.file 84 "./inc/encoder.h"
 7932              		.file 85 "/opt/gcc-arm/gcc-arm-none-eabi-6_2-2016q4/arm-none-eabi/include/string.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccC8f83K.s:16     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:23     .text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 _ZNK8std_msgs4Time9serializeEPh
.ARM.exidx.text._ZNK8std_msgs4Time9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:73     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:80     .text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 _ZN8std_msgs4Time11deserializeEPh
.ARM.exidx.text._ZN8std_msgs4Time11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:131    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:138    .text._ZN8std_msgs4Time7getTypeEv:0000000000000000 _ZN8std_msgs4Time7getTypeEv
     /tmp/ccC8f83K.s:154    .text._ZN8std_msgs4Time7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:161    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:168    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 _ZN8std_msgs4Time6getMD5Ev
     /tmp/ccC8f83K.s:184    .text._ZN8std_msgs4Time6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs4Time6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:191    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:198    .text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 _ZN14rosserial_msgs9TopicInfo11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:371    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:378    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 _ZN14rosserial_msgs9TopicInfo7getTypeEv
     /tmp/ccC8f83K.s:394    .text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:401    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:408    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 _ZN14rosserial_msgs9TopicInfo6getMD5Ev
     /tmp/ccC8f83K.s:424    .text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs9TopicInfo6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:431    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:438    .text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 _ZN14rosserial_msgs3Log11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs3Log11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:502    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:509    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 _ZN14rosserial_msgs3Log7getTypeEv
     /tmp/ccC8f83K.s:525    .text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:532    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:539    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 _ZN14rosserial_msgs3Log6getMD5Ev
     /tmp/ccC8f83K.s:555    .text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs3Log6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:562    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:569    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse7getTypeEv
     /tmp/ccC8f83K.s:586    .text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:593    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:600    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse6getMD5Ev
     /tmp/ccC8f83K.s:616    .text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:623    .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:630    .text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:0000000000000000 _ZN8std_msgs19MultiArrayDimension11deserializeEPh
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:723    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:730    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:0000000000000000 _ZN8std_msgs19MultiArrayDimension7getTypeEv
     /tmp/ccC8f83K.s:746    .text._ZN8std_msgs19MultiArrayDimension7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:753    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:760    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:0000000000000000 _ZN8std_msgs19MultiArrayDimension6getMD5Ev
     /tmp/ccC8f83K.s:776    .text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs19MultiArrayDimension6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:783    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:790    .text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:0000000000000000 _ZNK8std_msgs16MultiArrayLayout9serializeEPh
.ARM.exidx.text._ZNK8std_msgs16MultiArrayLayout9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:883    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:890    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:0000000000000000 _ZN8std_msgs16MultiArrayLayout7getTypeEv
     /tmp/ccC8f83K.s:906    .text._ZN8std_msgs16MultiArrayLayout7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:913    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:920    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:0000000000000000 _ZN8std_msgs16MultiArrayLayout6getMD5Ev
     /tmp/ccC8f83K.s:936    .text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:943    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:950    .text._ZNK8std_msgs17Float32MultiArray9serializeEPh:0000000000000000 _ZNK8std_msgs17Float32MultiArray9serializeEPh
.ARM.exidx.text._ZNK8std_msgs17Float32MultiArray9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:1043   .text._ZN8std_msgs17Float32MultiArray7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:1050   .text._ZN8std_msgs17Float32MultiArray7getTypeEv:0000000000000000 _ZN8std_msgs17Float32MultiArray7getTypeEv
     /tmp/ccC8f83K.s:1066   .text._ZN8std_msgs17Float32MultiArray7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:1073   .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:1080   .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:0000000000000000 _ZN8std_msgs17Float32MultiArray6getMD5Ev
     /tmp/ccC8f83K.s:1096   .text._ZN8std_msgs17Float32MultiArray6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:1103   .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:1110   .text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 _ZN8std_msgs6Header11deserializeEPh
.ARM.exidx.text._ZN8std_msgs6Header11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:1217   .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:1224   .text._ZN8std_msgs6Header7getTypeEv:0000000000000000 _ZN8std_msgs6Header7getTypeEv
     /tmp/ccC8f83K.s:1240   .text._ZN8std_msgs6Header7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:1247   .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:1254   .text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 _ZN8std_msgs6Header6getMD5Ev
     /tmp/ccC8f83K.s:1270   .text._ZN8std_msgs6Header6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN8std_msgs6Header6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:1277   .text._ZN12roberto_msgs10MotorState7getTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:1284   .text._ZN12roberto_msgs10MotorState7getTypeEv:0000000000000000 _ZN12roberto_msgs10MotorState7getTypeEv
     /tmp/ccC8f83K.s:1301   .text._ZN12roberto_msgs10MotorState7getTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState7getTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:1308   .text._ZN12roberto_msgs10MotorState6getMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:1315   .text._ZN12roberto_msgs10MotorState6getMD5Ev:0000000000000000 _ZN12roberto_msgs10MotorState6getMD5Ev
     /tmp/ccC8f83K.s:1331   .text._ZN12roberto_msgs10MotorState6getMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN12roberto_msgs10MotorState6getMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:1338   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv:0000000000000000 $t
     /tmp/ccC8f83K.s:1345   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE9connectedEv:0000000000000000 $d
     /tmp/ccC8f83K.s:1365   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:1372   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:0000000000000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE15getEndpointTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:1392   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:1399   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:0000000000000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv
     /tmp/ccC8f83K.s:1415   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:0000000000000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE10getMsgTypeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:1422   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:0000000000000000 $t
     /tmp/ccC8f83K.s:1429   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:0000000000000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev
     /tmp/ccC8f83K.s:1445   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:0000000000000004 $d
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE9getMsgMD5Ev:0000000000000000 $d
     /tmp/ccC8f83K.s:1452   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:1459   .text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 _ZNK8std_msgs6Header9serializeEPh
.ARM.exidx.text._ZNK8std_msgs6Header9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:1551   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:1558   .text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:0000000000000000 _ZNK8std_msgs19MultiArrayDimension9serializeEPh
.ARM.exidx.text._ZNK8std_msgs19MultiArrayDimension9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:1635   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:1642   .text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 _ZNK14rosserial_msgs20RequestParamResponse9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs20RequestParamResponse9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:1855   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:1862   .text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 _ZNK14rosserial_msgs3Log9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs3Log9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:1914   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:1921   .text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 _ZNK14rosserial_msgs9TopicInfo9serializeEPh
.ARM.exidx.text._ZNK14rosserial_msgs9TopicInfo9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:2050   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:2057   .text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 _ZN14rosserial_msgs20RequestParamResponse11deserializeEPh
.ARM.exidx.text._ZN14rosserial_msgs20RequestParamResponse11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:2312   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:2319   .text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:0000000000000000 _ZN8std_msgs16MultiArrayLayout11deserializeEPh
.ARM.exidx.text._ZN8std_msgs16MultiArrayLayout11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:2434   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:2441   .text._ZN8std_msgs17Float32MultiArray11deserializeEPh:0000000000000000 _ZN8std_msgs17Float32MultiArray11deserializeEPh
.ARM.exidx.text._ZN8std_msgs17Float32MultiArray11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:2563   .text:0000000000000000 $t
     /tmp/ccC8f83K.s:2570   .text:0000000000000000 _Z8motor_cbRKN12roberto_msgs10MotorStateE
     /tmp/ccC8f83K.s:3029   .text:0000000000000240 $d
                       .ARM.exidx:0000000000000000 $d
     /tmp/ccC8f83K.s:3049   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:0000000000000000 $t
     /tmp/ccC8f83K.s:3056   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE
     /tmp/ccC8f83K.s:3366   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:0000000000000108 $d
     /tmp/ccC8f83K.s:7514   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 _ZTVN14rosserial_msgs3LogE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE7publishEiPKNS_3MsgE:0000000000000000 $d
     /tmp/ccC8f83K.s:3375   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:0000000000000000 $t
     /tmp/ccC8f83K.s:3382   .text._ZN3ros3Msg19serializeAvrFloat64EPhf:0000000000000000 _ZN3ros3Msg19serializeAvrFloat64EPhf
.ARM.exidx.text._ZN3ros3Msg19serializeAvrFloat64EPhf:0000000000000000 $d
     /tmp/ccC8f83K.s:3471   .text._ZNK12roberto_msgs10MotorState9serializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:3478   .text._ZNK12roberto_msgs10MotorState9serializeEPh:0000000000000000 _ZNK12roberto_msgs10MotorState9serializeEPh
.ARM.exidx.text._ZNK12roberto_msgs10MotorState9serializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:3552   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:0000000000000000 $t
     /tmp/ccC8f83K.s:3559   .text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:0000000000000000 _ZN3ros3Msg21deserializeAvrFloat64EPKhPf
.ARM.exidx.text._ZN3ros3Msg21deserializeAvrFloat64EPKhPf:0000000000000000 $d
     /tmp/ccC8f83K.s:3626   .text._ZN12roberto_msgs10MotorState11deserializeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:3633   .text._ZN12roberto_msgs10MotorState11deserializeEPh:0000000000000000 _ZN12roberto_msgs10MotorState11deserializeEPh
.ARM.exidx.text._ZN12roberto_msgs10MotorState11deserializeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:3707   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:3714   .text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:0000000000000000 _ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh
.ARM.exidx.text._ZN3ros10SubscriberIN12roberto_msgs10MotorStateEE8callbackEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:3758   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:0000000000000000 $t
     /tmp/ccC8f83K.s:3765   .text._ZN3ros9Publisher7publishEPKNS_3MsgE:0000000000000000 _ZN3ros9Publisher7publishEPKNS_3MsgE
.ARM.exidx.text._ZN3ros9Publisher7publishEPKNS_3MsgE:0000000000000000 $d
     /tmp/ccC8f83K.s:3801   .text._ZN15UsartWithBufferC2Ei:0000000000000000 $t
     /tmp/ccC8f83K.s:3808   .text._ZN15UsartWithBufferC2Ei:0000000000000000 _ZN15UsartWithBufferC2Ei
     /tmp/ccC8f83K.s:3958   .text._ZN15UsartWithBufferC2Ei:00000000000000b4 $d
.ARM.exidx.text._ZN15UsartWithBufferC2Ei:0000000000000000 $d
     /tmp/ccC8f83K.s:3808   .text._ZN15UsartWithBufferC2Ei:0000000000000000 _ZN15UsartWithBufferC1Ei
     /tmp/ccC8f83K.s:3968   .text:0000000000000270 $t
     /tmp/ccC8f83K.s:3975   .text:0000000000000270 USART1_IRQHandler
     /tmp/ccC8f83K.s:4136   .text:0000000000000314 $d
     /tmp/ccC8f83K.s:4146   .text:000000000000031c $t
     /tmp/ccC8f83K.s:4153   .text:000000000000031c EXTI2_IRQHandler
     /tmp/ccC8f83K.s:4195   .text:000000000000033c $d
                       .ARM.extab:0000000000000000 $d
     /tmp/ccC8f83K.s:4200   .text:0000000000000340 $t
     /tmp/ccC8f83K.s:4207   .text:0000000000000340 HardFault_Handler
     /tmp/ccC8f83K.s:4225   .text:0000000000000350 _MSP
     /tmp/ccC8f83K.s:4246   .text:0000000000000358 hard_fault_handler_c
     /tmp/ccC8f83K.s:4295   .text:0000000000000380 $d
     /tmp/ccC8f83K.s:4305   .text:0000000000000388 $t
     /tmp/ccC8f83K.s:4312   .text:0000000000000388 _Z13assert_failedPhm
     /tmp/ccC8f83K.s:4330   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:0000000000000000 $t
     /tmp/ccC8f83K.s:4337   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv
     /tmp/ccC8f83K.s:4414   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:0000000000000024 $d
     /tmp/ccC8f83K.s:7490   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 _ZTVN8std_msgs4TimeE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15requestSyncTimeEv:0000000000000000 $d
     /tmp/ccC8f83K.s:4420   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:0000000000000000 $t
     /tmp/ccC8f83K.s:4427   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv
     /tmp/ccC8f83K.s:4603   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:00000000000000b4 $d
     /tmp/ccC8f83K.s:7502   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTVN14rosserial_msgs9TopicInfoE
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE15negotiateTopicsEv:0000000000000000 $d
     /tmp/ccC8f83K.s:4610   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:0000000000000000 $t
     /tmp/ccC8f83K.s:4617   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh
     /tmp/ccC8f83K.s:4768   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:0000000000000074 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8syncTimeEPh:0000000000000000 $d
     /tmp/ccC8f83K.s:4776   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:0000000000000000 $t
     /tmp/ccC8f83K.s:4783   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:0000000000000000 _ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv
     /tmp/ccC8f83K.s:5193   .text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:0000000000000220 $d
.ARM.exidx.text._ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EE8spinOnceEv:0000000000000000 $d
     /tmp/ccC8f83K.s:5201   .text.startup:0000000000000000 $t
     /tmp/ccC8f83K.s:5208   .text.startup:0000000000000000 main
     /tmp/ccC8f83K.s:5700   .text.startup:000000000000031c $d
     /tmp/ccC8f83K.s:5724   .text.startup:0000000000000378 $t
     /tmp/ccC8f83K.s:6175   .text.startup:0000000000000600 $d
     /tmp/ccC8f83K.s:6191   .text.startup:0000000000000628 $t
     /tmp/ccC8f83K.s:6602   .text.startup:0000000000000820 $d
          .ARM.exidx.text.startup:0000000000000000 $d
     /tmp/ccC8f83K.s:6611   .text.startup:0000000000000830 $t
     /tmp/ccC8f83K.s:6617   .text.startup:0000000000000830 _GLOBAL__sub_I_RX
     /tmp/ccC8f83K.s:7224   .text.startup:00000000000009c8 $d
     /tmp/ccC8f83K.s:7598   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:0000000000000000 _ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccC8f83K.s:7526   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTVN14rosserial_msgs20RequestParamResponseE
     /tmp/ccC8f83K.s:7609   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:0000000000000000 _ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccC8f83K.s:7586   .rodata._ZTVN12roberto_msgs10MotorStateE:0000000000000000 _ZTVN12roberto_msgs10MotorStateE
     /tmp/ccC8f83K.s:7538   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:0000000000000000 _ZTVN8std_msgs19MultiArrayDimensionE
     /tmp/ccC8f83K.s:7574   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 _ZTVN8std_msgs6HeaderE
     /tmp/ccC8f83K.s:7562   .rodata._ZTVN8std_msgs17Float32MultiArrayE:0000000000000000 _ZTVN8std_msgs17Float32MultiArrayE
     /tmp/ccC8f83K.s:7550   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:0000000000000000 _ZTVN8std_msgs16MultiArrayLayoutE
          .ARM.extab.text.startup:0000000000000000 $d
     /tmp/ccC8f83K.s:7275   .init_array:0000000000000000 $d
     /tmp/ccC8f83K.s:7281   .rodata._ZTSN3ros3MsgE:0000000000000000 _ZTSN3ros3MsgE
     /tmp/ccC8f83K.s:7288   .rodata._ZTIN3ros3MsgE:0000000000000000 _ZTIN3ros3MsgE
     /tmp/ccC8f83K.s:7285   .rodata._ZTIN3ros3MsgE:0000000000000000 $d
     /tmp/ccC8f83K.s:7295   .rodata._ZTSN8std_msgs4TimeE:0000000000000000 _ZTSN8std_msgs4TimeE
     /tmp/ccC8f83K.s:7302   .rodata._ZTIN8std_msgs4TimeE:0000000000000000 _ZTIN8std_msgs4TimeE
     /tmp/ccC8f83K.s:7299   .rodata._ZTIN8std_msgs4TimeE:0000000000000000 $d
     /tmp/ccC8f83K.s:7310   .rodata._ZTSN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTSN14rosserial_msgs9TopicInfoE
     /tmp/ccC8f83K.s:7317   .rodata._ZTIN14rosserial_msgs9TopicInfoE:0000000000000000 _ZTIN14rosserial_msgs9TopicInfoE
     /tmp/ccC8f83K.s:7314   .rodata._ZTIN14rosserial_msgs9TopicInfoE:0000000000000000 $d
     /tmp/ccC8f83K.s:7325   .rodata._ZTSN14rosserial_msgs3LogE:0000000000000000 _ZTSN14rosserial_msgs3LogE
     /tmp/ccC8f83K.s:7332   .rodata._ZTIN14rosserial_msgs3LogE:0000000000000000 _ZTIN14rosserial_msgs3LogE
     /tmp/ccC8f83K.s:7329   .rodata._ZTIN14rosserial_msgs3LogE:0000000000000000 $d
     /tmp/ccC8f83K.s:7340   .rodata._ZTSN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTSN14rosserial_msgs20RequestParamResponseE
     /tmp/ccC8f83K.s:7347   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:0000000000000000 _ZTIN14rosserial_msgs20RequestParamResponseE
     /tmp/ccC8f83K.s:7344   .rodata._ZTIN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
     /tmp/ccC8f83K.s:7355   .rodata._ZTSN3ros15NodeHandleBase_E:0000000000000000 _ZTSN3ros15NodeHandleBase_E
     /tmp/ccC8f83K.s:7362   .rodata._ZTIN3ros15NodeHandleBase_E:0000000000000000 _ZTIN3ros15NodeHandleBase_E
     /tmp/ccC8f83K.s:7359   .rodata._ZTIN3ros15NodeHandleBase_E:0000000000000000 $d
     /tmp/ccC8f83K.s:7369   .rodata._ZTSN3ros11Subscriber_E:0000000000000000 _ZTSN3ros11Subscriber_E
     /tmp/ccC8f83K.s:7376   .rodata._ZTIN3ros11Subscriber_E:0000000000000000 _ZTIN3ros11Subscriber_E
     /tmp/ccC8f83K.s:7373   .rodata._ZTIN3ros11Subscriber_E:0000000000000000 $d
     /tmp/ccC8f83K.s:7383   .rodata._ZTSN8std_msgs19MultiArrayDimensionE:0000000000000000 _ZTSN8std_msgs19MultiArrayDimensionE
     /tmp/ccC8f83K.s:7390   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:0000000000000000 _ZTIN8std_msgs19MultiArrayDimensionE
     /tmp/ccC8f83K.s:7387   .rodata._ZTIN8std_msgs19MultiArrayDimensionE:0000000000000000 $d
     /tmp/ccC8f83K.s:7398   .rodata._ZTSN8std_msgs16MultiArrayLayoutE:0000000000000000 _ZTSN8std_msgs16MultiArrayLayoutE
     /tmp/ccC8f83K.s:7405   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:0000000000000000 _ZTIN8std_msgs16MultiArrayLayoutE
     /tmp/ccC8f83K.s:7402   .rodata._ZTIN8std_msgs16MultiArrayLayoutE:0000000000000000 $d
     /tmp/ccC8f83K.s:7413   .rodata._ZTSN8std_msgs17Float32MultiArrayE:0000000000000000 _ZTSN8std_msgs17Float32MultiArrayE
     /tmp/ccC8f83K.s:7420   .rodata._ZTIN8std_msgs17Float32MultiArrayE:0000000000000000 _ZTIN8std_msgs17Float32MultiArrayE
     /tmp/ccC8f83K.s:7417   .rodata._ZTIN8std_msgs17Float32MultiArrayE:0000000000000000 $d
     /tmp/ccC8f83K.s:7428   .rodata._ZTSN8std_msgs6HeaderE:0000000000000000 _ZTSN8std_msgs6HeaderE
     /tmp/ccC8f83K.s:7435   .rodata._ZTIN8std_msgs6HeaderE:0000000000000000 _ZTIN8std_msgs6HeaderE
     /tmp/ccC8f83K.s:7432   .rodata._ZTIN8std_msgs6HeaderE:0000000000000000 $d
     /tmp/ccC8f83K.s:7443   .rodata._ZTSN12roberto_msgs10MotorStateE:0000000000000000 _ZTSN12roberto_msgs10MotorStateE
     /tmp/ccC8f83K.s:7450   .rodata._ZTIN12roberto_msgs10MotorStateE:0000000000000000 _ZTIN12roberto_msgs10MotorStateE
     /tmp/ccC8f83K.s:7447   .rodata._ZTIN12roberto_msgs10MotorStateE:0000000000000000 $d
     /tmp/ccC8f83K.s:7458   .rodata._ZTSN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:0000000000000000 _ZTSN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccC8f83K.s:7466   .rodata._ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:0000000000000000 _ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE
     /tmp/ccC8f83K.s:7463   .rodata._ZTIN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:0000000000000000 $d
     /tmp/ccC8f83K.s:7474   .rodata._ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:0000000000000000 _ZTSN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccC8f83K.s:7481   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:0000000000000000 _ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE
     /tmp/ccC8f83K.s:7478   .rodata._ZTIN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:0000000000000000 $d
     /tmp/ccC8f83K.s:7487   .rodata._ZTVN8std_msgs4TimeE:0000000000000000 $d
     /tmp/ccC8f83K.s:7499   .rodata._ZTVN14rosserial_msgs9TopicInfoE:0000000000000000 $d
     /tmp/ccC8f83K.s:7511   .rodata._ZTVN14rosserial_msgs3LogE:0000000000000000 $d
     /tmp/ccC8f83K.s:7523   .rodata._ZTVN14rosserial_msgs20RequestParamResponseE:0000000000000000 $d
     /tmp/ccC8f83K.s:7535   .rodata._ZTVN8std_msgs19MultiArrayDimensionE:0000000000000000 $d
     /tmp/ccC8f83K.s:7547   .rodata._ZTVN8std_msgs16MultiArrayLayoutE:0000000000000000 $d
     /tmp/ccC8f83K.s:7559   .rodata._ZTVN8std_msgs17Float32MultiArrayE:0000000000000000 $d
     /tmp/ccC8f83K.s:7571   .rodata._ZTVN8std_msgs6HeaderE:0000000000000000 $d
     /tmp/ccC8f83K.s:7583   .rodata._ZTVN12roberto_msgs10MotorStateE:0000000000000000 $d
     /tmp/ccC8f83K.s:7595   .rodata._ZTVN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi1024ELi1024EEE:0000000000000000 $d
     /tmp/ccC8f83K.s:7606   .rodata._ZTVN3ros10SubscriberIN12roberto_msgs10MotorStateEEE:0000000000000000 $d
     /tmp/ccC8f83K.s:7750   .bss:00000000000011ac odom_pub
     /tmp/ccC8f83K.s:7774   .bss:00000000000011e4 odom_msg
     /tmp/ccC8f83K.s:7754   .bss:00000000000011c0 debug_pub
     /tmp/ccC8f83K.s:7782   .bss:0000000000001224 debug_msg
     /tmp/ccC8f83K.s:7746   .bss:000000000000116c motor_sub
     /tmp/ccC8f83K.s:7708   .bss:0000000000000030 spinningAutonomously
     /tmp/ccC8f83K.s:7679   .bss:0000000000000008 waitForServos
     /tmp/ccC8f83K.s:7737   .bss:000000000000083a shuttingDown
     /tmp/ccC8f83K.s:7786   .bss:0000000000001254 debugDim
     /tmp/ccC8f83K.s:7778   .bss:0000000000001214 odomDim
     /tmp/ccC8f83K.s:7742   .bss:000000000000083c nh
     /tmp/ccC8f83K.s:7670   .bss:0000000000000000 initialized
     /tmp/ccC8f83K.s:7675   .bss:0000000000000004 lastMsg
     /tmp/ccC8f83K.s:7662   .data:0000000000000000 currentMode
     /tmp/ccC8f83K.s:7704   .bss:000000000000002c spinAngle
     /tmp/ccC8f83K.s:7700   .bss:000000000000001c motorCmd
     /tmp/ccC8f83K.s:7684   .bss:000000000000000c L
     /tmp/ccC8f83K.s:7688   .bss:0000000000000010 d
     /tmp/ccC8f83K.s:7766   .bss:00000000000011dc rear_left
     /tmp/ccC8f83K.s:7770   .bss:00000000000011e0 rear_right
     /tmp/ccC8f83K.s:7758   .bss:00000000000011d4 front_left
     /tmp/ccC8f83K.s:7762   .bss:00000000000011d8 front_right
     /tmp/ccC8f83K.s:7696   .bss:0000000000000018 servo_right
     /tmp/ccC8f83K.s:7692   .bss:0000000000000014 servo_left
     /tmp/ccC8f83K.s:7717   .bss:0000000000000034 TX_Tail
     /tmp/ccC8f83K.s:7713   .bss:0000000000000032 TX_Head
     /tmp/ccC8f83K.s:7725   .bss:0000000000000436 RX_Tail
     /tmp/ccC8f83K.s:7729   .bss:0000000000000438 RX_Head
     /tmp/ccC8f83K.s:7721   .bss:0000000000000036 TX
     /tmp/ccC8f83K.s:7733   .bss:000000000000043a RX
     /tmp/ccC8f83K.s:7647   .rodata:0000000000000000 $d
     /tmp/ccC8f83K.s:7651   .rodata:0000000000000000 _ZN14rosserial_msgsL12REQUESTPARAME
     /tmp/ccC8f83K.s:7665   .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 _ZN15UsartWithBufferC5Ei

UNDEFINED SYMBOLS
__aeabi_unwind_cpp_pr0
strlen
memcpy
realloc
__aeabi_fcmpeq
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_fadd
__aeabi_fmul
__aeabi_fsub
__aeabi_fdiv
__aeabi_fcmpgt
__aeabi_fcmplt
millis
sin
atanf
USART_ITConfig
RCC_APB2PeriphClockCmd
GPIO_Init
USART_Cmd
USART_Init
USART_GetITStatus
USART_ReceiveData
USART_ClearITPendingBit
USART_SendData
EXTI_GetITStatus
EXTI_ClearITPendingBit
__aeabi_unwind_cpp_pr1
RCC_APB1PeriphClockCmd
_ZN3ros16normalizeSecNSecERmS0_
__aeabi_dadd
__aeabi_f2iz
RCC_Configuration
SysTick_Init
GPIO_PinRemapConfig
I2C1_Init
DEBUG_Init
SHUTDOWN_Init
LED_Init
delay
_ZN13motorSettingsC1EiPKcP11TIM_TypeDefi
_ZN13motorSettings9setDCPinsEiP12GPIO_TypeDefiS1_iS1_iS1_iS1_
_ZN13motorSettings12setRegulatorEfffff
_ZN5motor11createMotorEP13motorSettings
_Znaj
led_set
sqrt
debug_toggle
cosf
sinf
sqrtf
__gxx_personality_v0
_Znwj
_ZdlPv
__cxa_end_cleanup
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
